{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the UI-Lovelace-Minimalist wiki \u00b6 Under construction! Hello dear UI Lovelace Minimalist fan. Nice that you found our new wiki. This is currently under construction! The contents are therefore to be enjoyed with caution and can still change at any time. This wiki is intended to help you install and use the wonderful \u201ctheme\u201d UI-Lovelace-Minimalist created by tben. Feel free to look around and get a deeper insight into the internal functions and tricks, this \u201ctheme\u201d is using. Use them to your own likings, and if you develop something, that others must see, feel free to post it to this wiki or in the thread at the Home Assistant forum, which you can find here . Youtube video on how to setup UI Minimalist \u00b6 What is \"Ui-Lovelace-Minimalist\" \u00b6 We call it a \"theme\" (the quotation marks are on purpose), as it uses theme specific techniques, but it uses so much more, that one can\u2019t say it is only a theme. This \"theme\" is depending on two things, namely using a theme and make extensive use of the template function from the custom_component button-card made by RomRaider. A little history \u00b6 This \"theme\" is based on the awesome work 7ahang made on behance (see the links under credits), and was developed from tben for his own use of Home Assistant. But as this \u201ctheme\u201d is such a wonderful and nice look for Home Assistant, it quickly became clear, that some organizational work should be done, to give others the possibility to use it as well. And here we are! Contributions \u00b6 This is a living project and all input is very welcome! If you configured and designed a card, that you would like to share, please feel free to do so! We are happy to include your contribution so others can use it as well! Credits \u00b6 This design was made by tben A lot of inspiration is taken from 7ahang\u2019s work found on Behance. Contributions from others in the HomeAssistant forum thread, you can find it here. The technical part is realised mostly by taking advantage of the great work RomRaider did with his button-card . Code refactor, cleanup and maintainance by schumijo and paddy0174 & CM000n . dwainscheeren for his inspiration to deliver themes via HACS. Wiki by paddy0174 . Special thanks to clemalex and schumijo for contributing their cards to the main repository. stokkie90 for implementing most of the HACS functionalities. And of course all the others who cannot be named here due to space limitations. \ud83d\ude09 Thank you for your contribution \u2764\ufe0f","title":"Home"},{"location":"#welcome-to-the-ui-lovelace-minimalist-wiki","text":"Under construction! Hello dear UI Lovelace Minimalist fan. Nice that you found our new wiki. This is currently under construction! The contents are therefore to be enjoyed with caution and can still change at any time. This wiki is intended to help you install and use the wonderful \u201ctheme\u201d UI-Lovelace-Minimalist created by tben. Feel free to look around and get a deeper insight into the internal functions and tricks, this \u201ctheme\u201d is using. Use them to your own likings, and if you develop something, that others must see, feel free to post it to this wiki or in the thread at the Home Assistant forum, which you can find here .","title":"Welcome to the UI-Lovelace-Minimalist wiki"},{"location":"#youtube-video-on-how-to-setup-ui-minimalist","text":"","title":"Youtube video on how to setup UI Minimalist"},{"location":"#what-is-ui-lovelace-minimalist","text":"We call it a \"theme\" (the quotation marks are on purpose), as it uses theme specific techniques, but it uses so much more, that one can\u2019t say it is only a theme. This \"theme\" is depending on two things, namely using a theme and make extensive use of the template function from the custom_component button-card made by RomRaider.","title":"What is \"Ui-Lovelace-Minimalist\""},{"location":"#a-little-history","text":"This \"theme\" is based on the awesome work 7ahang made on behance (see the links under credits), and was developed from tben for his own use of Home Assistant. But as this \u201ctheme\u201d is such a wonderful and nice look for Home Assistant, it quickly became clear, that some organizational work should be done, to give others the possibility to use it as well. And here we are!","title":"A little history"},{"location":"#contributions","text":"This is a living project and all input is very welcome! If you configured and designed a card, that you would like to share, please feel free to do so! We are happy to include your contribution so others can use it as well!","title":"Contributions"},{"location":"#credits","text":"This design was made by tben A lot of inspiration is taken from 7ahang\u2019s work found on Behance. Contributions from others in the HomeAssistant forum thread, you can find it here. The technical part is realised mostly by taking advantage of the great work RomRaider did with his button-card . Code refactor, cleanup and maintainance by schumijo and paddy0174 & CM000n . dwainscheeren for his inspiration to deliver themes via HACS. Wiki by paddy0174 . Special thanks to clemalex and schumijo for contributing their cards to the main repository. stokkie90 for implementing most of the HACS functionalities. And of course all the others who cannot be named here due to space limitations. \ud83d\ude09 Thank you for your contribution \u2764\ufe0f","title":"Credits"},{"location":"development/card_style_guide/","text":"Card Style Guide \u00b6 This \"theme\" introduced \u00b6 This \"theme\" provides you with four different elements, that combined give you a nice and functional layout. The basis for all these elements is button-card that allows for a great and individual styling. These elements, \"cards\", \"chips\", \"title\" and \"vertical buttons\", are fully customizable and can be enhanced to fit your needs. All this is only possible, because we are able to use the templating function from button-card . Chips \u00b6 At the top of each page you can find the chips , which allow to quickly visualize important information. Title \u00b6 Titles are used to separate the different sections. Kind of a divider. Vertical buttons \u00b6 Vertical buttons show the information vertically aligned. These find their use eg. as navigation or scene buttons. Cards \u00b6 Cards are the main part of this design and are widely used in very different designs and functions. With these cards you can set up nearly every entity in HA, showing from \"state-only\" over a \"full blown\" information graphic with various values to \"controlling\" your covers and climate entities. Anatomy of cards \u00b6 Dot : Visible when the device is unavailable. Also used on the entity person Icon : Icon that represents the device Primary line : Main information Secondary line : Secondary information Optional part : Possibility to display buttons to launch actions related to the device. Or display a graph to view the history of a sensor or you let your fantasy take the ride... In the list above #5 enhances the normal cards with a \"second line\", that is used to display other information like a graph or the controls for your covers. For this readme the cards are divided into three groups: 1-line cards: These are cards for sensor or binary_sensors like light or power outlets . 2-line cards: These are cards with a second line for informations or controls, eg. your cover controls . Custom cards: These are special cards, that you can install, only if needed. These cards are mostly developed and contributed to the repository. Eg. an aircondition-card that shows the state of your aircondition and buttons to control it. Color Scheme \u00b6 Type Color Hex RGB \ud83d\udca1 Light \u26a1 Electricity #FF9101 rgb(255,145,1) \ud83d\udd25 Heating #F54436 rgb(245,6,54) \u2611\ufe0f on/off \ud83c\udfe0 Home #3D5AFE rgb(61,90,254) \ud83c\udf33 Exterior #01C852 rgb(1,200,82) Icons \u00b6 For the chips , this \u201ctheme\u201d uses the standard unicode emojis . The main reason is, they are multi-color whereas the mdi-icons that HomeAssistant uses are one color only. These emojis are only used on the chips , all other cards or buttons use the standard mdi-icons ! Overview over standard unicode emojis: https://emojipedia.org or https://github.com/ikatyang/emoji-cheat-sheet Overview Home Assistant mdi-icons: https://materialdesignicons.com/ Using emojis is easy: Go to one of the Github pages above Select the emoji you want and copy it (\u201cCTRL + C\u201d or right-click \u201ccopy\u201d / at emojipedia.org you already find a \u201ccopy\u201d button) Go to your view and paste the icon Note : There are a lot of emojis on these pages, so we suggest you use the built-in search at emojipedia or the browser integrated search by pressing \u201cCTRL + F\u201d and type in your query like \u201cheart\u201d. Language specific buttons \u00b6 Sometimes the language specific strings from Home Assistant aren't available for your button, so we added the possibility to use language specific strings over the template system. Custom cards \u00b6 This \"theme\" is designed with an open structure in mind, that's why it is possible to add custom-cards without much hassle. A few custom-cards are readily available through the folder custom-cards in the repository. Custom-cards are cards , that don't fit everywhere and therefor are not part of the standard installation, but can be easily added, if needed. Take an air-condition card. Not everybody has an air-condition. So why include this card as a default? And that's why we did a structure and system for custom-cards . Easily added, but only when needed! And the best thing is: everybody can develop a cool card and can (not have to) share it afterwards with the community (hint, hint, the support thread is here ). See a complete list of already included custom-cards in our wiki . Find informations on how to develop a custom-card here . Extend with your own code \u00b6 As we tried to be as modular as possible (and useful), it is easy to enhance or extend the code, we provide with your own definitions. That means for you, you can inherit every template to enhance it only with functions, you really want. No need to copy full blocks of code - just inherit and enhance only where changes are needed. We provided some instructions in our wiki, see this page .","title":"Card Style Guide"},{"location":"development/card_style_guide/#card-style-guide","text":"","title":"Card Style Guide"},{"location":"development/card_style_guide/#this-theme-introduced","text":"This \"theme\" provides you with four different elements, that combined give you a nice and functional layout. The basis for all these elements is button-card that allows for a great and individual styling. These elements, \"cards\", \"chips\", \"title\" and \"vertical buttons\", are fully customizable and can be enhanced to fit your needs. All this is only possible, because we are able to use the templating function from button-card .","title":"This \"theme\" introduced"},{"location":"development/card_style_guide/#chips","text":"At the top of each page you can find the chips , which allow to quickly visualize important information.","title":"Chips"},{"location":"development/card_style_guide/#title","text":"Titles are used to separate the different sections. Kind of a divider.","title":"Title"},{"location":"development/card_style_guide/#vertical-buttons","text":"Vertical buttons show the information vertically aligned. These find their use eg. as navigation or scene buttons.","title":"Vertical buttons"},{"location":"development/card_style_guide/#cards","text":"Cards are the main part of this design and are widely used in very different designs and functions. With these cards you can set up nearly every entity in HA, showing from \"state-only\" over a \"full blown\" information graphic with various values to \"controlling\" your covers and climate entities.","title":"Cards"},{"location":"development/card_style_guide/#anatomy-of-cards","text":"Dot : Visible when the device is unavailable. Also used on the entity person Icon : Icon that represents the device Primary line : Main information Secondary line : Secondary information Optional part : Possibility to display buttons to launch actions related to the device. Or display a graph to view the history of a sensor or you let your fantasy take the ride... In the list above #5 enhances the normal cards with a \"second line\", that is used to display other information like a graph or the controls for your covers. For this readme the cards are divided into three groups: 1-line cards: These are cards for sensor or binary_sensors like light or power outlets . 2-line cards: These are cards with a second line for informations or controls, eg. your cover controls . Custom cards: These are special cards, that you can install, only if needed. These cards are mostly developed and contributed to the repository. Eg. an aircondition-card that shows the state of your aircondition and buttons to control it.","title":"Anatomy of cards"},{"location":"development/card_style_guide/#color-scheme","text":"Type Color Hex RGB \ud83d\udca1 Light \u26a1 Electricity #FF9101 rgb(255,145,1) \ud83d\udd25 Heating #F54436 rgb(245,6,54) \u2611\ufe0f on/off \ud83c\udfe0 Home #3D5AFE rgb(61,90,254) \ud83c\udf33 Exterior #01C852 rgb(1,200,82)","title":"Color Scheme"},{"location":"development/card_style_guide/#icons","text":"For the chips , this \u201ctheme\u201d uses the standard unicode emojis . The main reason is, they are multi-color whereas the mdi-icons that HomeAssistant uses are one color only. These emojis are only used on the chips , all other cards or buttons use the standard mdi-icons ! Overview over standard unicode emojis: https://emojipedia.org or https://github.com/ikatyang/emoji-cheat-sheet Overview Home Assistant mdi-icons: https://materialdesignicons.com/ Using emojis is easy: Go to one of the Github pages above Select the emoji you want and copy it (\u201cCTRL + C\u201d or right-click \u201ccopy\u201d / at emojipedia.org you already find a \u201ccopy\u201d button) Go to your view and paste the icon Note : There are a lot of emojis on these pages, so we suggest you use the built-in search at emojipedia or the browser integrated search by pressing \u201cCTRL + F\u201d and type in your query like \u201cheart\u201d.","title":"Icons"},{"location":"development/card_style_guide/#language-specific-buttons","text":"Sometimes the language specific strings from Home Assistant aren't available for your button, so we added the possibility to use language specific strings over the template system.","title":"Language specific buttons"},{"location":"development/card_style_guide/#custom-cards","text":"This \"theme\" is designed with an open structure in mind, that's why it is possible to add custom-cards without much hassle. A few custom-cards are readily available through the folder custom-cards in the repository. Custom-cards are cards , that don't fit everywhere and therefor are not part of the standard installation, but can be easily added, if needed. Take an air-condition card. Not everybody has an air-condition. So why include this card as a default? And that's why we did a structure and system for custom-cards . Easily added, but only when needed! And the best thing is: everybody can develop a cool card and can (not have to) share it afterwards with the community (hint, hint, the support thread is here ). See a complete list of already included custom-cards in our wiki . Find informations on how to develop a custom-card here .","title":"Custom cards"},{"location":"development/card_style_guide/#extend-with-your-own-code","text":"As we tried to be as modular as possible (and useful), it is easy to enhance or extend the code, we provide with your own definitions. That means for you, you can inherit every template to enhance it only with functions, you really want. No need to copy full blocks of code - just inherit and enhance only where changes are needed. We provided some instructions in our wiki, see this page .","title":"Extend with your own code"},{"location":"development/custom_cards/","text":"Develop a custom-card \u00b6 If you have configured something great for this theme, like a new card, you might want to share it with the community. To ease this process, here are some instructions on how to do that. Building your custom-card \u00b6 Create a new folder following the naming convention of this theme, preferably by using the username and describing your card, eg. custom_card_paddy_temperature. Create a new file README.md where you describe your card, note of specific requirements (like custom_components from HA or other custom-cards ) and your name as the author. Create a new file in this folder, naming it the same like your folder, eg. custom_card_paddy_temperature.yaml . IMPORTANT! Name the folder and file to your liking (preferably describing your chip/card), but you must add the prefix custom_ to both, the folder and the file name. Otherwise the file will not be correctly included! Example: custom_card_paddy_temperature/custom_card_paddy_temperature.yaml IMPORTANT! All files need to follow our community style-guidelines. Please read these guidelines carefully before adding a pull request. You can use and inherit all template definitions, that are available through the main button_card_templates.yaml of this theme. See the here for all definitions, including internal templates. If you need to use language specific strings, please see here. Please don\u2019t inherit from other custom-cards, as the user might not have installed that card! If you really need to inherit from other custom-cards, you should clearly state this in your readme file! Style and Qualtiy guidelines \u00b6 Your card needs to satisfy some guidelines to assure your card is easy to read and looks like all the other cards in the repository. Each file needs to start only with --- on the first line. Each file needs to end with a empty code line. All strings need to be \"double-quoted\" . Only use lowercase in your code. No trailing white-space (No random space between and around the code). A line-length of 256. IMPORTANT! Unix-style line endings. (It's recommended to use a code-editor like VSCode and set CRLF to LF) More advanced users can make use of Pre-commit to apply most of the styles automatically. Open your fork in a code-editor like VSCode. Install Pre-commit (Linux or Mac-system recommended). All the needed hooks are available within the repository. After your changes run pre-commit run --all-files in the terminal of your editor. You could test your card in a dev-environment with the use of Docker-desktop . Make sure you read https://github.com/UI-Lovelace-Minimalist/UI/blob/dev/.devcontainer/README.md Add your custom-card \u00b6 You can make a pull request on Github to add your custom-card. To make a pull request you need to fork the repository first. Add your custom-card folder to your fork. This needs to be in the already existing folder: custom_cards . All pull requests for custom_cards need to be directed to the main branch: UI-Lovelace-Minimalist:main . Additional documentation Naming conventions \u00b6 To make it easier for the user, we would prefer, if you would use the following naming conventions to name your folders and files. Prefix (custom_) Type (like chip or card) Developer name (like paddy0174) Name describing your chip/card (temperature) This should look like this: custom_card_paddy0174_temperature/custom_card_paddy0174_temperature.yaml In the end, your custom-card folder should have at least these structure: custom_card_paddy_temperature \u2514\u2500\u2500 custom_card_paddy_temperature.yaml \u2514\u2500\u2500 README.md \u2514\u2500\u2500 languages \u2514\u2500\u2500 DE.yaml ( optional ) \u2514\u2500\u2500 EN.yaml ( if language variables are used, at least EN needs to be provided ) Note : This is optional and you can use whatever naming you want, but keep in mind, the use of custom_ as a prefix is required ! Order \u00b6 To make reading the definitions easier, we use the following structure in our defintions in button_card_templates.yaml: name : template : variables : tap_action/hold action/... : triggers_update : show_icon : show_label : show_name : show_state : icon : label : name : state : entity : styles : icon : label : name : state : img_cell : grid : card : custom_fields : item1 : card : type : template : Feel free to delete defintions, that you don\u2019t use or need. Note : Here as well, this is optional ! It is just easier to use a structure, that can be easily compared to other definitions. But please do to your own liking and needs! Language specific strings \u00b6 This \u201ctheme\u201d supports language specific strings, as the translated strings (states) from HA are sometimes not available. These variables are already provided by the \u201ctheme\u201d: ulm_on ulm_off ulm_open ulm_closed ulm_unavailable ulm_standby ulm_idle ulm_currency The usage is easy: Include the language variables by including the template ulm_language_variables in your card and then use them just like every other variable. template : - ulm_language_variables # optional, only if language variables are used - custom_card_paddy0174_temperature_language_variables state : [[[ if (state == 'off') { return variables.ulm_off; # if you use your own language variables, use them like this } else if (state == 'cool') { return variables.custom_card_paddy0174_temperature_cool; } else { return variables.ulm_on; } ]]] Your language file should use this format: # EN.yaml for custom_card_paddy0174_temperature custom_card_paddy0174_temperature_language_variables : variables : custom_card_paddy0174_temperature_cool : 'Cool' Provide at least a file EN.yaml in your custom-cards language folder. If you want to support more languages, name them accordingly and use the same structure as in the EN.yaml file. In the end you will have different files in your languages folder, like EN.yaml , FR.yaml and DE.yaml . Please advise the user in your readme to delete all but one of these language files, otherwise the loading order gets messed up and the wrong strings get loaded.","title":"Custom-Cards"},{"location":"development/custom_cards/#develop-a-custom-card","text":"If you have configured something great for this theme, like a new card, you might want to share it with the community. To ease this process, here are some instructions on how to do that.","title":"Develop a custom-card"},{"location":"development/custom_cards/#building-your-custom-card","text":"Create a new folder following the naming convention of this theme, preferably by using the username and describing your card, eg. custom_card_paddy_temperature. Create a new file README.md where you describe your card, note of specific requirements (like custom_components from HA or other custom-cards ) and your name as the author. Create a new file in this folder, naming it the same like your folder, eg. custom_card_paddy_temperature.yaml . IMPORTANT! Name the folder and file to your liking (preferably describing your chip/card), but you must add the prefix custom_ to both, the folder and the file name. Otherwise the file will not be correctly included! Example: custom_card_paddy_temperature/custom_card_paddy_temperature.yaml IMPORTANT! All files need to follow our community style-guidelines. Please read these guidelines carefully before adding a pull request. You can use and inherit all template definitions, that are available through the main button_card_templates.yaml of this theme. See the here for all definitions, including internal templates. If you need to use language specific strings, please see here. Please don\u2019t inherit from other custom-cards, as the user might not have installed that card! If you really need to inherit from other custom-cards, you should clearly state this in your readme file!","title":"Building your custom-card"},{"location":"development/custom_cards/#style-and-qualtiy-guidelines","text":"Your card needs to satisfy some guidelines to assure your card is easy to read and looks like all the other cards in the repository. Each file needs to start only with --- on the first line. Each file needs to end with a empty code line. All strings need to be \"double-quoted\" . Only use lowercase in your code. No trailing white-space (No random space between and around the code). A line-length of 256. IMPORTANT! Unix-style line endings. (It's recommended to use a code-editor like VSCode and set CRLF to LF) More advanced users can make use of Pre-commit to apply most of the styles automatically. Open your fork in a code-editor like VSCode. Install Pre-commit (Linux or Mac-system recommended). All the needed hooks are available within the repository. After your changes run pre-commit run --all-files in the terminal of your editor. You could test your card in a dev-environment with the use of Docker-desktop . Make sure you read https://github.com/UI-Lovelace-Minimalist/UI/blob/dev/.devcontainer/README.md","title":"Style and Qualtiy guidelines"},{"location":"development/custom_cards/#add-your-custom-card","text":"You can make a pull request on Github to add your custom-card. To make a pull request you need to fork the repository first. Add your custom-card folder to your fork. This needs to be in the already existing folder: custom_cards . All pull requests for custom_cards need to be directed to the main branch: UI-Lovelace-Minimalist:main . Additional documentation","title":"Add your custom-card"},{"location":"development/custom_cards/#naming-conventions","text":"To make it easier for the user, we would prefer, if you would use the following naming conventions to name your folders and files. Prefix (custom_) Type (like chip or card) Developer name (like paddy0174) Name describing your chip/card (temperature) This should look like this: custom_card_paddy0174_temperature/custom_card_paddy0174_temperature.yaml In the end, your custom-card folder should have at least these structure: custom_card_paddy_temperature \u2514\u2500\u2500 custom_card_paddy_temperature.yaml \u2514\u2500\u2500 README.md \u2514\u2500\u2500 languages \u2514\u2500\u2500 DE.yaml ( optional ) \u2514\u2500\u2500 EN.yaml ( if language variables are used, at least EN needs to be provided ) Note : This is optional and you can use whatever naming you want, but keep in mind, the use of custom_ as a prefix is required !","title":"Naming conventions"},{"location":"development/custom_cards/#order","text":"To make reading the definitions easier, we use the following structure in our defintions in button_card_templates.yaml: name : template : variables : tap_action/hold action/... : triggers_update : show_icon : show_label : show_name : show_state : icon : label : name : state : entity : styles : icon : label : name : state : img_cell : grid : card : custom_fields : item1 : card : type : template : Feel free to delete defintions, that you don\u2019t use or need. Note : Here as well, this is optional ! It is just easier to use a structure, that can be easily compared to other definitions. But please do to your own liking and needs!","title":"Order"},{"location":"development/custom_cards/#language-specific-strings","text":"This \u201ctheme\u201d supports language specific strings, as the translated strings (states) from HA are sometimes not available. These variables are already provided by the \u201ctheme\u201d: ulm_on ulm_off ulm_open ulm_closed ulm_unavailable ulm_standby ulm_idle ulm_currency The usage is easy: Include the language variables by including the template ulm_language_variables in your card and then use them just like every other variable. template : - ulm_language_variables # optional, only if language variables are used - custom_card_paddy0174_temperature_language_variables state : [[[ if (state == 'off') { return variables.ulm_off; # if you use your own language variables, use them like this } else if (state == 'cool') { return variables.custom_card_paddy0174_temperature_cool; } else { return variables.ulm_on; } ]]] Your language file should use this format: # EN.yaml for custom_card_paddy0174_temperature custom_card_paddy0174_temperature_language_variables : variables : custom_card_paddy0174_temperature_cool : 'Cool' Provide at least a file EN.yaml in your custom-cards language folder. If you want to support more languages, name them accordingly and use the same structure as in the EN.yaml file. In the end you will have different files in your languages folder, like EN.yaml , FR.yaml and DE.yaml . Please advise the user in your readme to delete all but one of these language files, otherwise the loading order gets messed up and the wrong strings get loaded.","title":"Language specific strings"},{"location":"development/docs_style_guide/","text":"Documentation Style Guide \u00b6 This document defines the standards for UI Lovelace Minimalist Documentation. Rather than repeating information from another topic, link to the single source of truth and explain why it is important. Include all media types Include any media types/sources if the content is relevant to readers. You can freely include or link presentations, diagrams, and videos. No matter who it was originally composed for, if it is helpful to any of our audiences, we can include it. If you use an image that has a separate source file (for example, a vector or diagram format), link the image to the source file so that it may be reused or updated by anyone. Structure \u00b6 Directory Contents docs/index.md Home Page. docs/assets Can contain images/javascript/stylesheets. docs/setup Guides on how to setup the UI Lovelace Minimalist. docs/usage Guides on how to use UI Lovelace Minimalist. Work with directories and files \u00b6 When working with directories and files: When you create a new directory, always start with an index.md file. Don't use another filename and do not create README.md files. Do not use special characters and spaces, or capital letters in file names, directory names, branch names, and anything that generates a path. When creating or renaming a file or directory and it has more than one word in its name, use underscores (_) instead of spaces or dashes. For example, proper naming would be import_project/import_from_github.md. This applies to both image files and Markdown files. For image files, do not exceed 100KB. Do not include the same information in multiple places. If you\u2019re unsure where to place a document or a content addition, this shouldn\u2019t stop you from authoring and contributing. Use your best judgment, and then ask the reviewer of your MR to confirm your decision. Card page \u00b6 Create a Card Page by checking the ._example.md in the cards directory. This can be used as a structure to build upon. Images \u00b6 Images, including screenshots, can help a reader better understand a concept. However, they should be used sparingly because: They tend to become out-of-date. They are difficult and expensive to localize. They cannot be read by screen readers. Save the image \u00b6 Place all images in the central asset directory named assets/img/ inside the docs root folder. Consider using PNG images instead of JPEG. Compress GIFs with https://ezgif.com/optimize or similar tool. Images should be used (only when necessary) to illustrate the description of a process, not to replace it. Add the image link to content \u00b6 The Markdown code for including an image in a document is ![Image description which will be teh alt tag](../../assets/img/ulm_cards/example.png) Admonitions / Call-outs \u00b6 Admonitions, also known as call-outs, are an excellent choice for including side content without significantly interrupting the document flow. More information of this can be found on Upstream documentation of MkDocs: Admonitions Code Blocks \u00b6 Code blocks and examples are an essential part of technical project documentation. ULM Docs provides different ways to set up syntax highlighting for code blocks. For a more advanced usage of Code Blocks like adding Annations, Line Numbers, Highlighting, Embedding external files see the Code Blocks page on mkdocs-material . Developing \u00b6 Run local: pip install -r requirements.txt mkdocs serve # or mkdocs serve --dirtyreload Markdown linting \u00b6 Can be done automatically by running pre-commit pre-commit run markdownlint","title":"Docs Style Guide"},{"location":"development/docs_style_guide/#documentation-style-guide","text":"This document defines the standards for UI Lovelace Minimalist Documentation. Rather than repeating information from another topic, link to the single source of truth and explain why it is important. Include all media types Include any media types/sources if the content is relevant to readers. You can freely include or link presentations, diagrams, and videos. No matter who it was originally composed for, if it is helpful to any of our audiences, we can include it. If you use an image that has a separate source file (for example, a vector or diagram format), link the image to the source file so that it may be reused or updated by anyone.","title":"Documentation Style Guide"},{"location":"development/docs_style_guide/#structure","text":"Directory Contents docs/index.md Home Page. docs/assets Can contain images/javascript/stylesheets. docs/setup Guides on how to setup the UI Lovelace Minimalist. docs/usage Guides on how to use UI Lovelace Minimalist.","title":"Structure"},{"location":"development/docs_style_guide/#work-with-directories-and-files","text":"When working with directories and files: When you create a new directory, always start with an index.md file. Don't use another filename and do not create README.md files. Do not use special characters and spaces, or capital letters in file names, directory names, branch names, and anything that generates a path. When creating or renaming a file or directory and it has more than one word in its name, use underscores (_) instead of spaces or dashes. For example, proper naming would be import_project/import_from_github.md. This applies to both image files and Markdown files. For image files, do not exceed 100KB. Do not include the same information in multiple places. If you\u2019re unsure where to place a document or a content addition, this shouldn\u2019t stop you from authoring and contributing. Use your best judgment, and then ask the reviewer of your MR to confirm your decision.","title":"Work with directories and files"},{"location":"development/docs_style_guide/#card-page","text":"Create a Card Page by checking the ._example.md in the cards directory. This can be used as a structure to build upon.","title":"Card page"},{"location":"development/docs_style_guide/#images","text":"Images, including screenshots, can help a reader better understand a concept. However, they should be used sparingly because: They tend to become out-of-date. They are difficult and expensive to localize. They cannot be read by screen readers.","title":"Images"},{"location":"development/docs_style_guide/#save-the-image","text":"Place all images in the central asset directory named assets/img/ inside the docs root folder. Consider using PNG images instead of JPEG. Compress GIFs with https://ezgif.com/optimize or similar tool. Images should be used (only when necessary) to illustrate the description of a process, not to replace it.","title":"Save the image"},{"location":"development/docs_style_guide/#add-the-image-link-to-content","text":"The Markdown code for including an image in a document is ![Image description which will be teh alt tag](../../assets/img/ulm_cards/example.png)","title":"Add the image link to content"},{"location":"development/docs_style_guide/#admonitions-call-outs","text":"Admonitions, also known as call-outs, are an excellent choice for including side content without significantly interrupting the document flow. More information of this can be found on Upstream documentation of MkDocs: Admonitions","title":"Admonitions / Call-outs"},{"location":"development/docs_style_guide/#code-blocks","text":"Code blocks and examples are an essential part of technical project documentation. ULM Docs provides different ways to set up syntax highlighting for code blocks. For a more advanced usage of Code Blocks like adding Annations, Line Numbers, Highlighting, Embedding external files see the Code Blocks page on mkdocs-material .","title":"Code Blocks"},{"location":"development/docs_style_guide/#developing","text":"Run local: pip install -r requirements.txt mkdocs serve # or mkdocs serve --dirtyreload","title":"Developing"},{"location":"development/docs_style_guide/#markdown-linting","text":"Can be done automatically by running pre-commit pre-commit run markdownlint","title":"Markdown linting"},{"location":"setup/configuration/","text":"Add theme to your Lovelace \u00b6 To get this theme with all the button templates working make sure at least the generated Lovelace Dashboard is working. YAML Mode \u00b6 As described in the installation step , we have already created a small sample dashboard for you, whose file is called ui-lovelace.yaml in the following directory when setting up the integration: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml This example dashboard file already contains the necessary directory bindings with our templates from the custom_component and you can directly start customizing the dashboard according to your own wishes. However, if you want to use your own, possibly already existing, dashboard file, you must make the necessary bindings of the templates in it yourself. This can be done for example by specifying the following: # Button cards location button_card_templates : !include_dir_merge_named \"custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" Please note! This step is only necessary if you are not using the sample dashboard file created for you. The path specifications are relative. Depending on where you have stored your own Dashboard .yaml file, your path specification can differ from the example and must be adapted by you. In the example it was assumed that the .yaml file is located in the top level of the Home Assistant configuration. UI Mode \u00b6 Currently not supported The Problem: Home Assistant doesn\u2019t let you include complete folders or even files in UI-mode. That means for you, you can\u2019t work with the folder and file structure, we have provided in our download. You can manually go through the template files and copy the content that you need to paste in your raw-config-editor. However, this is very time-consuming and error-prone, which is why we have decided not to support this method at present. Custom Cards \u00b6 This integration also allows you to add your own Custom Button Cards. These cards are not part of the HACS installation and must be downloaded separately from the repo as needed. You can find an overview of the cards here in our wiki. The cards themselves for the download are on our repo here . To find some more detailed instructions to include the custom-cards to your dashboard take a look on this page .","title":"Configuration"},{"location":"setup/configuration/#add-theme-to-your-lovelace","text":"To get this theme with all the button templates working make sure at least the generated Lovelace Dashboard is working.","title":"Add theme to your Lovelace"},{"location":"setup/configuration/#yaml-mode","text":"As described in the installation step , we have already created a small sample dashboard for you, whose file is called ui-lovelace.yaml in the following directory when setting up the integration: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml This example dashboard file already contains the necessary directory bindings with our templates from the custom_component and you can directly start customizing the dashboard according to your own wishes. However, if you want to use your own, possibly already existing, dashboard file, you must make the necessary bindings of the templates in it yourself. This can be done for example by specifying the following: # Button cards location button_card_templates : !include_dir_merge_named \"custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" Please note! This step is only necessary if you are not using the sample dashboard file created for you. The path specifications are relative. Depending on where you have stored your own Dashboard .yaml file, your path specification can differ from the example and must be adapted by you. In the example it was assumed that the .yaml file is located in the top level of the Home Assistant configuration.","title":"YAML Mode"},{"location":"setup/configuration/#ui-mode","text":"Currently not supported The Problem: Home Assistant doesn\u2019t let you include complete folders or even files in UI-mode. That means for you, you can\u2019t work with the folder and file structure, we have provided in our download. You can manually go through the template files and copy the content that you need to paste in your raw-config-editor. However, this is very time-consuming and error-prone, which is why we have decided not to support this method at present.","title":"UI Mode"},{"location":"setup/configuration/#custom-cards","text":"This integration also allows you to add your own Custom Button Cards. These cards are not part of the HACS installation and must be downloaded separately from the repo as needed. You can find an overview of the cards here in our wiki. The cards themselves for the download are on our repo here . To find some more detailed instructions to include the custom-cards to your dashboard take a look on this page .","title":"Custom Cards"},{"location":"setup/custom_cards/","text":"Add Custom-cards to your dashboard \u00b6 This 'theme' and his community do offer support for multiple great Custom-cards. To use and download these Custom-cards follow the instructions on this page. Custom Cards \u00b6 This integration also allows you to add your own Custom Button Cards. These cards are not part of the HACS installation and must be downloaded separately from the repo as needed. You can find an overview of the cards here in our wiki. The cards themselves for the download are on our repo here . You might have noticed, during the installation process a directory for UI Lovelace Minimalist is/should be created in the Home Assistant configuration directory (in the folder /config ). The directory is named ui_lovelace_minimalist , within this directory you can put custom cards in the folder custom_cards . Basically you just have to create an folder inside ui_lovelace_minimalist/custom_cards for each custom_card you want to add and put the custom_card.yaml file and the language file you need for the respective custom_card inside. These cards will then be merged into a directory together witch the cards of this integration and the selected Language. Make sure it's in the format like the following example: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards | \u251c\u2500\u2500 custom_card_1 | | \u251c\u2500\u2500 custom_card_1.yaml | | \u2514\u2500\u2500 EN.yaml | \u2514\u2500\u2500 custom_card_2 | \u251c\u2500\u2500 custom_card_2.yaml | \u2514\u2500\u2500 EN.yaml \u2514\u2500\u2500 dashboard Warning Do not alter files in custom_components/ui_lovelace_minimalist as those changes will be overridden with each new release/update through HACS!! You don't need to do any extra inclusion in your dashboard yaml via !include , the custom_cards will be copied from this folder to the custom_component directory. The custom_cards folder itself remains untouched. A list of all currently available custom_cards can be found on our repo here: https://github.com/UI-Lovelace-Minimalist/UI/tree/main/custom_cards Reloading Once you have added new custom_cards, you can always reload that folder via Home Assistant and add the new cards to the config. Just go to \"Configuration\" --> \"Settings\" in Home Assistant and press the \"UI_LOVELACE_MINIMALIST\" button within the \"YAML configuration reloading\" section. Develop your own Custom-cards \u00b6 You can always manual add new YAML-files with card-templates to /config/ui_lovelace_minimalist/custom_cards for your own use. If you want to share and contribute your custom-cards to the community please read this page .","title":"Custom cards"},{"location":"setup/custom_cards/#add-custom-cards-to-your-dashboard","text":"This 'theme' and his community do offer support for multiple great Custom-cards. To use and download these Custom-cards follow the instructions on this page.","title":"Add Custom-cards to your dashboard"},{"location":"setup/custom_cards/#custom-cards","text":"This integration also allows you to add your own Custom Button Cards. These cards are not part of the HACS installation and must be downloaded separately from the repo as needed. You can find an overview of the cards here in our wiki. The cards themselves for the download are on our repo here . You might have noticed, during the installation process a directory for UI Lovelace Minimalist is/should be created in the Home Assistant configuration directory (in the folder /config ). The directory is named ui_lovelace_minimalist , within this directory you can put custom cards in the folder custom_cards . Basically you just have to create an folder inside ui_lovelace_minimalist/custom_cards for each custom_card you want to add and put the custom_card.yaml file and the language file you need for the respective custom_card inside. These cards will then be merged into a directory together witch the cards of this integration and the selected Language. Make sure it's in the format like the following example: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards | \u251c\u2500\u2500 custom_card_1 | | \u251c\u2500\u2500 custom_card_1.yaml | | \u2514\u2500\u2500 EN.yaml | \u2514\u2500\u2500 custom_card_2 | \u251c\u2500\u2500 custom_card_2.yaml | \u2514\u2500\u2500 EN.yaml \u2514\u2500\u2500 dashboard Warning Do not alter files in custom_components/ui_lovelace_minimalist as those changes will be overridden with each new release/update through HACS!! You don't need to do any extra inclusion in your dashboard yaml via !include , the custom_cards will be copied from this folder to the custom_component directory. The custom_cards folder itself remains untouched. A list of all currently available custom_cards can be found on our repo here: https://github.com/UI-Lovelace-Minimalist/UI/tree/main/custom_cards Reloading Once you have added new custom_cards, you can always reload that folder via Home Assistant and add the new cards to the config. Just go to \"Configuration\" --> \"Settings\" in Home Assistant and press the \"UI_LOVELACE_MINIMALIST\" button within the \"YAML configuration reloading\" section.","title":"Custom Cards"},{"location":"setup/custom_cards/#develop-your-own-custom-cards","text":"You can always manual add new YAML-files with card-templates to /config/ui_lovelace_minimalist/custom_cards for your own use. If you want to share and contribute your custom-cards to the community please read this page .","title":"Develop your own Custom-cards"},{"location":"setup/customizing/","text":"When you have finished the installation process succesfully it's time to start customizing your dashboard. You can find your ui-minimalist-lovelace file here: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml It should look like this: ui-lovelace.yaml --- button_card_templates : !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" title : \"UI Lovelace Minimalist\" theme : \"minimalist-desktop\" background : \"var(--background-image)\" # views: !include_dir_merge_list \"views/\" views : - title : \"Example View\" path : 0 icon : \"mdi:flower\" cards : - type : \"vertical-stack\" cards : - type : \"custom:button-card\" template : \"card_title\" name : \"Congrats with your installation \ud83c\udf89\" label : \"Explore here some of the wonderful 'Minimalistic-UI' cards we offer\" - type : \"custom:auto-entities\" card : type : \"grid\" columns : 1 square : false card_param : \"cards\" sort : count : 1 filter : include : - domain : \"weather\" options : type : \"custom:button-card\" template : \"card_welcome_scenes\" variables : ulm_weather : \"this.entity_id\" - type : \"custom:button-card\" template : \"card_title\" name : \"Lights\" label : \"This is the Minimalist-light-card\" - type : \"custom:auto-entities\" card : type : \"grid\" columns : 2 square : false card_param : \"cards\" sort : count : 4 filter : include : - domain : \"light\" options : type : \"custom:button-card\" template : \"card_light\" variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true ulm_card_light_enable_popup : true - type : \"custom:button-card\" template : \"card_title\" name : \"Binary Sensors\" label : \"This is the Minimalist-binary_sensor-card\" - type : \"custom:auto-entities\" card : type : \"grid\" columns : 2 square : false card_param : \"cards\" sort : count : 4 filter : include : - domain : \"binary_sensor\" options : type : \"custom:button-card\" template : \"card_binary_sensor_alert\" variables : - ulm_card_binary_sensor_alert : true show_last_changed : true - type : \"custom:button-card\" template : \"card_title\" name : \"Sensors\" label : \"This is the Minimalist-sensor-card\" - type : \"custom:auto-entities\" card : type : \"grid\" columns : 2 square : false card_param : \"cards\" sort : count : 4 filter : include : - domain : \"sensor\" options : type : \"custom:button-card\" template : \"card_generic\" - type : \"custom:button-card\" template : \"card_title\" name : \"Batteries\" label : \"This is the Minimalist-battery-card\" - type : \"custom:auto-entities\" card : type : \"grid\" columns : 2 square : false card_param : \"cards\" sort : count : 4 filter : include : - attributes : unit_of_measurement : \"%\" device_class : \"battery\" options : type : \"custom:button-card\" template : \"card_battery\" variables : ulm_card_battery_battery_state_entity_id : \"this.entity_id\" ulm_card_battery_battery_level_danger : 30 ulm_card_battery_battery_level_warning : 80 How to customize the dashboard \u00b6 You can customize your dashboard like any other YAML-based lovelace dashboard. UI-mode is not yet supported So first let add some cards. These can be found on the Wiki . As an example we will add the card_light and card_vacuum next to each other with help of a horizontal-stack . Please read carefully the wiki-page of each of the cards to understand their specific variables. --- button_card_templates : !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" title : \"UI Lovelace Minimalist\" theme : \"minimalist-desktop\" background : \"var(--background-image)\" # views: !include_dir_merge_list \"views/\" views : - title : \"Example View\" path : 0 icon : \"mdi:flower\" cards : - type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : card_light entity : light.living_room variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true - type : \"custom:button-card\" template : \"card_vacuum\" entity : \"vacuum.roborock_s5\" The path: in the example above is also the path name used in navigation_path: Add extra views (tabs) \u00b6 All views/tabs are created as list items underneath: views : Make sure you set at least parameters for title, path and icon for each view views : - title : \"Main\" path : 0 icon : \"mdi:flower\" cards : - type : \"custom:button-card\" template : card_light entity : light.living_room variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true - title : \"Lights\" path : lights icon : \"mdi:lightbulb\" cards : - type : \"custom:button-card\" template : card_light entity : light.living_room variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true Add multiple dashboards \u00b6 After you have build your first dashboard with UI-Minimalist it's time to build multiple dashboards. If you would to be able to adjust non-UI-Minimalist with the UI-mode it's best to work with storage mode. For the first dashboard we did all the configuration for you. To add a second one you need to take a few steps. Add another ui-lovelace.yaml to your dashboard folder: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml \u2514\u2500\u2500 ui-lovelace_2.yaml Add a reference to it in configuration.yaml : lovelace : mode : storage # Add yaml dashboards dashboards : lovelace-minimalist-2 : mode : yaml title : Minimalist 2 icon : mdi:flower show_in_sidebar : true filename : ui_lovelace_minimalist/dashboard/ui-lovelace_2.yaml You don't need to add the first dashboard which is installed with the integration As mentioned on the configuration page you need to add a line of code to load in all Minimalist card templates. The start of each new dashboard file should therefore, look like this: --- button_card_templates : !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" title : \"My new dashboard\" theme : \"minimalist-desktop\" background : \"var(--background-image)\" # views: !include_dir_merge_list \"views/\" views :","title":"Customizing"},{"location":"setup/customizing/#how-to-customize-the-dashboard","text":"You can customize your dashboard like any other YAML-based lovelace dashboard. UI-mode is not yet supported So first let add some cards. These can be found on the Wiki . As an example we will add the card_light and card_vacuum next to each other with help of a horizontal-stack . Please read carefully the wiki-page of each of the cards to understand their specific variables. --- button_card_templates : !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" title : \"UI Lovelace Minimalist\" theme : \"minimalist-desktop\" background : \"var(--background-image)\" # views: !include_dir_merge_list \"views/\" views : - title : \"Example View\" path : 0 icon : \"mdi:flower\" cards : - type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : card_light entity : light.living_room variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true - type : \"custom:button-card\" template : \"card_vacuum\" entity : \"vacuum.roborock_s5\" The path: in the example above is also the path name used in navigation_path:","title":"How to customize the dashboard"},{"location":"setup/customizing/#add-extra-views-tabs","text":"All views/tabs are created as list items underneath: views : Make sure you set at least parameters for title, path and icon for each view views : - title : \"Main\" path : 0 icon : \"mdi:flower\" cards : - type : \"custom:button-card\" template : card_light entity : light.living_room variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true - title : \"Lights\" path : lights icon : \"mdi:lightbulb\" cards : - type : \"custom:button-card\" template : card_light entity : light.living_room variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true","title":"Add extra views (tabs)"},{"location":"setup/customizing/#add-multiple-dashboards","text":"After you have build your first dashboard with UI-Minimalist it's time to build multiple dashboards. If you would to be able to adjust non-UI-Minimalist with the UI-mode it's best to work with storage mode. For the first dashboard we did all the configuration for you. To add a second one you need to take a few steps. Add another ui-lovelace.yaml to your dashboard folder: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml \u2514\u2500\u2500 ui-lovelace_2.yaml Add a reference to it in configuration.yaml : lovelace : mode : storage # Add yaml dashboards dashboards : lovelace-minimalist-2 : mode : yaml title : Minimalist 2 icon : mdi:flower show_in_sidebar : true filename : ui_lovelace_minimalist/dashboard/ui-lovelace_2.yaml You don't need to add the first dashboard which is installed with the integration As mentioned on the configuration page you need to add a line of code to load in all Minimalist card templates. The start of each new dashboard file should therefore, look like this: --- button_card_templates : !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\" title : \"My new dashboard\" theme : \"minimalist-desktop\" background : \"var(--background-image)\" # views: !include_dir_merge_list \"views/\" views :","title":"Add multiple dashboards"},{"location":"setup/download/","text":"Before get started on anything, make sure you have created a backup of your home assistant configuration. In case you experience problems during installation please reach join the Discord Server . You can install this UI Lovelace Minimalist Theme manual or through HACS. You should have a HomeAssistant (HA) instance running, preferrably with HACS installed and you should know the basics in using HA, eg. how to change settings in your lovelace configuration. You have access to your config folder of HA. Doesn\u2019t matter which way this is, but you need to be able to upload and change files in your config. If you\u2019re running HA-OS or a supervised install of HA, we highly recommend the Samba AddOn (see the AddOn page for instructions) and for editing the File editor AddOn or a good editor like Notepad++ or SublimeText for your OS. Breaking Changes This integration is still under heavy development and might cause breaking changes HACS Download \u00b6 Prerequisites \u00b6 For the pop-up cards to work it's required to install the Custom Integration called browser-mod . This can be done in HACS and search under Integration on browser-mod . Optionally you can install Frontend modules, but the integration also has a checkmark to include and configure them for you. Install Repository \u00b6 To find this Integration on HACS we first need to add the UI Lovelace Minimalist (ULM) repository to Custom Reposistories. Go to HACS Click on Integrations Search for \"UI Lovelace Minimalist\" and click \"Download this Repository with HACS\" Select the version (will auto select latest) Now we need to restart home-assistant under Wait until Home assistant is restarted and Continue to \"Install Integration\" . Manual Download \u00b6 If you can't or don't like to use HACS, you still have the possibility to use this fantastic \"theme\" Prerequisites \u00b6 In order to function correctly, the UI Lovelace Mininmalist \"Theme\" requires some additional integrations and lovelace resources. While we can install most of these for you during the installation via HACS, you will also have to install and configuring them manually in advance for a manual installation. Required Integrations and lovelace resources browser-mod button-card lovelace-card-mod mini-graph-card mini-media-player my-cards-slider-card light-entity-card lovelace-auto-entities You can install most of them also via HACS or manually. Download Release File \u00b6 Go to the release page and download the ui_lovelace_minimalist.zip attached to the latest release. Unpack the file and move the folder it contains called ui_lovelace_minimalist to the following directory of your Home Assistant configuration: /config/custom_components/ If this folder does not exist in your configuration directory, create it. Then you have to restart your Home Assistant and can follow the step \"Install Integration\" .","title":"Download"},{"location":"setup/download/#hacs-download","text":"","title":"HACS Download"},{"location":"setup/download/#prerequisites","text":"For the pop-up cards to work it's required to install the Custom Integration called browser-mod . This can be done in HACS and search under Integration on browser-mod . Optionally you can install Frontend modules, but the integration also has a checkmark to include and configure them for you.","title":"Prerequisites"},{"location":"setup/download/#install-repository","text":"To find this Integration on HACS we first need to add the UI Lovelace Minimalist (ULM) repository to Custom Reposistories. Go to HACS Click on Integrations Search for \"UI Lovelace Minimalist\" and click \"Download this Repository with HACS\" Select the version (will auto select latest) Now we need to restart home-assistant under Wait until Home assistant is restarted and Continue to \"Install Integration\" .","title":"Install Repository"},{"location":"setup/download/#manual-download","text":"If you can't or don't like to use HACS, you still have the possibility to use this fantastic \"theme\"","title":"Manual Download"},{"location":"setup/download/#prerequisites_1","text":"In order to function correctly, the UI Lovelace Mininmalist \"Theme\" requires some additional integrations and lovelace resources. While we can install most of these for you during the installation via HACS, you will also have to install and configuring them manually in advance for a manual installation. Required Integrations and lovelace resources browser-mod button-card lovelace-card-mod mini-graph-card mini-media-player my-cards-slider-card light-entity-card lovelace-auto-entities You can install most of them also via HACS or manually.","title":"Prerequisites"},{"location":"setup/download/#download-release-file","text":"Go to the release page and download the ui_lovelace_minimalist.zip attached to the latest release. Unpack the file and move the folder it contains called ui_lovelace_minimalist to the following directory of your Home Assistant configuration: /config/custom_components/ If this folder does not exist in your configuration directory, create it. Then you have to restart your Home Assistant and can follow the step \"Install Integration\" .","title":"Download Release File"},{"location":"setup/installation/","text":"Install Integration \u00b6 Open your Home Assistant instance and start setting up \"UI Lovelace Minimalist\" under \"Configuration\" --> \"Devices & Services\". Or you can use the My Home Assistant Button bellow. Unsaved Settings Currently the settings are not stored between initial setup and the settings after installation. After installation the settings drop back to their default values. This bug is reported and looked at. Now you can configure the Integration, you can do this also after it's installed! Language: Will set the language for the Integration. Side panel enabled: If you want to add an Entry in the Side Panel for the auto generated Dashboard. (Still under heavy development!) Side panel title: Will set the title for the Lovelace Dashboard in the Sidebar. Side panel icon: Which icon to put in front of the Title. Theme: Choose a theme of your choice (Note: Both themes will be installed anyway and can be customized later if needed.) Currently, it may happen that themes are not automatically selected correctly for you in all cases automatically. Please make sure that the minimalist theme is correctly selected in your Home Assistant settings (click on your profile picture in Home Assistant, bottom left). Theme path: Make sure this is set to the same path as is configured in your configuration.yaml (default: themes/ ) Please make sure that you have included this themes/ folder in your configuration.yaml in the frontend settings . Unfortunately, this is something that the HACS integration cannot do for you. If you use the themes/ folder, your entry in configuration.yaml must look like this for example: frontend : themes : !include_dir_merge_named themes You will also need to change your user theme to the chosen theme or else no visual modifications will work. Include Custom Cards: This will make sure almost all dependency cards are included and configured for you. Activate \"Include Custom Cards\" only if you have not already installed the required Lovelace resources yourself, or if you dont want to install them by yourself. Otherwise this can currently lead to a freeze of the frontend due to double loaded lovelace resources. Included lovelace resources button-card lovelace-card-mod mini-graph-card mini-media-player my-cards-slider-card light-entity-card auto-entities simple-weather-card Hit submit and in the Sidebar a new Dashboard entry should appear. A new file for the dashboard configuration, with a small example, where you can generate your own layout should have been created under that location: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml In case you want to use your own ui-lovelace files go to Configuration .","title":"Installation"},{"location":"setup/installation/#install-integration","text":"Open your Home Assistant instance and start setting up \"UI Lovelace Minimalist\" under \"Configuration\" --> \"Devices & Services\". Or you can use the My Home Assistant Button bellow. Unsaved Settings Currently the settings are not stored between initial setup and the settings after installation. After installation the settings drop back to their default values. This bug is reported and looked at. Now you can configure the Integration, you can do this also after it's installed! Language: Will set the language for the Integration. Side panel enabled: If you want to add an Entry in the Side Panel for the auto generated Dashboard. (Still under heavy development!) Side panel title: Will set the title for the Lovelace Dashboard in the Sidebar. Side panel icon: Which icon to put in front of the Title. Theme: Choose a theme of your choice (Note: Both themes will be installed anyway and can be customized later if needed.) Currently, it may happen that themes are not automatically selected correctly for you in all cases automatically. Please make sure that the minimalist theme is correctly selected in your Home Assistant settings (click on your profile picture in Home Assistant, bottom left). Theme path: Make sure this is set to the same path as is configured in your configuration.yaml (default: themes/ ) Please make sure that you have included this themes/ folder in your configuration.yaml in the frontend settings . Unfortunately, this is something that the HACS integration cannot do for you. If you use the themes/ folder, your entry in configuration.yaml must look like this for example: frontend : themes : !include_dir_merge_named themes You will also need to change your user theme to the chosen theme or else no visual modifications will work. Include Custom Cards: This will make sure almost all dependency cards are included and configured for you. Activate \"Include Custom Cards\" only if you have not already installed the required Lovelace resources yourself, or if you dont want to install them by yourself. Otherwise this can currently lead to a freeze of the frontend due to double loaded lovelace resources. Included lovelace resources button-card lovelace-card-mod mini-graph-card mini-media-player my-cards-slider-card light-entity-card auto-entities simple-weather-card Hit submit and in the Sidebar a new Dashboard entry should appear. A new file for the dashboard configuration, with a small example, where you can generate your own layout should have been created under that location: config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards \u2514\u2500\u2500 dashboard \u2514\u2500\u2500 ui-lovelace.yaml In case you want to use your own ui-lovelace files go to Configuration .","title":"Install Integration"},{"location":"troubleshooting/troubleshooting/","text":"On this page you can find answers and ways to troubleshoot the most common errors with installing and using this 'theme'. Most times reloading the integration and emptying the cache can resolve most problems. This is done by: Hit C and click reload Ui_lovelace_minimalist Clear your cache by clicking CTRL + F5 on Windows or SHIFT + reload on Mac Most common errors \u00b6 Not everything is loaded after installation Check if you have installed all dependencies of this list . Clear your cache by clicking CTRL + F5 on Windows or SHIFT + reload on Mac The theme looks off/weird Check if you have applied the Minimalist theme. Go to User_profile --> theme Custom element doesn't exist Check if you did install all depencies or checked the box to let UI-Minimalist them. Clear your cache by clicking CTRL + F5 on Windows or SHIFT + reload on Mac Popups do not show up Check if you have installed Browser_mod correctly by adding to your configuration.yaml file: browser_mod : Check if you followed the card specific way to enable popups This is either with adding a template or setting a variable to true Custom card template does not exist/showing up Check if you placed the custom_card in the right directory config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards | \u251c\u2500\u2500 custom_card_1 | | \u251c\u2500\u2500 custom_card_1.yaml | | \u2514\u2500\u2500 EN.yaml | \u2514\u2500\u2500 custom_card_2 | \u251c\u2500\u2500 custom_card_2.yaml | \u2514\u2500\u2500 EN.yaml \u2514\u2500\u2500 dashboard Hit C and click reload Ui_lovelace_minimalist Reload dashboard by clicking the three dots in the upper-right corner and click refresh","title":"FAQ"},{"location":"troubleshooting/troubleshooting/#most-common-errors","text":"Not everything is loaded after installation Check if you have installed all dependencies of this list . Clear your cache by clicking CTRL + F5 on Windows or SHIFT + reload on Mac The theme looks off/weird Check if you have applied the Minimalist theme. Go to User_profile --> theme Custom element doesn't exist Check if you did install all depencies or checked the box to let UI-Minimalist them. Clear your cache by clicking CTRL + F5 on Windows or SHIFT + reload on Mac Popups do not show up Check if you have installed Browser_mod correctly by adding to your configuration.yaml file: browser_mod : Check if you followed the card specific way to enable popups This is either with adding a template or setting a variable to true Custom card template does not exist/showing up Check if you placed the custom_card in the right directory config \u2514\u2500\u2500 ui_lovelace_minimalist \u251c\u2500\u2500 custom_cards | \u251c\u2500\u2500 custom_card_1 | | \u251c\u2500\u2500 custom_card_1.yaml | | \u2514\u2500\u2500 EN.yaml | \u2514\u2500\u2500 custom_card_2 | \u251c\u2500\u2500 custom_card_2.yaml | \u2514\u2500\u2500 EN.yaml \u2514\u2500\u2500 dashboard Hit C and click reload Ui_lovelace_minimalist Reload dashboard by clicking the three dots in the upper-right corner and click refresh","title":"Most common errors"},{"location":"usage/cards/card_battery/","text":"Description \u00b6 The battery-card is a slightly enhanced generic-card , that can indicate whether and how a device is being charged and colors the icon based on the battery level. Variables \u00b6 Variable Default Required Notes entity This is your battery entity ulm_card_battery_attribute If your entity provides the battery percent in an attribute (= not as an own sensor), fill in the attribute's name here. E.g. if you have sensor.livingroom_thermometer and the attribute for your battery power is sensor.livingroom_thermometer.attributes.battery_percent , you fill in battery_percent here. ulm_card_battery_battery_state_entity_id Entity that holds the battery state (charging/discharging). If provided, the Icon will display the current status. ulm_card_battery_charger_type_entity_id Entity that holds the charger type (ac/wireless/none). This Entity replaces the need for the ulm_card_battery_battery_state_entity_id entity. If provided, the Icon will display the current charger type. This is only useful if you charge your devices Wireless and with cable. ulm_card_battery_battery_level_danger Changes the color of the Icon, if the battery level falls below the provided value. Must be higher than ulm_card_battery_battery_level_waring ulm_card_battery_battery_level_waring Changes the color of the Icon, if the battery level falls below the provided value. ulm_card_battery_color_battery_level_danger var(--google-red) Color of icon if battery level is within the 'danger' zone. ulm_card_battery_color_battery_level_warning var(--google-yellow) Color of icon if battery level is within the 'warning' zone. ulm_card_battery_color_battery_level_ok var(--google-green) Color of icon if battery level is not within the 'danger' or 'warning' zone. Usage \u00b6 - type : 'custom:button-card' template : card_battery entity : sensor.battery_level variables : ulm_card_battery_charger_type_entity_id : sensor.battery_level ulm_card_battery_battery_level_danger : 30 ulm_card_battery_battery_level_warning : 80 name : Smartphone Template Code card_battery.yaml --- ### Card Battery ### card_battery : template : - \"icon_info_bg\" - \"ulm_language_variables\" tap_action : action : \"more-info\" variables : ulm_card_battery_attribute : ulm_card_battery_battery_state_entity_id : ulm_card_battery_charger_type_entity_id : ulm_card_battery_battery_level_danger : ulm_card_battery_battery_level_warning : ulm_card_battery_color_battery_level_danger : \"var(--google-red)\" ulm_card_battery_color_battery_level_warning : \"var(--google-yellow)\" ulm_card_battery_color_battery_level_ok : \"var(--google-green)\" triggers_update : \"all\" icon : | [[[ // Get battery level const battery_level = variables.ulm_card_battery_attribute !== null ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] : states[entity.entity_id].state; // Generate icon infix let infix = \"\"; if (variables.ulm_card_battery_charger_type_entity_id == null) { // Check wether the battery state is charging infix = variables.ulm_card_battery_battery_state_entity_id !== null && states[variables.ulm_card_battery_battery_state_entity_id].state.toLowerCase() === \"charging\" ? \"-charging\" : \"\" } else { // Select the infix based on the entity charging state switch (states[variables.ulm_card_battery_charger_type_entity_id].state.toLowerCase()) { case \"wireless\": infix = \"-charging-wireless\"; break; case \"charging\": infix = \"-charging\"; break; case \"ac\": infix = \"-charging\"; break; case \"usb\": infix = \"-charging\"; break; default: infix = \"\"; } } // Generate the icon based on the battery_level let icon = \"mdi:help-circle-outline\"; if (battery_level == 100) { icon = \"mdi:battery\"; } else if (battery_level < 10) { icon = \"mdi:battery\" + infix + \"-outline\"; } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") { icon = \"mdi:battery-off\"; } else { icon = \"mdi:battery\" + infix + \"-\" + Math.floor(battery_level / 10) * 10; } return icon; ]]] label : | [[[ const battery_level = variables.ulm_card_battery_attribute !== null ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] : states[entity.entity_id].state; if(battery_level == \"unknown\") { return variables.ulm_unavailable; } else { return battery_level + \"%\"; } ]]] name : | [[[ return states[entity.entity_id].attributes.friendly_name; ]]] styles : icon : - color : | [[[ const battery_level = variables.ulm_card_battery_attribute !== null ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] : states[entity.entity_id].state; // Get the color based on battery_level let color = \"rgba(var(--color-theme), 0.9)\"; if (battery_level !== \"unavailable\" && (variables.ulm_card_battery_battery_level_danger !== null || variables.ulm_card_battery_battery_level_warning !== null)) { if (battery_level <= variables.ulm_card_battery_battery_level_danger) { color = variables.ulm_card_battery_color_battery_level_danger; } else if (battery_level <= variables.ulm_card_battery_battery_level_warning) { color = variables.ulm_card_battery_color_battery_level_warning; } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") { color = variables.ulm_card_battery_color_battery_level_danger; } else { color = variables.ulm_card_battery_color_battery_level_ok; } } return color; ]]] label : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" name : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" grid : - grid-template-areas : \"'i l' 'i n'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\"","title":"Battery Card"},{"location":"usage/cards/card_battery/#description","text":"The battery-card is a slightly enhanced generic-card , that can indicate whether and how a device is being charged and colors the icon based on the battery level.","title":"Description"},{"location":"usage/cards/card_battery/#variables","text":"Variable Default Required Notes entity This is your battery entity ulm_card_battery_attribute If your entity provides the battery percent in an attribute (= not as an own sensor), fill in the attribute's name here. E.g. if you have sensor.livingroom_thermometer and the attribute for your battery power is sensor.livingroom_thermometer.attributes.battery_percent , you fill in battery_percent here. ulm_card_battery_battery_state_entity_id Entity that holds the battery state (charging/discharging). If provided, the Icon will display the current status. ulm_card_battery_charger_type_entity_id Entity that holds the charger type (ac/wireless/none). This Entity replaces the need for the ulm_card_battery_battery_state_entity_id entity. If provided, the Icon will display the current charger type. This is only useful if you charge your devices Wireless and with cable. ulm_card_battery_battery_level_danger Changes the color of the Icon, if the battery level falls below the provided value. Must be higher than ulm_card_battery_battery_level_waring ulm_card_battery_battery_level_waring Changes the color of the Icon, if the battery level falls below the provided value. ulm_card_battery_color_battery_level_danger var(--google-red) Color of icon if battery level is within the 'danger' zone. ulm_card_battery_color_battery_level_warning var(--google-yellow) Color of icon if battery level is within the 'warning' zone. ulm_card_battery_color_battery_level_ok var(--google-green) Color of icon if battery level is not within the 'danger' or 'warning' zone.","title":"Variables"},{"location":"usage/cards/card_battery/#usage","text":"- type : 'custom:button-card' template : card_battery entity : sensor.battery_level variables : ulm_card_battery_charger_type_entity_id : sensor.battery_level ulm_card_battery_battery_level_danger : 30 ulm_card_battery_battery_level_warning : 80 name : Smartphone Template Code card_battery.yaml --- ### Card Battery ### card_battery : template : - \"icon_info_bg\" - \"ulm_language_variables\" tap_action : action : \"more-info\" variables : ulm_card_battery_attribute : ulm_card_battery_battery_state_entity_id : ulm_card_battery_charger_type_entity_id : ulm_card_battery_battery_level_danger : ulm_card_battery_battery_level_warning : ulm_card_battery_color_battery_level_danger : \"var(--google-red)\" ulm_card_battery_color_battery_level_warning : \"var(--google-yellow)\" ulm_card_battery_color_battery_level_ok : \"var(--google-green)\" triggers_update : \"all\" icon : | [[[ // Get battery level const battery_level = variables.ulm_card_battery_attribute !== null ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] : states[entity.entity_id].state; // Generate icon infix let infix = \"\"; if (variables.ulm_card_battery_charger_type_entity_id == null) { // Check wether the battery state is charging infix = variables.ulm_card_battery_battery_state_entity_id !== null && states[variables.ulm_card_battery_battery_state_entity_id].state.toLowerCase() === \"charging\" ? \"-charging\" : \"\" } else { // Select the infix based on the entity charging state switch (states[variables.ulm_card_battery_charger_type_entity_id].state.toLowerCase()) { case \"wireless\": infix = \"-charging-wireless\"; break; case \"charging\": infix = \"-charging\"; break; case \"ac\": infix = \"-charging\"; break; case \"usb\": infix = \"-charging\"; break; default: infix = \"\"; } } // Generate the icon based on the battery_level let icon = \"mdi:help-circle-outline\"; if (battery_level == 100) { icon = \"mdi:battery\"; } else if (battery_level < 10) { icon = \"mdi:battery\" + infix + \"-outline\"; } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") { icon = \"mdi:battery-off\"; } else { icon = \"mdi:battery\" + infix + \"-\" + Math.floor(battery_level / 10) * 10; } return icon; ]]] label : | [[[ const battery_level = variables.ulm_card_battery_attribute !== null ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] : states[entity.entity_id].state; if(battery_level == \"unknown\") { return variables.ulm_unavailable; } else { return battery_level + \"%\"; } ]]] name : | [[[ return states[entity.entity_id].attributes.friendly_name; ]]] styles : icon : - color : | [[[ const battery_level = variables.ulm_card_battery_attribute !== null ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] : states[entity.entity_id].state; // Get the color based on battery_level let color = \"rgba(var(--color-theme), 0.9)\"; if (battery_level !== \"unavailable\" && (variables.ulm_card_battery_battery_level_danger !== null || variables.ulm_card_battery_battery_level_warning !== null)) { if (battery_level <= variables.ulm_card_battery_battery_level_danger) { color = variables.ulm_card_battery_color_battery_level_danger; } else if (battery_level <= variables.ulm_card_battery_battery_level_warning) { color = variables.ulm_card_battery_color_battery_level_warning; } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") { color = variables.ulm_card_battery_color_battery_level_danger; } else { color = variables.ulm_card_battery_color_battery_level_ok; } } return color; ]]] label : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" name : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" grid : - grid-template-areas : \"'i l' 'i n'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\"","title":"Usage"},{"location":"usage/cards/card_binary_sensor/","text":"Description \u00b6 The binary-sensor-card is to show the state (on/off, open/close, etc.) of a binary sensor, eg. your garage door or a window contact sensor. Variables \u00b6 Variable Default Required Notes entity show_last_changed true or false Usage \u00b6 - type : 'custom:button-card' template : card_binary_sensor variables : - ulm_card_binary_sensor_alert : true entity : binary_sensor.garage_door show_last_changed : true Template Code card_binary_sensor.yaml --- ### Card Binary Sensor ### card_binary_sensor : template : - \"icon_info_bg\" - \"blue\" name : \"[[[ return entity.attributes.friendly_name != '' ? entity.attributes.friendly_name : entity.entity_id ]]]\" show_last_changed : true","title":"Binary Sensor Card"},{"location":"usage/cards/card_binary_sensor/#description","text":"The binary-sensor-card is to show the state (on/off, open/close, etc.) of a binary sensor, eg. your garage door or a window contact sensor.","title":"Description"},{"location":"usage/cards/card_binary_sensor/#variables","text":"Variable Default Required Notes entity show_last_changed true or false","title":"Variables"},{"location":"usage/cards/card_binary_sensor/#usage","text":"- type : 'custom:button-card' template : card_binary_sensor variables : - ulm_card_binary_sensor_alert : true entity : binary_sensor.garage_door show_last_changed : true Template Code card_binary_sensor.yaml --- ### Card Binary Sensor ### card_binary_sensor : template : - \"icon_info_bg\" - \"blue\" name : \"[[[ return entity.attributes.friendly_name != '' ? entity.attributes.friendly_name : entity.entity_id ]]]\" show_last_changed : true","title":"Usage"},{"location":"usage/cards/card_binary_sensor_alert/","text":"Description \u00b6 The binary-sensor-card is to show the state (on/off, open/close, etc.) of a binary sensor, eg. your garage door or a window contact sensor. This card shows an alert if the state is on/open or unavailable. Variables \u00b6 Variable Default Required Notes entity show_last_changed true or false Usage \u00b6 - type : 'custom:button-card' template : card_binary_sensor_alert variables : - ulm_card_binary_sensor_alert : true entity : binary_sensor.garage_door show_last_changed : true Template Code card_binary_sensor_alert.yaml --- ### Card Binary Sensor Alert ### card_binary_sensor_alert : template : - \"icon_info_alert\" name : \"[[[ return entity.attributes.friendly_name != '' ? entity.attributes.friendly_name : entity.entity_id ]]]\" show_last_changed : true","title":"Binary Sensor Alert Card"},{"location":"usage/cards/card_binary_sensor_alert/#description","text":"The binary-sensor-card is to show the state (on/off, open/close, etc.) of a binary sensor, eg. your garage door or a window contact sensor. This card shows an alert if the state is on/open or unavailable.","title":"Description"},{"location":"usage/cards/card_binary_sensor_alert/#variables","text":"Variable Default Required Notes entity show_last_changed true or false","title":"Variables"},{"location":"usage/cards/card_binary_sensor_alert/#usage","text":"- type : 'custom:button-card' template : card_binary_sensor_alert variables : - ulm_card_binary_sensor_alert : true entity : binary_sensor.garage_door show_last_changed : true Template Code card_binary_sensor_alert.yaml --- ### Card Binary Sensor Alert ### card_binary_sensor_alert : template : - \"icon_info_alert\" name : \"[[[ return entity.attributes.friendly_name != '' ? entity.attributes.friendly_name : entity.entity_id ]]]\" show_last_changed : true","title":"Usage"},{"location":"usage/cards/card_cover/","text":"Description \u00b6 With the cover-card you have the state of your cover. Optionnaly, on the second line, OPEN / PAUSE / CLOSE to control it and/or a slider to control position. Warning This card has backward compatibilty with older template except custom name. It means variable ulm_card_cover_buttons_name must be replaced by ulm_card_cover_name . Variables \u00b6 Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_cover_name friendly_name Customize name ulm_card_cover_display_left_right false Display left right control button ulm_card_curtain_display_collapse_expand false Display expand collapse control button ulm_card_cover_garage false Display garage icon for garage cover ulm_card_cover_gate false Display gate icon for gate cover ulm_card_cover_enable_controls false Enable control buttons ulm_card_cover_enable_slider false Enable slider ulm_card_cover_enable_horizontal false Enable horizontal card Need ulm_card_cover_enable_controls: true or ulm_card_cover_enable_slider: true ulm_card_cover_enable_popup false Enable popup_cover Usage \u00b6 - type : \"custom:button-card\" template : card_cover entity : cover.window variables : ulm_card_cover_enable_controls : true ulm_card_cover_enable_slider : true Template Code card_cover_buttons.yaml --- ### Card Cover ### card_cover : template : - \"ulm_language_variables\" variables : ulm_card_cover_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_cover_display_left_right : false ulm_card_curtain_display_collapse_expand : false ulm_card_cover_garage : false ulm_card_cover_gate : false ulm_card_cover_enable_controls : false ulm_card_cover_enable_slider : false ulm_card_cover_enable_horizontal : false ulm_card_cover_enable_popup : false show_icon : false show_name : false show_label : false # hold_action: # action: > # [[[ # if (variables.ulm_card_cover_enable_popup){ # return 'fire-dom-event' # } # else{ # return 'more-info' # } # ]]] # browser_mod: # command: \"popup\" # large: true # hide_header: true # card: # type: \"custom:button-card\" # template: \"popup_cover_brightness\" # variables: # ulm_popup_cover_entity: \"[[[ return entity.entity_id ]]]\" styles : grid : - grid-template-areas : > [[[ var areas = []; if (variables.ulm_card_cover_enable_horizontal) { if ( variables.ulm_card_cover_enable_slider) { return \"\\\"item1 item3\\\"\"; } else { return \"\\\"item1 item2\\\"\"; } } else { areas.push(\"item1 item1\"); if ( variables.ulm_card_cover_enable_controls) { areas.push(\"item2 item2\"); } if ( variables.ulm_card_cover_enable_slider) { areas.push(\"item3 item3\"); } } return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : \"1fr 1fr\" - grid-template-rows : > [[[ var rows = []; rows.push(\"min-content\"); if (variables.ulm_card_cover_enable_horizontal) { return \"min-content\"; } else { if ( variables.ulm_card_cover_enable_controls) { rows.push(\"min-content\"); } if ( variables.ulm_card_cover_enable_sliderdf) { rows.push(\"min-content\"); } } return rows.join(\" \"); ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item2 : - display : > [[[ if (variables.ulm_card_cover_enable_controls) { return \"block\"; } else { return \"none\"; } ]]] item3 : - display : > [[[ if (variables.ulm_card_cover_enable_slider) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : | [[[ var icon = \"mdi:help-circle\"; if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains-closed\"; } else if (variables.ulm_card_cover_garage){ var icon = \"mdi:garage-variant\"; } else if (variables.ulm_card_cover_gate){ var icon = \"mdi:gate\"; } else var icon = \"mdi:window-shutter\"; } else if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains\"; } else if (variables.ulm_card_cover_garage){ var icon = \"mdi:garage-open-variant\"; } else if (variables.ulm_card_cover_gate){ var icon = \"mdi:gate-open\"; }else var icon = \"mdi:window-shutter-open\"; } else { if (states[entity.entity_id].attributes.current_position == 0){ if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains-closed\"; } else if (variables.ulm_card_cover_garage){ var icon = \"mdi:garage-variant\"; } else if(variables.ulm_card_cover_gate){ var icon = \"mdi:gate\"; } else var icon = \"mdi:window-shutter\"; } else if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains\"; } else if(variables.ulm_card_cover_garage){ var icon = \"mdi:garage-open-variant\"; } else if(variables.ulm_card_cover_gate){ var icon = \"mdi:gate-open\"; } else var icon = \"mdi:window-shutter-open\"; } return icon ; ]]] # hold_action: # action: > # [[[ # if (variables.ulm_card_cover_enable_popup){ # return 'fire-dom-event' # } # else{ # return 'more-info' # } # ]]] # browser_mod: # command: \"popup\" # large: true # hide_header: true # card: # type: \"custom:button-card\" # template: \"popup_cover_brightness\" # variables: # ulm_popup_cover_entity: \"[[[ return entity.entity_id ]]]\" styles : icon : - color : > [[[ if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ return 'rgba(var(--color-theme),0.2)'; } else return 'rgba(var(--color-blue),1)' } else { if (states[entity.entity_id].attributes.current_position == 0){ return 'rgba(var(--color-theme),0.2)'; } else { return 'rgba(var(--color-blue),1)' } } ]]] img_cell : - background-color : > [[[ if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ return 'rgba(var(--color-theme),0.05)'; } else return 'rgba(var(--color-blue),0.2)'; } else { if (states[entity.entity_id].attributes.current_position == 0){ return 'rgba(var(--color-theme),0.05)'; } else { return 'rgba(var(--color-blue),0.2)'; } } ]]] item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_cover_name ]]]\" # hold_action: # action: > # [[[ # if (variables.ulm_card_cover_enable_popup){ # return 'fire-dom-event' # } # else{ # return 'more-info' # } # ]]] # browser_mod: # command: \"popup\" # large: true # hide_header: true # card: # type: \"custom:button-card\" # template: \"popup_cover_brightness\" # variables: # ulm_popup_cover_entity: \"[[[ return entity.entity_id ]]]\" label : >- [[[ if (entity.state !=\"unavailable\"){ if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ return variables.ulm_closed; } else return variables.ulm_open; } else { if (states[entity.entity_id].attributes.current_position == 0){ return variables.ulm_closed; } else { return variables.ulm_open + \" \u2022 \" + (states[entity.entity_id].attributes.current_position) + \"%\" ; } } } else { return variables.ulm_unavailable; } ]]] item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" state : - value : \"closed\" styles : icon : - color : \"rgba(var(--color-theme),0.4)\" tap_action : action : \"call-service\" service : \"cover.close_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : >- [[[ if (variables.ulm_card_cover_display_left_right){ return \"mdi:arrow-left\"; } if (variables.ulm_card_curtain_display_collapse_expand){ return \"mdi:arrow-collapse-horizontal\"; } return \"mdi:arrow-down\"; ]]] item2 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"cover.stop_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:pause\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" state : - value : \"open\" styles : icon : - color : \"rgba(var(--color-theme),0.4)\" tap_action : action : \"call-service\" service : \"cover.open_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : >- [[[ if (variables.ulm_card_cover_display_left_right){ return \"mdi:arrow-right\"; } if (variables.ulm_card_curtain_display_collapse_expand){ return \"mdi:arrow-expand-horizontal\"; } return \"mdi:arrow-up\"; ]]] item3 : card : type : \"custom:my-slider\" entity : \"[[[ return entity.entity_id ]]]\" radius : \"14px\" height : \"42px\" mainSliderColor : > [[[ if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),1)\"; } else{ return \"rgba(var(--color-blue),1)\"; } ]]] secondarySliderColor : > [[[ if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),0.2)\"; } else{ return \"rgba(var(--color-blue),0.2)\"; } ]]] mainSliderColorOff : \"rgba(var(--color-theme),0.05)\" secondarySliderColorOff : \"rgba(var(--color-theme),0.05)\" thumbHorizontalPadding : \"0px\" thumbVerticalPadding : \"0px\" thumbWidth : \"0px\" card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; }","title":"Cover Card"},{"location":"usage/cards/card_cover/#description","text":"With the cover-card you have the state of your cover. Optionnaly, on the second line, OPEN / PAUSE / CLOSE to control it and/or a slider to control position. Warning This card has backward compatibilty with older template except custom name. It means variable ulm_card_cover_buttons_name must be replaced by ulm_card_cover_name .","title":"Description"},{"location":"usage/cards/card_cover/#variables","text":"Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_cover_name friendly_name Customize name ulm_card_cover_display_left_right false Display left right control button ulm_card_curtain_display_collapse_expand false Display expand collapse control button ulm_card_cover_garage false Display garage icon for garage cover ulm_card_cover_gate false Display gate icon for gate cover ulm_card_cover_enable_controls false Enable control buttons ulm_card_cover_enable_slider false Enable slider ulm_card_cover_enable_horizontal false Enable horizontal card Need ulm_card_cover_enable_controls: true or ulm_card_cover_enable_slider: true ulm_card_cover_enable_popup false Enable popup_cover","title":"Variables"},{"location":"usage/cards/card_cover/#usage","text":"- type : \"custom:button-card\" template : card_cover entity : cover.window variables : ulm_card_cover_enable_controls : true ulm_card_cover_enable_slider : true Template Code card_cover_buttons.yaml --- ### Card Cover ### card_cover : template : - \"ulm_language_variables\" variables : ulm_card_cover_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_cover_display_left_right : false ulm_card_curtain_display_collapse_expand : false ulm_card_cover_garage : false ulm_card_cover_gate : false ulm_card_cover_enable_controls : false ulm_card_cover_enable_slider : false ulm_card_cover_enable_horizontal : false ulm_card_cover_enable_popup : false show_icon : false show_name : false show_label : false # hold_action: # action: > # [[[ # if (variables.ulm_card_cover_enable_popup){ # return 'fire-dom-event' # } # else{ # return 'more-info' # } # ]]] # browser_mod: # command: \"popup\" # large: true # hide_header: true # card: # type: \"custom:button-card\" # template: \"popup_cover_brightness\" # variables: # ulm_popup_cover_entity: \"[[[ return entity.entity_id ]]]\" styles : grid : - grid-template-areas : > [[[ var areas = []; if (variables.ulm_card_cover_enable_horizontal) { if ( variables.ulm_card_cover_enable_slider) { return \"\\\"item1 item3\\\"\"; } else { return \"\\\"item1 item2\\\"\"; } } else { areas.push(\"item1 item1\"); if ( variables.ulm_card_cover_enable_controls) { areas.push(\"item2 item2\"); } if ( variables.ulm_card_cover_enable_slider) { areas.push(\"item3 item3\"); } } return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : \"1fr 1fr\" - grid-template-rows : > [[[ var rows = []; rows.push(\"min-content\"); if (variables.ulm_card_cover_enable_horizontal) { return \"min-content\"; } else { if ( variables.ulm_card_cover_enable_controls) { rows.push(\"min-content\"); } if ( variables.ulm_card_cover_enable_sliderdf) { rows.push(\"min-content\"); } } return rows.join(\" \"); ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item2 : - display : > [[[ if (variables.ulm_card_cover_enable_controls) { return \"block\"; } else { return \"none\"; } ]]] item3 : - display : > [[[ if (variables.ulm_card_cover_enable_slider) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : | [[[ var icon = \"mdi:help-circle\"; if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains-closed\"; } else if (variables.ulm_card_cover_garage){ var icon = \"mdi:garage-variant\"; } else if (variables.ulm_card_cover_gate){ var icon = \"mdi:gate\"; } else var icon = \"mdi:window-shutter\"; } else if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains\"; } else if (variables.ulm_card_cover_garage){ var icon = \"mdi:garage-open-variant\"; } else if (variables.ulm_card_cover_gate){ var icon = \"mdi:gate-open\"; }else var icon = \"mdi:window-shutter-open\"; } else { if (states[entity.entity_id].attributes.current_position == 0){ if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains-closed\"; } else if (variables.ulm_card_cover_garage){ var icon = \"mdi:garage-variant\"; } else if(variables.ulm_card_cover_gate){ var icon = \"mdi:gate\"; } else var icon = \"mdi:window-shutter\"; } else if (variables.ulm_card_curtain_display_collapse_expand){ var icon = \"mdi:curtains\"; } else if(variables.ulm_card_cover_garage){ var icon = \"mdi:garage-open-variant\"; } else if(variables.ulm_card_cover_gate){ var icon = \"mdi:gate-open\"; } else var icon = \"mdi:window-shutter-open\"; } return icon ; ]]] # hold_action: # action: > # [[[ # if (variables.ulm_card_cover_enable_popup){ # return 'fire-dom-event' # } # else{ # return 'more-info' # } # ]]] # browser_mod: # command: \"popup\" # large: true # hide_header: true # card: # type: \"custom:button-card\" # template: \"popup_cover_brightness\" # variables: # ulm_popup_cover_entity: \"[[[ return entity.entity_id ]]]\" styles : icon : - color : > [[[ if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ return 'rgba(var(--color-theme),0.2)'; } else return 'rgba(var(--color-blue),1)' } else { if (states[entity.entity_id].attributes.current_position == 0){ return 'rgba(var(--color-theme),0.2)'; } else { return 'rgba(var(--color-blue),1)' } } ]]] img_cell : - background-color : > [[[ if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ return 'rgba(var(--color-theme),0.05)'; } else return 'rgba(var(--color-blue),0.2)'; } else { if (states[entity.entity_id].attributes.current_position == 0){ return 'rgba(var(--color-theme),0.05)'; } else { return 'rgba(var(--color-blue),0.2)'; } } ]]] item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_cover_name ]]]\" # hold_action: # action: > # [[[ # if (variables.ulm_card_cover_enable_popup){ # return 'fire-dom-event' # } # else{ # return 'more-info' # } # ]]] # browser_mod: # command: \"popup\" # large: true # hide_header: true # card: # type: \"custom:button-card\" # template: \"popup_cover_brightness\" # variables: # ulm_popup_cover_entity: \"[[[ return entity.entity_id ]]]\" label : >- [[[ if (entity.state !=\"unavailable\"){ if (typeof states[entity.entity_id].attributes.current_position === \"undefined\"){ if (states[entity.entity_id].state == \"closed\"){ return variables.ulm_closed; } else return variables.ulm_open; } else { if (states[entity.entity_id].attributes.current_position == 0){ return variables.ulm_closed; } else { return variables.ulm_open + \" \u2022 \" + (states[entity.entity_id].attributes.current_position) + \"%\" ; } } } else { return variables.ulm_unavailable; } ]]] item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" state : - value : \"closed\" styles : icon : - color : \"rgba(var(--color-theme),0.4)\" tap_action : action : \"call-service\" service : \"cover.close_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : >- [[[ if (variables.ulm_card_cover_display_left_right){ return \"mdi:arrow-left\"; } if (variables.ulm_card_curtain_display_collapse_expand){ return \"mdi:arrow-collapse-horizontal\"; } return \"mdi:arrow-down\"; ]]] item2 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"cover.stop_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:pause\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" state : - value : \"open\" styles : icon : - color : \"rgba(var(--color-theme),0.4)\" tap_action : action : \"call-service\" service : \"cover.open_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : >- [[[ if (variables.ulm_card_cover_display_left_right){ return \"mdi:arrow-right\"; } if (variables.ulm_card_curtain_display_collapse_expand){ return \"mdi:arrow-expand-horizontal\"; } return \"mdi:arrow-up\"; ]]] item3 : card : type : \"custom:my-slider\" entity : \"[[[ return entity.entity_id ]]]\" radius : \"14px\" height : \"42px\" mainSliderColor : > [[[ if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),1)\"; } else{ return \"rgba(var(--color-blue),1)\"; } ]]] secondarySliderColor : > [[[ if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),0.2)\"; } else{ return \"rgba(var(--color-blue),0.2)\"; } ]]] mainSliderColorOff : \"rgba(var(--color-theme),0.05)\" secondarySliderColorOff : \"rgba(var(--color-theme),0.05)\" thumbHorizontalPadding : \"0px\" thumbVerticalPadding : \"0px\" thumbWidth : \"0px\" card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; }","title":"Usage"},{"location":"usage/cards/card_generic/","text":"Description \u00b6 This is the generic-card to display values from a sensor, eg. to show humidity, your next waste collection date or whatever sensor value is provided. Variables \u00b6 Variable Default Required Notes entity Usage \u00b6 - type : 'custom:button-card' template : card_generic entity : sensor.next_waste_collection Template Code card_generic.yaml --- ### Card Generic ### card_generic : template : - \"icon_info_bg\" - \"ulm_language_variables\" label : > [[[ var unit = entity.attributes.unit_of_measurement != null ? \" \" + entity.attributes.unit_of_measurement : \"\" if (entity.state == \"on\") { return variables.ulm_on; } else if (entity.state == \"off\") { return variables.ulm_off; } else if (entity.state == \"unavailable\") { return variables.ulm_unavailable; } else if (entity.state == \"idle\") { return variables.ulm_idle; } else if (entity.state == \"open\") { return variables.ulm_open; } else if (entity.state == \"closed\") { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : icon : - color : \"rgba(var(--color-theme),0.9)\" label : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" name : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" grid : - grid-template-areas : \"'i l' 'i n'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\"","title":"Generic Card"},{"location":"usage/cards/card_generic/#description","text":"This is the generic-card to display values from a sensor, eg. to show humidity, your next waste collection date or whatever sensor value is provided.","title":"Description"},{"location":"usage/cards/card_generic/#variables","text":"Variable Default Required Notes entity","title":"Variables"},{"location":"usage/cards/card_generic/#usage","text":"- type : 'custom:button-card' template : card_generic entity : sensor.next_waste_collection Template Code card_generic.yaml --- ### Card Generic ### card_generic : template : - \"icon_info_bg\" - \"ulm_language_variables\" label : > [[[ var unit = entity.attributes.unit_of_measurement != null ? \" \" + entity.attributes.unit_of_measurement : \"\" if (entity.state == \"on\") { return variables.ulm_on; } else if (entity.state == \"off\") { return variables.ulm_off; } else if (entity.state == \"unavailable\") { return variables.ulm_unavailable; } else if (entity.state == \"idle\") { return variables.ulm_idle; } else if (entity.state == \"open\") { return variables.ulm_open; } else if (entity.state == \"closed\") { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : icon : - color : \"rgba(var(--color-theme),0.9)\" label : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" name : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" grid : - grid-template-areas : \"'i l' 'i n'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\"","title":"Usage"},{"location":"usage/cards/card_generic_swap/","text":"Description \u00b6 This is a generic-card with swapped label and name. Variables \u00b6 Variable Default Required Notes entity Usage \u00b6 - type : 'custom:button-card' template : card_generic_swap entity : sensor.next_waste_collection Template Code card_generic_swap.yaml --- ### Card Generic Swap ### card_generic_swap : template : - \"icon_info_bg\" - \"ulm_language_variables\" label : > [[[ var unit = entity.attributes.unit_of_measurement != null ? \" \" + entity.attributes.unit_of_measurement : \"\" if (entity.state == \"on\") { return variables.ulm_on; } else if (entity.state == \"off\") { return variables.ulm_off; } else if (entity.state == \"unavailable\") { return variables.ulm_unavailable; } else if (entity.state == \"idle\") { return variables.ulm_idle; } else if (entity.state == \"open\") { return variables.ulm_open; } else if (entity.state == \"closed\") { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : icon : - color : \"rgba(var(--color-theme),0.9)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\"","title":"Generic Swap Card"},{"location":"usage/cards/card_generic_swap/#description","text":"This is a generic-card with swapped label and name.","title":"Description"},{"location":"usage/cards/card_generic_swap/#variables","text":"Variable Default Required Notes entity","title":"Variables"},{"location":"usage/cards/card_generic_swap/#usage","text":"- type : 'custom:button-card' template : card_generic_swap entity : sensor.next_waste_collection Template Code card_generic_swap.yaml --- ### Card Generic Swap ### card_generic_swap : template : - \"icon_info_bg\" - \"ulm_language_variables\" label : > [[[ var unit = entity.attributes.unit_of_measurement != null ? \" \" + entity.attributes.unit_of_measurement : \"\" if (entity.state == \"on\") { return variables.ulm_on; } else if (entity.state == \"off\") { return variables.ulm_off; } else if (entity.state == \"unavailable\") { return variables.ulm_unavailable; } else if (entity.state == \"idle\") { return variables.ulm_idle; } else if (entity.state == \"open\") { return variables.ulm_open; } else if (entity.state == \"closed\") { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : icon : - color : \"rgba(var(--color-theme),0.9)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\"","title":"Usage"},{"location":"usage/cards/card_graph/","text":"Description \u00b6 The card_graph shows an entity with the actual state and a min-graph-card integrated. This can be used for a thermostat to show the actual temperature and the history. It now supports dual graphs as well as bar style graphs. Variables \u00b6 Variable Default Required Notes ulm_card_graph_color This is to adjust your color value. Use a CSS varible from HA or set a color value (eg. #FFFFFF) ulm_card_graph_name Enable background ulm_card_graph_entity Your entity_id for the temperature sensor ulm_card_graph_entity2 Your entity_id for the second temperature sensor ulm_card_graph_color2 This is to adjust your color value of the second graph. Use a CSS varible from HA or set a color value (eg. #FFFFFF) ulm_card_graph_type fill This is to change the appearence of the graph. Default is fill, but line, bar are valid options. ulm_card_graph_hours 24 How much time should the graph cover, default is 24 hours. Usage \u00b6 - type : 'custom:button-card' template : card_graph variables : ulm_card_graph_color : \"var(--google-blue)\" ulm_card_graph_name : Temperature Livingroom ulm_card_graph_entity : sensor.livingroom_temperature ulm_card_graph_color2 : \"var(--google-green)\" ulm_card_graph_entity2 : sensor.bedgroom_temperature ulm_card_graph_type : fill ulm_card_graph_hours : 24 Template Code card_graph.yaml --- ### Card Graph ### card_graph : variables : ulm_card_graph_color : \"var(--info-color)\" ulm_card_graph_name : \"n/a\" ulm_card_graph_color2 : \"var(--info-color)\" ulm_card_graph_name2 : \"n/a\" ulm_card_graph_entity2 : \"\" ulm_card_graph_hours : 24 ulm_card_graph_type : \"fill\" triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"card_generic\" styles : card : - box-shadow : \"none\" - border-radius : \"var(--border-radius) var(--border-radius) 0px 0px\" - padding : \"12px\" entity : \"[[[ return variables.ulm_card_graph_entity ]]]\" name : \"[[[ return variables.ulm_card_graph_name ]]]\" item2 : card : type : \"custom:mini-graph-card\" entities : > [[[ var ent = []; ent.push(variables.ulm_card_graph_entity); if(variables.ulm_card_graph_entity2 != \"\") ent.push(variables.ulm_card_graph_entity2); return ent; ]]] line_color : > [[[ var col = []; col.push(variables.ulm_card_graph_color); if(variables.ulm_card_graph_color2 != \"\") col.push(variables.ulm_card_graph_color2); return col; ]]] show : name : false icon : false legend : false state : false graph : \"[[[ return variables.ulm_card_graph_type=='fill'?'line':variables.ulm_card_graph_type; ]]]\" fill : \"[[[ return variables.ulm_card_graph_type=='fill'?true:false; ]]]\" hours_to_show : \"[[[ return variables.ulm_card_graph_hours; ]]]\" style : | ha-card { box-shadow: none; border-radius: var(--border-radius); }","title":"Graph Card"},{"location":"usage/cards/card_graph/#description","text":"The card_graph shows an entity with the actual state and a min-graph-card integrated. This can be used for a thermostat to show the actual temperature and the history. It now supports dual graphs as well as bar style graphs.","title":"Description"},{"location":"usage/cards/card_graph/#variables","text":"Variable Default Required Notes ulm_card_graph_color This is to adjust your color value. Use a CSS varible from HA or set a color value (eg. #FFFFFF) ulm_card_graph_name Enable background ulm_card_graph_entity Your entity_id for the temperature sensor ulm_card_graph_entity2 Your entity_id for the second temperature sensor ulm_card_graph_color2 This is to adjust your color value of the second graph. Use a CSS varible from HA or set a color value (eg. #FFFFFF) ulm_card_graph_type fill This is to change the appearence of the graph. Default is fill, but line, bar are valid options. ulm_card_graph_hours 24 How much time should the graph cover, default is 24 hours.","title":"Variables"},{"location":"usage/cards/card_graph/#usage","text":"- type : 'custom:button-card' template : card_graph variables : ulm_card_graph_color : \"var(--google-blue)\" ulm_card_graph_name : Temperature Livingroom ulm_card_graph_entity : sensor.livingroom_temperature ulm_card_graph_color2 : \"var(--google-green)\" ulm_card_graph_entity2 : sensor.bedgroom_temperature ulm_card_graph_type : fill ulm_card_graph_hours : 24 Template Code card_graph.yaml --- ### Card Graph ### card_graph : variables : ulm_card_graph_color : \"var(--info-color)\" ulm_card_graph_name : \"n/a\" ulm_card_graph_color2 : \"var(--info-color)\" ulm_card_graph_name2 : \"n/a\" ulm_card_graph_entity2 : \"\" ulm_card_graph_hours : 24 ulm_card_graph_type : \"fill\" triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"card_generic\" styles : card : - box-shadow : \"none\" - border-radius : \"var(--border-radius) var(--border-radius) 0px 0px\" - padding : \"12px\" entity : \"[[[ return variables.ulm_card_graph_entity ]]]\" name : \"[[[ return variables.ulm_card_graph_name ]]]\" item2 : card : type : \"custom:mini-graph-card\" entities : > [[[ var ent = []; ent.push(variables.ulm_card_graph_entity); if(variables.ulm_card_graph_entity2 != \"\") ent.push(variables.ulm_card_graph_entity2); return ent; ]]] line_color : > [[[ var col = []; col.push(variables.ulm_card_graph_color); if(variables.ulm_card_graph_color2 != \"\") col.push(variables.ulm_card_graph_color2); return col; ]]] show : name : false icon : false legend : false state : false graph : \"[[[ return variables.ulm_card_graph_type=='fill'?'line':variables.ulm_card_graph_type; ]]]\" fill : \"[[[ return variables.ulm_card_graph_type=='fill'?true:false; ]]]\" hours_to_show : \"[[[ return variables.ulm_card_graph_hours; ]]]\" style : | ha-card { box-shadow: none; border-radius: var(--border-radius); }","title":"Usage"},{"location":"usage/cards/card_input_boolean/","text":"Description \u00b6 The input-boolean-card is to switch an input_boolean on or off. Variables \u00b6 Variable Default Required Notes entity name Usage \u00b6 - type : 'custom:button-card' template : card_input_boolean entity : input_boolean.guest_mode name : Guest Mode Template Code card_input_boolean.yaml --- ### Card Input Boolean ### card_input_boolean : template : - \"icon_info_bg\" - \"ulm_language_variables\" - \"blue\" name : \"[[[ return entity.attributes.friendly_name != '' ? entity.attributes.friendly_name : entity.entity_id ]]]\" label : > [[[ if (entity.state != \"unavailable\"){ if (entity.state == \"on\"){ return variables.ulm_on; } else { return variables.ulm_off; } } else { return variables.ulm_unavailable; } ]]]","title":"Input_boolean Card"},{"location":"usage/cards/card_input_boolean/#description","text":"The input-boolean-card is to switch an input_boolean on or off.","title":"Description"},{"location":"usage/cards/card_input_boolean/#variables","text":"Variable Default Required Notes entity name","title":"Variables"},{"location":"usage/cards/card_input_boolean/#usage","text":"- type : 'custom:button-card' template : card_input_boolean entity : input_boolean.guest_mode name : Guest Mode Template Code card_input_boolean.yaml --- ### Card Input Boolean ### card_input_boolean : template : - \"icon_info_bg\" - \"ulm_language_variables\" - \"blue\" name : \"[[[ return entity.attributes.friendly_name != '' ? entity.attributes.friendly_name : entity.entity_id ]]]\" label : > [[[ if (entity.state != \"unavailable\"){ if (entity.state == \"on\"){ return variables.ulm_on; } else { return variables.ulm_off; } } else { return variables.ulm_unavailable; } ]]]","title":"Usage"},{"location":"usage/cards/card_light/","text":"Description \u00b6 This is the light-card , used to toggle a light or a light group. Shows state of the light and, if available, brightness in %. This documentation refers to the new \"All in one\" light card. This card merges the following one : legacy card_light (the old one) legacy card_light_slider legacy card_light_slider_collapse legacy card_light_slider_horizontal custom card_light_color by basbruss custom card_light_horizontal_color by basbruss custom card_light_slider_color by basbruss custom card_light_slider_collapse_color by basbruss Warning This card has backward compatibilty with older template except custom names and icons. It means variables like ulm_card_XXX_name and ulm_card_XXX_icon must be replaced by ulm_card_light_name and ulm_card_light_icon . To use popup_light you need to set the variable ulm_card_light_enable_popup to true . This is a different approach as the other popup_cards use. Variables \u00b6 Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_light_name friendly_name Customize name ulm_card_light_icon mdi:lightbulb Customize icon ulm_card_light_enable_slider false Enable slider ulm_card_light_enable_slider_minSet 0 Minimum brightness value user can select in the slider Need ulm_card_light_enable_slider: true ulm_card_light_enable_slider_maxSet 100 Maximum brightness value user can select in the slider Need ulm_card_light_enable_slider: true ulm_card_light_enable_collapse false Collapse slider when off Need ulm_card_light_enable_slider: true ulm_card_light_enable_horizontal false Enable horizontal card ulm_card_light_enable_horizontal_wide false Wider slider Need ulm_card_light_enable_horizontal: true ulm_card_light_enable_color false Enable icon and label light color ulm_card_light_force_background_color false Force background light color even in light theme ulm_card_light_enable_popup false Enable popup_light Usage \u00b6 - type : \"custom:button-card\" template : card_light entity : light.allee variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true ulm_card_light_force_background_color : true Template Code card_light.yaml --- ### Card Light ### card_light : template : - \"ulm_language_variables\" variables : ulm_card_light_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_light_icon : \"[[[ return entity.attributes.icon ]]]\" ulm_card_light_enable_collapse : false ulm_card_light_enable_slider : false ulm_card_light_enable_slider_minSet : 0 ulm_card_light_enable_slider_maxSet : 100 ulm_card_light_enable_horizontal : false ulm_card_light_enable_horizontal_wide : false ulm_card_light_enable_color : false ulm_card_light_force_background_color : false ulm_card_light_enable_popup : false show_icon : false show_name : false show_label : false tap_action : action : \"toggle\" hold_action : action : > [[[ if (variables.ulm_card_light_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_light_brightness\" variables : ulm_popup_light_entity : \"[[[ return entity.entity_id ]]]\" state : - value : \"on\" styles : card : - background-color : >- [[[ var color = entity.attributes.rgb_color; if (variables.ulm_card_light_enable_color == true){ if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){ if (color){ return 'rgba(' + color + ',0.1)' } else { return 'rgba(var(--color-yellow-text),0.1)' } } } return 'rgba(var(--color-background-yellow),var(--opacity-bg))'; ]]] styles : grid : - grid-template-areas : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"\\\"item1\\\"\"; } else if (variables.ulm_card_light_enable_horizontal) { return \"\\\"item1 item2\\\"\"; } else if (variables.ulm_card_light_enable_slider) { return \"\\\"item1\\\" \\\"item2\\\"\"; } else { return \"\\\"item1\\\"\"; } ]]] - grid-template-columns : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"1fr\"; } else if (variables.ulm_card_light_enable_horizontal) { if(variables.ulm_card_light_enable_horizontal_wide){ return \"1fr 2fr\"; } else { return \"1fr 1fr\"; } } else { return \"1fr\"; } ]]] - grid-template-rows : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"1fr\"; } else if (variables.ulm_card_light_enable_slider && !variables.ulm_card_light_enable_horizontal) { return \"min-content min-content\"; } else { return \"1fr\"; } ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item2 : - display : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"none\"; } else if (variables.ulm_card_light_enable_slider) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"[[[ return variables.ulm_card_light_icon ]]]\" hold_action : action : > [[[ if (variables.ulm_card_light_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_light_brightness\" variables : ulm_popup_light_entity : \"[[[ return entity.entity_id ]]]\" styles : icon : - color : > [[[ var color = entity.attributes.rgb_color; if (entity.state != \"on\"){ return 'rgba(var(--color-theme),0.2)'; } else if (color && variables.ulm_card_light_enable_color){ return 'rgba(' + color + ',1)' } else{ return 'rgba(var(--color-yellow),1)' } ]]] img_cell : - background-color : > [[[ var color = entity.attributes.rgb_color; if (entity.state != \"on\"){ return 'rgba(var(--color-theme),0.05)'; } else if (color && variables.ulm_card_light_enable_color){ return 'rgba(' + color + ',0.2)'; } else{ return 'rgba(var(--color-yellow),0.2)'; } ]]] item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_light_name ]]]\" hold_action : action : > [[[ if (variables.ulm_card_light_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_light_brightness\" variables : ulm_popup_light_entity : \"[[[ return entity.entity_id ]]]\" label : >- [[[ if (entity.state !=\"unavailable\"){ if (entity.state ==\"off\"){ return variables.ulm_off; } else if (entity.state == \"on\"){ if (entity.attributes.brightness != null){ var bri = Math.round(entity.attributes.brightness / 2.55); return (bri ? bri : \"0\") + \"%\"; } else { return variables.ulm_on } } } else { return variables.ulm_unavailable; } ]]] state : - value : \"on\" styles : name : - color : >- [[[ var color = entity.attributes.rgb_color; if (variables.ulm_card_light_enable_color == true){ if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){ if (color){ return 'rgba(' + color + ',1)' } else { return 'rgba(var(--color-yellow-text),1)' } } } return 'rgba(var(--color-yellow-text),1)' ]]] label : - color : >- [[[ var color = entity.attributes.rgb_color; if (variables.ulm_card_light_enable_color == true){ if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){ if (color){ return 'rgba(' + color + ',1)' } else { return 'rgba(var(--color-yellow-text),1)' } } } return 'rgba(var(--color-yellow-text),1)' ]]] item2 : card : type : \"custom:my-slider\" entity : \"[[[ return entity.entity_id ]]]\" radius : \"14px\" height : \"42px\" minSet : \"[[[ return variables.ulm_card_light_enable_slider_minSet ]]]\" maxSet : \"[[[ return variables.ulm_card_light_enable_slider_maxSet ]]]\" mainSliderColor : > [[[ var color = entity.attributes.rgb_color; if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),1)\"; } else if (color && variables.ulm_card_light_enable_color){ return \"rgba(\" + color + \",1)\"; } else{ return \"rgba(var(--color-yellow),1)\"; } ]]] secondarySliderColor : > [[[ var color = entity.attributes.rgb_color; if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),0.2)\"; } else if (color && variables.ulm_card_light_enable_color){ return \"rgba(\" + color + \",0.2)\"; } else{ return \"rgba(var(--color-yellow),0.2)\"; } ]]] mainSliderColorOff : \"rgba(var(--color-theme),0.05)\" secondarySliderColorOff : \"rgba(var(--color-theme),0.05)\" thumbHorizontalPadding : \"0px\" thumbVerticalPadding : \"0px\" thumbWidth : \"0px\" card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; }","title":"Light Card"},{"location":"usage/cards/card_light/#description","text":"This is the light-card , used to toggle a light or a light group. Shows state of the light and, if available, brightness in %. This documentation refers to the new \"All in one\" light card. This card merges the following one : legacy card_light (the old one) legacy card_light_slider legacy card_light_slider_collapse legacy card_light_slider_horizontal custom card_light_color by basbruss custom card_light_horizontal_color by basbruss custom card_light_slider_color by basbruss custom card_light_slider_collapse_color by basbruss Warning This card has backward compatibilty with older template except custom names and icons. It means variables like ulm_card_XXX_name and ulm_card_XXX_icon must be replaced by ulm_card_light_name and ulm_card_light_icon . To use popup_light you need to set the variable ulm_card_light_enable_popup to true . This is a different approach as the other popup_cards use.","title":"Description"},{"location":"usage/cards/card_light/#variables","text":"Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_light_name friendly_name Customize name ulm_card_light_icon mdi:lightbulb Customize icon ulm_card_light_enable_slider false Enable slider ulm_card_light_enable_slider_minSet 0 Minimum brightness value user can select in the slider Need ulm_card_light_enable_slider: true ulm_card_light_enable_slider_maxSet 100 Maximum brightness value user can select in the slider Need ulm_card_light_enable_slider: true ulm_card_light_enable_collapse false Collapse slider when off Need ulm_card_light_enable_slider: true ulm_card_light_enable_horizontal false Enable horizontal card ulm_card_light_enable_horizontal_wide false Wider slider Need ulm_card_light_enable_horizontal: true ulm_card_light_enable_color false Enable icon and label light color ulm_card_light_force_background_color false Force background light color even in light theme ulm_card_light_enable_popup false Enable popup_light","title":"Variables"},{"location":"usage/cards/card_light/#usage","text":"- type : \"custom:button-card\" template : card_light entity : light.allee variables : ulm_card_light_enable_slider : true ulm_card_light_enable_color : true ulm_card_light_force_background_color : true Template Code card_light.yaml --- ### Card Light ### card_light : template : - \"ulm_language_variables\" variables : ulm_card_light_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_light_icon : \"[[[ return entity.attributes.icon ]]]\" ulm_card_light_enable_collapse : false ulm_card_light_enable_slider : false ulm_card_light_enable_slider_minSet : 0 ulm_card_light_enable_slider_maxSet : 100 ulm_card_light_enable_horizontal : false ulm_card_light_enable_horizontal_wide : false ulm_card_light_enable_color : false ulm_card_light_force_background_color : false ulm_card_light_enable_popup : false show_icon : false show_name : false show_label : false tap_action : action : \"toggle\" hold_action : action : > [[[ if (variables.ulm_card_light_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_light_brightness\" variables : ulm_popup_light_entity : \"[[[ return entity.entity_id ]]]\" state : - value : \"on\" styles : card : - background-color : >- [[[ var color = entity.attributes.rgb_color; if (variables.ulm_card_light_enable_color == true){ if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){ if (color){ return 'rgba(' + color + ',0.1)' } else { return 'rgba(var(--color-yellow-text),0.1)' } } } return 'rgba(var(--color-background-yellow),var(--opacity-bg))'; ]]] styles : grid : - grid-template-areas : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"\\\"item1\\\"\"; } else if (variables.ulm_card_light_enable_horizontal) { return \"\\\"item1 item2\\\"\"; } else if (variables.ulm_card_light_enable_slider) { return \"\\\"item1\\\" \\\"item2\\\"\"; } else { return \"\\\"item1\\\"\"; } ]]] - grid-template-columns : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"1fr\"; } else if (variables.ulm_card_light_enable_horizontal) { if(variables.ulm_card_light_enable_horizontal_wide){ return \"1fr 2fr\"; } else { return \"1fr 1fr\"; } } else { return \"1fr\"; } ]]] - grid-template-rows : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"1fr\"; } else if (variables.ulm_card_light_enable_slider && !variables.ulm_card_light_enable_horizontal) { return \"min-content min-content\"; } else { return \"1fr\"; } ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item2 : - display : > [[[ if (variables.ulm_card_light_enable_collapse && entity.state != \"on\") { return \"none\"; } else if (variables.ulm_card_light_enable_slider) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"[[[ return variables.ulm_card_light_icon ]]]\" hold_action : action : > [[[ if (variables.ulm_card_light_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_light_brightness\" variables : ulm_popup_light_entity : \"[[[ return entity.entity_id ]]]\" styles : icon : - color : > [[[ var color = entity.attributes.rgb_color; if (entity.state != \"on\"){ return 'rgba(var(--color-theme),0.2)'; } else if (color && variables.ulm_card_light_enable_color){ return 'rgba(' + color + ',1)' } else{ return 'rgba(var(--color-yellow),1)' } ]]] img_cell : - background-color : > [[[ var color = entity.attributes.rgb_color; if (entity.state != \"on\"){ return 'rgba(var(--color-theme),0.05)'; } else if (color && variables.ulm_card_light_enable_color){ return 'rgba(' + color + ',0.2)'; } else{ return 'rgba(var(--color-yellow),0.2)'; } ]]] item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_light_name ]]]\" hold_action : action : > [[[ if (variables.ulm_card_light_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_light_brightness\" variables : ulm_popup_light_entity : \"[[[ return entity.entity_id ]]]\" label : >- [[[ if (entity.state !=\"unavailable\"){ if (entity.state ==\"off\"){ return variables.ulm_off; } else if (entity.state == \"on\"){ if (entity.attributes.brightness != null){ var bri = Math.round(entity.attributes.brightness / 2.55); return (bri ? bri : \"0\") + \"%\"; } else { return variables.ulm_on } } } else { return variables.ulm_unavailable; } ]]] state : - value : \"on\" styles : name : - color : >- [[[ var color = entity.attributes.rgb_color; if (variables.ulm_card_light_enable_color == true){ if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){ if (color){ return 'rgba(' + color + ',1)' } else { return 'rgba(var(--color-yellow-text),1)' } } } return 'rgba(var(--color-yellow-text),1)' ]]] label : - color : >- [[[ var color = entity.attributes.rgb_color; if (variables.ulm_card_light_enable_color == true){ if(variables.ulm_card_light_force_background_color == true || hass.themes.darkMode){ if (color){ return 'rgba(' + color + ',1)' } else { return 'rgba(var(--color-yellow-text),1)' } } } return 'rgba(var(--color-yellow-text),1)' ]]] item2 : card : type : \"custom:my-slider\" entity : \"[[[ return entity.entity_id ]]]\" radius : \"14px\" height : \"42px\" minSet : \"[[[ return variables.ulm_card_light_enable_slider_minSet ]]]\" maxSet : \"[[[ return variables.ulm_card_light_enable_slider_maxSet ]]]\" mainSliderColor : > [[[ var color = entity.attributes.rgb_color; if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),1)\"; } else if (color && variables.ulm_card_light_enable_color){ return \"rgba(\" + color + \",1)\"; } else{ return \"rgba(var(--color-yellow),1)\"; } ]]] secondarySliderColor : > [[[ var color = entity.attributes.rgb_color; if (entity.state == \"unavailable\"){ return \"rgba(var(--color-grey),0.2)\"; } else if (color && variables.ulm_card_light_enable_color){ return \"rgba(\" + color + \",0.2)\"; } else{ return \"rgba(var(--color-yellow),0.2)\"; } ]]] mainSliderColorOff : \"rgba(var(--color-theme),0.05)\" secondarySliderColorOff : \"rgba(var(--color-theme),0.05)\" thumbHorizontalPadding : \"0px\" thumbVerticalPadding : \"0px\" thumbWidth : \"0px\" card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; }","title":"Usage"},{"location":"usage/cards/card_media_player/","text":"Description \u00b6 The card_media_player shows you the app , the title and the album name playing, if the data is available through HA. The app is shown via a different icon. Variables \u00b6 Variable Default Required Notes entity The media-player entity name Name to display for your media-player ulm_card_media_player_name Name to display for your media-player ulm_card_media_player_icon Change the icon displayed ulm_card_media_player_enable_art false Enable album picture on background ulm_card_media_player_enable_controls false Enable controls bellow the title ulm_card_media_player_enable_volume_slider false Enable volume slider bellow controls ulm_card_media_player_collapsible false Controls are collapsible when state is off ulm_card_media_player_player_controls_entity entity Change the controlled entity ulm_card_media_player_enable_popup false Enable pop-up ulm_card_media_player_more_info false Displays artist and album info in the sub-label Note To use popup_media_player you need to set the variable ulm_card_media_player_enable_popup to true . This is a different approach as the other popup_cards use. Usage \u00b6 - type : \"custom:button-card\" template : card_media_player entity : media_player.livingroom_shield name : Livingroom Nvidia Shield Template Code card_media_player.yaml --- ### Card Media Player ### card_media_player : template : - \"ulm_language_variables\" variables : ulm_card_media_player_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_media_player_icon : false ulm_card_media_player_enable_art : false ulm_card_media_player_enable_controls : false ulm_card_media_player_enable_volume_slider : false ulm_card_media_player_collapsible : false ulm_card_media_player_player_controls_entity : \"[[[ return entity.entity_id ]]]\" ulm_card_media_player_enable_popup : false ulm_card_media_player_more_info : false triggers_update : \"all\" show_icon : false show_name : false show_label : false hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" styles : grid : - grid-template-areas : | [[[ var areas = \"'item1'\"; if (variables.ulm_card_media_player_enable_controls){ areas = areas + \" 'item2'\"; } if (variables.ulm_card_media_player_enable_volume_slider){ areas = areas + \" 'item3'\"; } return areas; ]]] - grid-template-columns : \"1fr\" - grid-template-rows : | [[[ var rows = \"min-content\"; if (variables.ulm_card_media_player_enable_controls){ rows = rows + \" min-content\"; } if (variables.ulm_card_media_player_enable_volume_slider){ rows = rows + \" min-content\"; } return rows; ]]] - row-gap : |- [[[ if (!variables.ulm_card_media_player_collapsible) { return \"12px\"; } else { return entity.state !== \"off\" ? \"12px\" : \"0px\"; } ]]] card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-blend-mode : \"multiply\" - background : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'center / cover url(' + states[entity.entity_id].attributes.entity_picture + ') rgba(0, 0, 0, 0.15)' : '' ]]] custom_fields : item2 : - display : | [[[ if(variables.ulm_card_media_player_enable_controls) { if(variables.ulm_card_media_player_collapsible){ return entity.state === \"off\" ? \"none\" : \"block\"; } return \"block\"; } return \"none\"; ]]] item3 : - display : | [[[ if(variables.ulm_card_media_player_enable_volume_slider) { if(variables.ulm_card_media_player_collapsible){ return entity.state === \"off\" ? \"none\" : \"block\"; } return \"block\"; } return \"none\"; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info_bg\" - \"ulm_language_variables\" entity : \"[[[ return entity.entity_id ]]]\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" icon : | [[[ var icon = entity.attributes.icon || \"mdi:speaker\"; if(entity.attributes.app_name){ var app = entity.attributes.app_name.toLowerCase(); if(app == \"spotify\"){ var icon = \"mdi:spotify\"; } else if(app == \"google podcasts\"){ var icon = \"mdi:google-podcast\"; } else if(app == \"plex\"){ var icon = \"mdi:plex\"; } else if(app == \"soundcloud\"){ var icon = \"mdi:soundcloud\"; } else if(app == \"youtube music\"){ var icon = \"mdi:youtube\"; } else if (app == \"oto music\"){ var icon = \"mdi:music-circle\"; } else if(app == \"pandora\"){ var icon = \"mdi:pandora\"; } else if(app == \"netflix\"){ var icon = \"mdi:netflix\"; } else if(app == \"bluetooth audio\"){ var icon = \"mdi:bluetooth\"; } } return variables.ulm_card_media_player_icon || icon; ]]] label : | [[[ let state = entity.state; return variables[\"ulm_\" + state] ? variables[\"ulm_\" + state] : state; ]]] state : - operator : \"template\" value : \"[[[ return entity.state == 'off' ]]]\" name : | [[[ let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name; return name; ]]] - operator : \"template\" value : \"[[[ return entity.state != 'off' ]]]\" name : | [[[ let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name; if(states[entity.entity_id].attributes.media_title){ name = states[entity.entity_id].attributes.media_title; } return name; ]]] label : | [[[ let label = variables.ulm_on; if (variables.ulm_card_media_player_more_info && states[entity.entity_id].attributes.media_artist && states[entity.entity_id].attributes.media_album_name) { label = states[entity.entity_id].attributes.media_artist + \" \u2022 \" + states[entity.entity_id].attributes.media_album_name; } else if(states[entity.entity_id].attributes.media_album_name) { label = states[entity.entity_id].attributes.media_album_name; } else if (states[entity.entity_id].attributes.media_artist) { label = states[entity.entity_id].attributes.media_artist } else { label = variables.ulm_on; } return label; ]]] styles : label : - opacity : \"1\" - filter : \"opacity(100%)\" - text-shadow : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? '0 0 black' : 'none' ]]] - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), .5)' ]]] name : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 1)' ]]] - text-shadow : \"0 0 black\" icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.2)' ]]] img_cell : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme), 0.05)' ]]] card : - padding : \"0px\" - background : \"none\" - border-radius : \"0\" - box-shadow : \"none\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" styles : card : - padding : \"0px\" - background : \"none\" - border-radius : \"0\" - box-shadow : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_previous_track\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" icon : \"mdi:skip-previous\" styles : card : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme),0.05)' ]]] icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.9)' ]]] item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_play_pause\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" icon : \"mdi:pause\" state : - value : \"paused\" icon : \"mdi:play\" - value : \"off\" icon : \"mdi:play\" styles : card : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme),0.05)' ]]] icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.9)' ]]] item3 : card : type : \"custom:button-card\" template : \"widget_icon\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_next_track\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" icon : \"mdi:skip-next\" styles : card : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme),0.05)' ]]] icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.9)' ]]] item3 : card : type : \"custom:my-slider\" entity : \"[[[ return entity.entity_id ]]]\" radius : \"14px\" height : \"42px\" mainSliderColor : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-blue),1)' ]]] secondarySliderColor : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.1)' : 'rgba(var(--color-blue),0.2)' ]]] mainSliderColorOff : \"rgba(var(--color-theme),0.05)\" secondarySliderColorOff : \"rgba(var(--color-theme),0.05)\" thumbHorizontalPadding : \"0px\" thumbVerticalPadding : \"0px\" thumbWidth : \"0px\" card_mod : style : | ha-card { border-radius: 14px; background-color: transparent; box-shadow: none; }","title":"Media_player Card"},{"location":"usage/cards/card_media_player/#description","text":"The card_media_player shows you the app , the title and the album name playing, if the data is available through HA. The app is shown via a different icon.","title":"Description"},{"location":"usage/cards/card_media_player/#variables","text":"Variable Default Required Notes entity The media-player entity name Name to display for your media-player ulm_card_media_player_name Name to display for your media-player ulm_card_media_player_icon Change the icon displayed ulm_card_media_player_enable_art false Enable album picture on background ulm_card_media_player_enable_controls false Enable controls bellow the title ulm_card_media_player_enable_volume_slider false Enable volume slider bellow controls ulm_card_media_player_collapsible false Controls are collapsible when state is off ulm_card_media_player_player_controls_entity entity Change the controlled entity ulm_card_media_player_enable_popup false Enable pop-up ulm_card_media_player_more_info false Displays artist and album info in the sub-label Note To use popup_media_player you need to set the variable ulm_card_media_player_enable_popup to true . This is a different approach as the other popup_cards use.","title":"Variables"},{"location":"usage/cards/card_media_player/#usage","text":"- type : \"custom:button-card\" template : card_media_player entity : media_player.livingroom_shield name : Livingroom Nvidia Shield Template Code card_media_player.yaml --- ### Card Media Player ### card_media_player : template : - \"ulm_language_variables\" variables : ulm_card_media_player_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_media_player_icon : false ulm_card_media_player_enable_art : false ulm_card_media_player_enable_controls : false ulm_card_media_player_enable_volume_slider : false ulm_card_media_player_collapsible : false ulm_card_media_player_player_controls_entity : \"[[[ return entity.entity_id ]]]\" ulm_card_media_player_enable_popup : false ulm_card_media_player_more_info : false triggers_update : \"all\" show_icon : false show_name : false show_label : false hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" styles : grid : - grid-template-areas : | [[[ var areas = \"'item1'\"; if (variables.ulm_card_media_player_enable_controls){ areas = areas + \" 'item2'\"; } if (variables.ulm_card_media_player_enable_volume_slider){ areas = areas + \" 'item3'\"; } return areas; ]]] - grid-template-columns : \"1fr\" - grid-template-rows : | [[[ var rows = \"min-content\"; if (variables.ulm_card_media_player_enable_controls){ rows = rows + \" min-content\"; } if (variables.ulm_card_media_player_enable_volume_slider){ rows = rows + \" min-content\"; } return rows; ]]] - row-gap : |- [[[ if (!variables.ulm_card_media_player_collapsible) { return \"12px\"; } else { return entity.state !== \"off\" ? \"12px\" : \"0px\"; } ]]] card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-blend-mode : \"multiply\" - background : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'center / cover url(' + states[entity.entity_id].attributes.entity_picture + ') rgba(0, 0, 0, 0.15)' : '' ]]] custom_fields : item2 : - display : | [[[ if(variables.ulm_card_media_player_enable_controls) { if(variables.ulm_card_media_player_collapsible){ return entity.state === \"off\" ? \"none\" : \"block\"; } return \"block\"; } return \"none\"; ]]] item3 : - display : | [[[ if(variables.ulm_card_media_player_enable_volume_slider) { if(variables.ulm_card_media_player_collapsible){ return entity.state === \"off\" ? \"none\" : \"block\"; } return \"block\"; } return \"none\"; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info_bg\" - \"ulm_language_variables\" entity : \"[[[ return entity.entity_id ]]]\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" icon : | [[[ var icon = entity.attributes.icon || \"mdi:speaker\"; if(entity.attributes.app_name){ var app = entity.attributes.app_name.toLowerCase(); if(app == \"spotify\"){ var icon = \"mdi:spotify\"; } else if(app == \"google podcasts\"){ var icon = \"mdi:google-podcast\"; } else if(app == \"plex\"){ var icon = \"mdi:plex\"; } else if(app == \"soundcloud\"){ var icon = \"mdi:soundcloud\"; } else if(app == \"youtube music\"){ var icon = \"mdi:youtube\"; } else if (app == \"oto music\"){ var icon = \"mdi:music-circle\"; } else if(app == \"pandora\"){ var icon = \"mdi:pandora\"; } else if(app == \"netflix\"){ var icon = \"mdi:netflix\"; } else if(app == \"bluetooth audio\"){ var icon = \"mdi:bluetooth\"; } } return variables.ulm_card_media_player_icon || icon; ]]] label : | [[[ let state = entity.state; return variables[\"ulm_\" + state] ? variables[\"ulm_\" + state] : state; ]]] state : - operator : \"template\" value : \"[[[ return entity.state == 'off' ]]]\" name : | [[[ let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name; return name; ]]] - operator : \"template\" value : \"[[[ return entity.state != 'off' ]]]\" name : | [[[ let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name; if(states[entity.entity_id].attributes.media_title){ name = states[entity.entity_id].attributes.media_title; } return name; ]]] label : | [[[ let label = variables.ulm_on; if (variables.ulm_card_media_player_more_info && states[entity.entity_id].attributes.media_artist && states[entity.entity_id].attributes.media_album_name) { label = states[entity.entity_id].attributes.media_artist + \" \u2022 \" + states[entity.entity_id].attributes.media_album_name; } else if(states[entity.entity_id].attributes.media_album_name) { label = states[entity.entity_id].attributes.media_album_name; } else if (states[entity.entity_id].attributes.media_artist) { label = states[entity.entity_id].attributes.media_artist } else { label = variables.ulm_on; } return label; ]]] styles : label : - opacity : \"1\" - filter : \"opacity(100%)\" - text-shadow : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? '0 0 black' : 'none' ]]] - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), .5)' ]]] name : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 1)' ]]] - text-shadow : \"0 0 black\" icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.2)' ]]] img_cell : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme), 0.05)' ]]] card : - padding : \"0px\" - background : \"none\" - border-radius : \"0\" - box-shadow : \"none\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" styles : card : - padding : \"0px\" - background : \"none\" - border-radius : \"0\" - box-shadow : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_previous_track\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" icon : \"mdi:skip-previous\" styles : card : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme),0.05)' ]]] icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.9)' ]]] item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_play_pause\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" icon : \"mdi:pause\" state : - value : \"paused\" icon : \"mdi:play\" - value : \"off\" icon : \"mdi:play\" styles : card : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme),0.05)' ]]] icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.9)' ]]] item3 : card : type : \"custom:button-card\" template : \"widget_icon\" hold_action : action : > [[[ if (variables.ulm_card_media_player_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_media_player_infos\" variables : ulm_popup_media_player_entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_next_track\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\" icon : \"mdi:skip-next\" styles : card : - background-color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-theme),0.05)' ]]] icon : - color : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'white' : 'rgba(var(--color-theme), 0.9)' ]]] item3 : card : type : \"custom:my-slider\" entity : \"[[[ return entity.entity_id ]]]\" radius : \"14px\" height : \"42px\" mainSliderColor : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.2)' : 'rgba(var(--color-blue),1)' ]]] secondarySliderColor : | [[[ return variables.ulm_card_media_player_enable_art && states[entity.entity_id].attributes.entity_picture != null ? 'rgba(0, 0, 0, 0.1)' : 'rgba(var(--color-blue),0.2)' ]]] mainSliderColorOff : \"rgba(var(--color-theme),0.05)\" secondarySliderColorOff : \"rgba(var(--color-theme),0.05)\" thumbHorizontalPadding : \"0px\" thumbVerticalPadding : \"0px\" thumbWidth : \"0px\" card_mod : style : | ha-card { border-radius: 14px; background-color: transparent; box-shadow: none; }","title":"Usage"},{"location":"usage/cards/card_navigate/","text":"Description \u00b6 The card_navigate is for navigating inside your HA dashboard(s). Variables \u00b6 Variable Default Required Notes ulm_card_navigate_path The path to your lovelace dashboard ulm_card_navigate_title Title to show for the link ulm_card_navigate_icon Icon to show Usage \u00b6 - type : custom:button-card template : card_navigate variables : ulm_card_navigate_path : /ui-lovelace-minimalist/media ulm_card_navigate_title : Media ulm_card_navigate_icon : mdi:television Template Code card_navigate.yaml --- ### Card Navigate ### card_navigate : template : - \"icon_only\" - \"blue_no_state\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_card_navigate_path; ]]]\" label : \"[[[ return variables.ulm_card_navigate_title; ]]]\" icon : \"[[[ return variables.ulm_card_navigate_icon; ]]]\" styles : icon : - color : \"rgba(var(--color-blue),0.7)\" label : - align-self : \"center\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" grid : - grid-template-areas : \"'i l'\" - grid-template-columns : \"min-content min-content\" - grid-template-rows : \"min-content\"","title":"Navigate Card"},{"location":"usage/cards/card_navigate/#description","text":"The card_navigate is for navigating inside your HA dashboard(s).","title":"Description"},{"location":"usage/cards/card_navigate/#variables","text":"Variable Default Required Notes ulm_card_navigate_path The path to your lovelace dashboard ulm_card_navigate_title Title to show for the link ulm_card_navigate_icon Icon to show","title":"Variables"},{"location":"usage/cards/card_navigate/#usage","text":"- type : custom:button-card template : card_navigate variables : ulm_card_navigate_path : /ui-lovelace-minimalist/media ulm_card_navigate_title : Media ulm_card_navigate_icon : mdi:television Template Code card_navigate.yaml --- ### Card Navigate ### card_navigate : template : - \"icon_only\" - \"blue_no_state\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_card_navigate_path; ]]]\" label : \"[[[ return variables.ulm_card_navigate_title; ]]]\" icon : \"[[[ return variables.ulm_card_navigate_icon; ]]]\" styles : icon : - color : \"rgba(var(--color-blue),0.7)\" label : - align-self : \"center\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" grid : - grid-template-areas : \"'i l'\" - grid-template-columns : \"min-content min-content\" - grid-template-rows : \"min-content\"","title":"Usage"},{"location":"usage/cards/card_person/","text":"Description \u00b6 The card_person shows if a person is home or not_home . If you have setup other zones, it will show these as well. Variables \u00b6 Variable Default Required Notes ulm_card_person_entity The person entity ulm_card_person_use_entity_picture If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_zone1 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_card_person_zone2 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_address Show an address as label, add an entity with a geo location Usage \u00b6 - type : 'custom:button-card' template : card_person variables : ulm_card_person_entity : person.username ulm_card_person_use_entity_picture : true ulm_card_person_zone1 : zone.work ulm_card_person_zone2 : zone.school ulm_address : sensor.s10_mike_gegeocodeerde_locatie Template Code card_person.yaml --- ### Card Person ### card_person : template : - \"icon_info_bg\" - \"ulm_language_variables\" variables : ulm_card_person_use_entity_picture : false ulm_card_person_zone1 : \"\" ulm_card_person_zone2 : \"\" ulm_address : \"\" triggers_update : \"all\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" show_label : true show_name : true label : > [[[ if (variables.ulm_address !== ''){ return states[variables.ulm_address].state } else { let state = states[variables.ulm_card_person_entity].state; return variables[\"ulm_person_state_\" + state] ? variables[\"ulm_person_state_\" + state] : state; } ]]] name : \"[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" icon : \"mdi:face-man\" show_entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\" entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture != false ? states[variables.ulm_card_person_entity].attributes.entity_picture\\ \\ : null ]]]\" styles : icon : - color : \"rgba(var(--color-theme),0.9)\" - width : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"20px\"; } else { return \"42px\"; } ]]] - place-self : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"center\"; } else { return \"stretch stretch\"; } ]]] custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_person_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] custom_fields : notification : > [[[ if (states[variables.ulm_card_person_entity].state !== 'home') { if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone1]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone1].attributes.icon !== null ? states[variables.ulm_card_person_zone1].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone2]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone2].attributes.icon !== null ? states[variables.ulm_card_person_zone2].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } } else { return '<ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]]","title":"Person Card"},{"location":"usage/cards/card_person/#description","text":"The card_person shows if a person is home or not_home . If you have setup other zones, it will show these as well.","title":"Description"},{"location":"usage/cards/card_person/#variables","text":"Variable Default Required Notes ulm_card_person_entity The person entity ulm_card_person_use_entity_picture If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_zone1 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_card_person_zone2 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_address Show an address as label, add an entity with a geo location","title":"Variables"},{"location":"usage/cards/card_person/#usage","text":"- type : 'custom:button-card' template : card_person variables : ulm_card_person_entity : person.username ulm_card_person_use_entity_picture : true ulm_card_person_zone1 : zone.work ulm_card_person_zone2 : zone.school ulm_address : sensor.s10_mike_gegeocodeerde_locatie Template Code card_person.yaml --- ### Card Person ### card_person : template : - \"icon_info_bg\" - \"ulm_language_variables\" variables : ulm_card_person_use_entity_picture : false ulm_card_person_zone1 : \"\" ulm_card_person_zone2 : \"\" ulm_address : \"\" triggers_update : \"all\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" show_label : true show_name : true label : > [[[ if (variables.ulm_address !== ''){ return states[variables.ulm_address].state } else { let state = states[variables.ulm_card_person_entity].state; return variables[\"ulm_person_state_\" + state] ? variables[\"ulm_person_state_\" + state] : state; } ]]] name : \"[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" icon : \"mdi:face-man\" show_entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\" entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture != false ? states[variables.ulm_card_person_entity].attributes.entity_picture\\ \\ : null ]]]\" styles : icon : - color : \"rgba(var(--color-theme),0.9)\" - width : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"20px\"; } else { return \"42px\"; } ]]] - place-self : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"center\"; } else { return \"stretch stretch\"; } ]]] custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_person_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] custom_fields : notification : > [[[ if (states[variables.ulm_card_person_entity].state !== 'home') { if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone1]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone1].attributes.icon !== null ? states[variables.ulm_card_person_zone1].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone2]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone2].attributes.icon !== null ? states[variables.ulm_card_person_zone2].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } } else { return '<ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]]","title":"Usage"},{"location":"usage/cards/card_power_outlet/","text":"Description \u00b6 This is the power-outlet-card . It shows you the state of a power outlet, and if configured, the actual power consumption of the power outlet. Variables \u00b6 Variable Default Required Notes entity name Enable background ulm_card_power_outlet_consumption_sensor If you set this sensor, the power-outlet-card shows the energy consumption next to the state. Usage \u00b6 - type : 'custom:button-card' template : card_power_outlet variables : ulm_card_power_outlet_consumption_sensor : sensor.power_outlet_livingroom_consumption entity : switch.power_outlet_livingroom name : Power Outlet Livingroom Template Code card_power_outlet.yaml --- ### Card Power Outlet ### card_power_outlet : template : - \"icon_info_bg\" - \"yellow\" - \"ulm_language_variables\" variables : ulm_card_power_outlet_consumption_sensor : triggers_update : \"all\" label : |- [[[ if (entity.state === \"on\" && variables.ulm_card_power_outlet_consumption_sensor !== null) { return variables.ulm_on + \" \u2022 \" + states[variables.ulm_card_power_outlet_consumption_sensor].state + \"W\"; } else if (entity.state === \"on\") { return variables.ulm_on; } else if (entity.state === \"off\") { return variables.ulm_off; } else if (entity.state === \"unavailable\") { return variables.ulm_unavailable; } else { return entity.state; } ]]]","title":"Power Outlet Card"},{"location":"usage/cards/card_power_outlet/#description","text":"This is the power-outlet-card . It shows you the state of a power outlet, and if configured, the actual power consumption of the power outlet.","title":"Description"},{"location":"usage/cards/card_power_outlet/#variables","text":"Variable Default Required Notes entity name Enable background ulm_card_power_outlet_consumption_sensor If you set this sensor, the power-outlet-card shows the energy consumption next to the state.","title":"Variables"},{"location":"usage/cards/card_power_outlet/#usage","text":"- type : 'custom:button-card' template : card_power_outlet variables : ulm_card_power_outlet_consumption_sensor : sensor.power_outlet_livingroom_consumption entity : switch.power_outlet_livingroom name : Power Outlet Livingroom Template Code card_power_outlet.yaml --- ### Card Power Outlet ### card_power_outlet : template : - \"icon_info_bg\" - \"yellow\" - \"ulm_language_variables\" variables : ulm_card_power_outlet_consumption_sensor : triggers_update : \"all\" label : |- [[[ if (entity.state === \"on\" && variables.ulm_card_power_outlet_consumption_sensor !== null) { return variables.ulm_on + \" \u2022 \" + states[variables.ulm_card_power_outlet_consumption_sensor].state + \"W\"; } else if (entity.state === \"on\") { return variables.ulm_on; } else if (entity.state === \"off\") { return variables.ulm_off; } else if (entity.state === \"unavailable\") { return variables.ulm_unavailable; } else { return entity.state; } ]]]","title":"Usage"},{"location":"usage/cards/card_room/","text":"Description \u00b6 This is the room-card , used to show the state of single room in a quick glance. The card has support for 4 subicons at the right side of the card. These can be configured using custom colors and tap actions. Variables \u00b6 Variable Default Required Notes Requirement label_use_temperature true Define whether the label should show the current room temperature The temperature should be provide by either a temperature or current_temperature attribute or by the entity state label_use_brightness false Define whether the label should show the current room brightness of the lights requires label_use_temperature to be false entity_1 a room_entity object (see below) entity_2 a room_entity object (see below) entity_3 a room_entity object (see below) entity_4 a room_entity object (see below) Room entity \u00b6 Variable Default Required Notes Requirement entity_id The entity_id of the status icon templates List of the additional button card templates to apply to this icon tap_action tap_action for the icon (see button card documentation for options) hold_action tap_action for the icon (see button card documentation for options) Default card options \u00b6 All the options from the button card are still available for the large room card. If you want to tweak this card a little bit more, below are some examples. The full list can be found here: link Options Default Required Notes Requirement entity The entity_id for the large card icon Icon to display. Defaults to the entity icon tap_action Define the type of action on click, if undefined, toggle will be used. see Action hold_action Define the type of action on hold, if undefined, nothing happens see Action label Change the label text title Change the title text Usage \u00b6 - type : 'custom:button-card' template : - card_room - red_no_state name : Bathroom entity : light.bathroom icon : mdi:shower-head tap_action : action : navigate navigation_path : '/ui-lovelace-minimalist/bathroom' variables : label_use_temperature : false label_use_brightness : true entity_1 : entity_id : light.bathroom templates : - yellow_on tap_action : action : toggle entity_2 : entity_id : binary_sensor.badkamer_motion_sensor templates : - blue_on tap_action : action : none entity_3 : entity_id : input_boolean.badkamer_motionsensor_enabled templates : - green_on - red_off tap_action : action : toggle entity_4 : entity_id : input_boolean.bath_mode templates : - pink_on tap_action : action : toggle Template Code card_room.yaml --- card_room : template : - \"ulm_language_variables\" variables : label_use_temperature : true label_use_brightness : false color : \"var(--google-grey-500)\" show_icon : true show_name : true show_label : true size : \"45%\" aspect_ratio : \"1/1\" label : |- [[[ if (variables.label_use_temperature) { return (entity.attributes.current_temperature || entity.attributes.temperature || entity.state || '-') + (entity.attributes.unit_of_measurement || '\u00b0C'); } else if (variables.label_use_brightness) { if (entity.state){ if (entity.state == \"off\"){ return variables.ulm_off; } else if (entity.state == \"on\"){ if (entity.attributes.brightness != null){ var bri = Math.round(entity.attributes.brightness / 2.55); return (bri ? bri : \"0\") + \"%\"; } else { return variables.ulm_on } } } else { return variables.ulm_unavailable; } } else if (entity.state == \"on\") { return variables.ulm_on } else if (entity.state == \"off\") { return variables.ulm_off } else { return entity.state } ]]] state : - styles : custom_fields : notification : - border-radius : \"50%\" - border : \"2px solid var(--card-background-color)\" - width : \"24.5px\" - height : \"24.5px\" - position : \"absolute\" - left : \"50%\" - top : \"50%\" - transform : \"translate(-50%,-50%)\" - margin-top : \"35%\" - margin-left : \"-35%\" - line-height : 0 - display : \"grid\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] value : \"unavailable\" styles : card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"5px\" grid : - grid-template-areas : \"'n n n i1' 'l l l i2' 'i i . i3' 'i i . i4'\" - grid-template-columns : \"1fr 1fr 1fr 1fr\" - grid-template-rows : \"1fr 1fr 1fr 1fr\" - justify-items : \"center\" icon : - color : \"rgba(var(--color-theme),0.2)\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - width : \"75%\" - height : \"75%\" - max-width : \"none\" - max-height : \"none\" - position : \"absolute\" - left : \"50%\" - top : \"50%\" - transform : \"translate(-50%,-50%)\" - margin-top : \"25%\" - margin-left : \"-25%\" name : - justify-self : \"start\" - align-self : \"end\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - margin-bottom : \"10%\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" - margin-top : \"-10%\" state : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"6px\" custom_fields : i1 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" i2 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" i3 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" i4 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" custom_fields : notification : > [[[ if (entity.state =='unavailable'){ return `<ha-icon icon=\"mdi:exclamation\" style=\"width: 50%; height: 50%; color: var(--primary-background-color);\"></ha-icon>` } ]]] i1 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_1?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_1.templates); } return templates; ]]] variables : \"[[[ return variables.entity_1; ]]]\" entity : > [[[ if (variables.entity_1.entity_id) { return variables.entity_1.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_1; ]]]\" styles : card : - display : \"none\" i2 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_2?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_2.templates); } return templates; ]]] variables : \"[[[ return variables.entity_2; ]]]\" entity : > [[[ if (variables?.entity_2?.entity_id) { return variables.entity_2.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_2; ]]]\" styles : card : - display : \"none\" i3 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_3?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_3.templates); } return templates; ]]] variables : \"[[[ return variables.entity_3; ]]]\" entity : > [[[ if (variables?.entity_3?.entity_id) { return variables.entity_3.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_3; ]]]\" styles : card : - display : \"none\" i4 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_4?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_4.templates); } return templates; ]]] variables : \"[[[ return variables.entity_4; ]]]\" entity : > [[[ if (variables?.entity_4?.entity_id) { return variables.entity_4.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_4; ]]]\" styles : card : - display : \"none\" widget_icon_room : variables : tap_action : action : \"toggle\" hold_action : action : \"none\" tap_action : action : > [[[ if (variables?.tap_action?.action) return variables.tap_action.action; else return 'none'; ]]] entity : \"[[[ return variables.tap_action.entity; ]]]\" navigation_path : \"[[[ return variables.tap_action.navigation_path; ]]]\" url_path : \"[[[ return variables.tap_action.url_path; ]]]\" service : \"[[[ return variables.tap_action.service; ]]]\" service_data : \"[[[ return variables.tap_action.service_data; ]]]\" hold_action : action : > [[[ if (variables?.hold_action?.action) return variables.hold_action.action; else return 'none'; ]]] entity : \"[[[ return variables.hold_action.entity; ]]]\" navigation_path : \"[[[ return variables.hold_action.navigation_path; ]]]\" url_path : \"[[[ return variables.hold_action.url_path; ]]]\" service : \"[[[ return variables.hold_action.service; ]]]\" service_data : \"[[[ return variables.hold_action.service_data; ]]]\" show_icon : true show_name : false styles : grid : - grid-template-areas : \"'i'\" card : - height : \"100%\" - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"50%\" icon : - width : \"50%\" - height : \"50%\" - line-height : \"0\" - color : \"rgba(var(--color-theme),0.2)\" img_cell : - border-radius : \"50%\" - background-color : \"rgba(var(--color-theme),0.05)\" size : \"15px\" color : \"var(--google-grey)\"","title":"Room Card"},{"location":"usage/cards/card_room/#description","text":"This is the room-card , used to show the state of single room in a quick glance. The card has support for 4 subicons at the right side of the card. These can be configured using custom colors and tap actions.","title":"Description"},{"location":"usage/cards/card_room/#variables","text":"Variable Default Required Notes Requirement label_use_temperature true Define whether the label should show the current room temperature The temperature should be provide by either a temperature or current_temperature attribute or by the entity state label_use_brightness false Define whether the label should show the current room brightness of the lights requires label_use_temperature to be false entity_1 a room_entity object (see below) entity_2 a room_entity object (see below) entity_3 a room_entity object (see below) entity_4 a room_entity object (see below)","title":"Variables"},{"location":"usage/cards/card_room/#room-entity","text":"Variable Default Required Notes Requirement entity_id The entity_id of the status icon templates List of the additional button card templates to apply to this icon tap_action tap_action for the icon (see button card documentation for options) hold_action tap_action for the icon (see button card documentation for options)","title":"Room entity"},{"location":"usage/cards/card_room/#default-card-options","text":"All the options from the button card are still available for the large room card. If you want to tweak this card a little bit more, below are some examples. The full list can be found here: link Options Default Required Notes Requirement entity The entity_id for the large card icon Icon to display. Defaults to the entity icon tap_action Define the type of action on click, if undefined, toggle will be used. see Action hold_action Define the type of action on hold, if undefined, nothing happens see Action label Change the label text title Change the title text","title":"Default card options"},{"location":"usage/cards/card_room/#usage","text":"- type : 'custom:button-card' template : - card_room - red_no_state name : Bathroom entity : light.bathroom icon : mdi:shower-head tap_action : action : navigate navigation_path : '/ui-lovelace-minimalist/bathroom' variables : label_use_temperature : false label_use_brightness : true entity_1 : entity_id : light.bathroom templates : - yellow_on tap_action : action : toggle entity_2 : entity_id : binary_sensor.badkamer_motion_sensor templates : - blue_on tap_action : action : none entity_3 : entity_id : input_boolean.badkamer_motionsensor_enabled templates : - green_on - red_off tap_action : action : toggle entity_4 : entity_id : input_boolean.bath_mode templates : - pink_on tap_action : action : toggle Template Code card_room.yaml --- card_room : template : - \"ulm_language_variables\" variables : label_use_temperature : true label_use_brightness : false color : \"var(--google-grey-500)\" show_icon : true show_name : true show_label : true size : \"45%\" aspect_ratio : \"1/1\" label : |- [[[ if (variables.label_use_temperature) { return (entity.attributes.current_temperature || entity.attributes.temperature || entity.state || '-') + (entity.attributes.unit_of_measurement || '\u00b0C'); } else if (variables.label_use_brightness) { if (entity.state){ if (entity.state == \"off\"){ return variables.ulm_off; } else if (entity.state == \"on\"){ if (entity.attributes.brightness != null){ var bri = Math.round(entity.attributes.brightness / 2.55); return (bri ? bri : \"0\") + \"%\"; } else { return variables.ulm_on } } } else { return variables.ulm_unavailable; } } else if (entity.state == \"on\") { return variables.ulm_on } else if (entity.state == \"off\") { return variables.ulm_off } else { return entity.state } ]]] state : - styles : custom_fields : notification : - border-radius : \"50%\" - border : \"2px solid var(--card-background-color)\" - width : \"24.5px\" - height : \"24.5px\" - position : \"absolute\" - left : \"50%\" - top : \"50%\" - transform : \"translate(-50%,-50%)\" - margin-top : \"35%\" - margin-left : \"-35%\" - line-height : 0 - display : \"grid\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] value : \"unavailable\" styles : card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"5px\" grid : - grid-template-areas : \"'n n n i1' 'l l l i2' 'i i . i3' 'i i . i4'\" - grid-template-columns : \"1fr 1fr 1fr 1fr\" - grid-template-rows : \"1fr 1fr 1fr 1fr\" - justify-items : \"center\" icon : - color : \"rgba(var(--color-theme),0.2)\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - width : \"75%\" - height : \"75%\" - max-width : \"none\" - max-height : \"none\" - position : \"absolute\" - left : \"50%\" - top : \"50%\" - transform : \"translate(-50%,-50%)\" - margin-top : \"25%\" - margin-left : \"-25%\" name : - justify-self : \"start\" - align-self : \"end\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - margin-bottom : \"10%\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" - margin-top : \"-10%\" state : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"6px\" custom_fields : i1 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" i2 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" i3 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" i4 : - border-radius : \"50%\" - width : \"80%\" - height : \"80%\" - line-height : 0 - display : \"grid\" custom_fields : notification : > [[[ if (entity.state =='unavailable'){ return `<ha-icon icon=\"mdi:exclamation\" style=\"width: 50%; height: 50%; color: var(--primary-background-color);\"></ha-icon>` } ]]] i1 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_1?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_1.templates); } return templates; ]]] variables : \"[[[ return variables.entity_1; ]]]\" entity : > [[[ if (variables.entity_1.entity_id) { return variables.entity_1.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_1; ]]]\" styles : card : - display : \"none\" i2 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_2?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_2.templates); } return templates; ]]] variables : \"[[[ return variables.entity_2; ]]]\" entity : > [[[ if (variables?.entity_2?.entity_id) { return variables.entity_2.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_2; ]]]\" styles : card : - display : \"none\" i3 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_3?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_3.templates); } return templates; ]]] variables : \"[[[ return variables.entity_3; ]]]\" entity : > [[[ if (variables?.entity_3?.entity_id) { return variables.entity_3.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_3; ]]]\" styles : card : - display : \"none\" i4 : card : type : \"custom:button-card\" template : > [[[ var templates = ['widget_icon_room']; if (variables?.entity_4?.templates?.length) { return ['widget_icon_room'].concat(variables.entity_4.templates); } return templates; ]]] variables : \"[[[ return variables.entity_4; ]]]\" entity : > [[[ if (variables?.entity_4?.entity_id) { return variables.entity_4.entity_id; } ]]] state : - operator : \"template\" value : \"[[[ return !variables.entity_4; ]]]\" styles : card : - display : \"none\" widget_icon_room : variables : tap_action : action : \"toggle\" hold_action : action : \"none\" tap_action : action : > [[[ if (variables?.tap_action?.action) return variables.tap_action.action; else return 'none'; ]]] entity : \"[[[ return variables.tap_action.entity; ]]]\" navigation_path : \"[[[ return variables.tap_action.navigation_path; ]]]\" url_path : \"[[[ return variables.tap_action.url_path; ]]]\" service : \"[[[ return variables.tap_action.service; ]]]\" service_data : \"[[[ return variables.tap_action.service_data; ]]]\" hold_action : action : > [[[ if (variables?.hold_action?.action) return variables.hold_action.action; else return 'none'; ]]] entity : \"[[[ return variables.hold_action.entity; ]]]\" navigation_path : \"[[[ return variables.hold_action.navigation_path; ]]]\" url_path : \"[[[ return variables.hold_action.url_path; ]]]\" service : \"[[[ return variables.hold_action.service; ]]]\" service_data : \"[[[ return variables.hold_action.service_data; ]]]\" show_icon : true show_name : false styles : grid : - grid-template-areas : \"'i'\" card : - height : \"100%\" - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"50%\" icon : - width : \"50%\" - height : \"50%\" - line-height : \"0\" - color : \"rgba(var(--color-theme),0.2)\" img_cell : - border-radius : \"50%\" - background-color : \"rgba(var(--color-theme),0.05)\" size : \"15px\" color : \"var(--google-grey)\"","title":"Usage"},{"location":"usage/cards/card_script/","text":"Description \u00b6 This card starts/runs a script. You can configure icon and text. Variables \u00b6 Variable Default Required Notes ulm_card_script_title Name to show for the script. ulm_card_script_icon Icon to show for the script. tap_action_action Only call-service is allowed here. tap_action_service Let the script run by turning it on. tap_action_service_data This is the service_data needed by your script. That can be an entity_id and/or some variables. Usage \u00b6 - type : 'custom:button-card' template : card_script variables : ulm_card_script_title : Romantic lights ulm_card_script_icon : 'mdi:candle' tap_action : action : call-service service : script.turn_on service_data : entity_id : script.romantic_livingroom_lights Template Code card_script.yaml --- ### Card Script ### card_script : template : - \"icon_only\" label : \"[[[ return variables.ulm_card_script_title; ]]]\" icon : \"[[[ return variables.ulm_card_script_icon; ]]]\" styles : icon : - color : \"rgba(var(--color-blue),0.7)\" label : - align-self : \"center\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" grid : - grid-template-areas : \"'i l'\" - grid-template-columns : \"min-content min-content\" - grid-template-rows : \"min-content\"","title":"Script Card"},{"location":"usage/cards/card_script/#description","text":"This card starts/runs a script. You can configure icon and text.","title":"Description"},{"location":"usage/cards/card_script/#variables","text":"Variable Default Required Notes ulm_card_script_title Name to show for the script. ulm_card_script_icon Icon to show for the script. tap_action_action Only call-service is allowed here. tap_action_service Let the script run by turning it on. tap_action_service_data This is the service_data needed by your script. That can be an entity_id and/or some variables.","title":"Variables"},{"location":"usage/cards/card_script/#usage","text":"- type : 'custom:button-card' template : card_script variables : ulm_card_script_title : Romantic lights ulm_card_script_icon : 'mdi:candle' tap_action : action : call-service service : script.turn_on service_data : entity_id : script.romantic_livingroom_lights Template Code card_script.yaml --- ### Card Script ### card_script : template : - \"icon_only\" label : \"[[[ return variables.ulm_card_script_title; ]]]\" icon : \"[[[ return variables.ulm_card_script_icon; ]]]\" styles : icon : - color : \"rgba(var(--color-blue),0.7)\" label : - align-self : \"center\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" grid : - grid-template-areas : \"'i l'\" - grid-template-columns : \"min-content min-content\" - grid-template-rows : \"min-content\"","title":"Usage"},{"location":"usage/cards/card_thermostat/","text":"Description \u00b6 This is the thermostat-card , used to toggle a climate entity. Shows state of the thermostat and, if available, current temperature. This documentation refers to the new \"All in one\" thermostat card. This card merges the following one : legacy card_thermostat (the old one) custom custom_card_heat_pump by Kam custom custom_card_mpse_thermostat by mpse custom custom_card_httpedo13_thermostat by httpedo13 custom custom_card_httpedo13_thermostat_with_buttons by httpedo13 custom custom_card_httpedo13_thermostat_with_buttons_collapse by httpedo13 Warning This card has backward compatibilty with older template except custom names and icons. It means variables like ulm_card_XXX_name and ulm_card_XXX_icon must be replaced by ulm_card_thermostat_name and ulm_card_thermostat_icon . To use popup_thermostat you need to set the variable ulm_card_thermostat_enable_popup to true . This is a different approach as the other popup_cards use. Variables \u00b6 Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_thermostat_name friendly_name Customize name ulm_card_thermostat_icon mdi:thermometer Customize icon ulm_card_thermostat_enable_collapse false Collapse controls when off Need ulm_card_thermostat_enable_controls: true ulm_card_thermostat_enable_controls false Enable temperature control ulm_card_thermostat_enable_hvac_modes false Enable HVAC modes control ulm_card_thermostat_enable_background_color false Enable background color when cooling or heating ulm_card_thermostat_enable_display_temperature false Display current temperature on top right ulm_card_thermostat_enable_horizontal false Enable horizontal card Need ulm_card_thermostat_enable_controls: true ulm_card_thermostat_enable_popup false Enable popup_thermostat ulm_card_thermostat_fan_entity null fan entity for climate if seperate entity Usage \u00b6 - type : \"custom:button-card\" template : card_thermostat entity : climate.hvac variables : ulm_card_thermostat_enable_collapse : true ulm_card_thermostat_enable_controls : true ulm_card_thermostat_enable_hvac_modes : true ulm_card_thermostat_enable_popup : true Template Code card_thermostat.yaml --- ### Card Thermostat ### card_thermostat : template : - \"ulm_language_variables\" variables : ulm_card_thermostat_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_thermostat_icon : \"[[[ return 'mdi:thermometer' ]]]\" ulm_card_thermostat_enable_collapse : false ulm_card_thermostat_enable_controls : false ulm_card_thermostat_enable_hvac_modes : false ulm_card_thermostat_enable_background_color : false ulm_card_thermostat_enable_display_temperature : false ulm_card_thermostat_enable_horizontal : false ulm_card_thermostat_enable_popup : false ulm_card_thermostat_fan_entity : null show_icon : false show_name : false show_label : false hold_action : action : > [[[ if (variables.ulm_card_thermostat_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_thermostat_temperature\" variables : ulm_popup_thermostat_entity : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'heating' && variables.ulm_card_thermostat_enable_background_color) ]]] styles : card : - background-color : \"rgba(255,165,0,0.75)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' && variables.ulm_card_thermostat_enable_background_color) ]]] styles : card : - background-color : \"rgba(0,191,255,0.75)\" - operator : \"template\" value : > [[[ return entity.state != 'off' ]]] styles : card : - background-color : \"rgba(var(--color-background-yellow),var(--opacity-bg))\" styles : grid : - grid-template-areas : > [[[ var areas = []; if (variables.ulm_card_thermostat_enable_horizontal) { return \"\\\"item1 item2\\\"\"; } if (variables.ulm_card_thermostat_enable_display_temperature) { areas.push(\"item1 item4\"); } else { areas.push(\"item1 item1\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls) { areas.push(\"item2 item2\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls && entity.attributes.target_temp_high != null) { areas.push(\"low_temp_adjustment low_temp_adjustment\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_hvac_modes) { areas.push(\"item3 item3\"); } return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : > [[[ if (variables.ulm_card_thermostat_enable_horizontal) { return \"1fr 1fr\"; } else { return \"2fr 1fr\"; } ]]] - grid-template-rows : > [[[ var rows = []; rows.push(\"min-content\"); if (variables.ulm_card_thermostat_enable_horizontal) { return \"min-content\"; } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls) { rows.push(\"min-content\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls && entity.attributes.target_temp_high != null) { rows.push(\"min-content\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_hvac_modes) { rows.push(\"min-content\"); } return rows.join(\" \"); ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item2 : - display : > [[[ if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls) { return \"block\"; } else { return \"none\"; } ]]] low_temp_adjustment : - display : > [[[ if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls && entity.attributes.target_temp_high != null) { return \"block\"; } else { return \"none\"; } ]]] item3 : - display : > [[[ if (variables.ulm_card_thermostat_enable_horizontal) { return \"none\"; } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_hvac_modes) { return \"block\"; } else { return \"none\"; } ]]] item4 : - display : > [[[ if (variables.ulm_card_thermostat_enable_horizontal) { return \"none\"; } if (variables.ulm_card_thermostat_enable_display_temperature) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"[[[ return variables.ulm_card_thermostat_icon ]]]\" hold_action : action : > [[[ if (variables.ulm_card_thermostat_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_thermostat_temperature\" variables : ulm_popup_thermostat_entity : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'heating') ]]] styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling') ]]] styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_thermostat_name ]]]\" tap_action : action : \"call-service\" service : > [[[ if (entity.state =='off'){ return \"climate.turn_on\"; } else { return \"climate.turn_off\"; } ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hold_action : action : > [[[ if (variables.ulm_card_thermostat_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_thermostat_temperature\" variables : ulm_popup_thermostat_entity : \"[[[ return entity.entity_id ]]]\" label : >- [[[ var label = variables.ulm_off ; if (entity.state =='off'){ label = variables.ulm_off ; }else if (entity.state == 'auto'){ label = variables.ulm_auto ; }else if (entity.state == 'heat'){ label = variables.ulm_heat ; }else if (entity.state == 'cool'){ label = variables.ulm_cool ; }else if (entity.state == 'dry'){ label = variables.ulm_dry ; }else if (entity.state == 'heat_cool'){ label = variables.ulm_heat_cool ; }else if (entity.state == 'fan_only' || ((variables.ulm_card_thermostat_fan_entity !== null) && states[variables.ulm_card_thermostat_fan_entity].state == 'on')){ label = variables.ulm_fan_only ; }else{ label = variables.ulm_idle; } if (entity.attributes.hvac_action == 'heating'){ var mode = variables.ulm_heating ; }else if (entity.attributes.hvac_action == 'cooling'){ var mode = variables.ulm_cooling ; }else if (entity.attributes.hvac_action == 'idle'){ var mode = variables.ulm_idle ; }else{ var mode = variables.ulm_unavailable; } if((entity.attributes.temperature || entity.attributes.target_temp_high != null) && !variables.ulm_card_thermostat_enable_display_temperature){ return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + (entity.state !='off' ? ' (' + mode + ')' : ''); } return label; ]]] item2 : card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:minus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ if (entity.attributes.target_temp_low == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) const new_temp = (parseFloat(entity.attributes.target_temp_high) - step) return (new_temp < entity.attributes.target_temp_low ? new_temp : entity.attributes.target_temp_low); } ]]] target_temp_high : | [[[ if (entity.attributes.target_temp_low == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_high) - step) } ]]] temperature : | [[[ if (entity.attributes.temperature == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(states[entity.entity_id].attributes.temperature) - step) } ]]] entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item2 : card : type : \"custom:button-card\" show_icon : false show_name : false show_label : true entity : \"[[[ return entity.entity_id ]]]\" label : |- [[[ var temperature = entity.attributes.temperature || entity.attributes.target_temp_high; if (temperature == null) { var temperature = '-'; } return temperature + hass.config.unit_system.temperature; ]]] styles : card : - background : \"none\" - box-shadow : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:plus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ if (entity.attributes.target_temp_low == null) { return 0; } else { return entity.attributes.target_temp_low; } ]]] target_temp_high : | [[[ if (entity.attributes.target_temp_high == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_high) + step) } ]]] temperature : | [[[ if (entity.attributes.temperature == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(states[entity.entity_id].attributes.temperature) + step) } ]]] entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" low_temp_adjustment : card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:minus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_low) - step) ]]] target_temp_high : \"[[[ return entity.attributes.target_temp_high ]]]\" entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item2 : card : type : \"custom:button-card\" show_icon : false show_name : false show_label : true entity : \"[[[ return entity.entity_id ]]]\" label : |- [[[ var temperature = entity.attributes.target_temp_low; if (temperature == null) { var temperature = '-'; } return temperature + hass.config.unit_system.temperature; ]]] styles : card : - background : \"none\" - box-shadow : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:plus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_low) + step) ]]] target_temp_high : | [[[ const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) const new_temp = (parseFloat(entity.attributes.target_temp_low) + step) return (new_temp > entity.attributes.target_temp_high ? new_temp : entity.attributes.target_temp_high) ]]] entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item3 : card : type : \"custom:button-card\" styles : grid : - grid-template-areas : > [[[ var areas = []; if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) { areas.push(\"auto\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) { areas.push(\"heat\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) { areas.push(\"cool\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) { areas.push(\"dry\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) { areas.push(\"heat_cool\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) { areas.push(\"fan_only\"); } if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") && (variables.ulm_card_thermostat_fan_entity !== null)) { areas.push(\"fan_entity_only\"); } return \"\\\"\" + areas.join(\" \") + \"\\\"\"; ]]] - grid-template-columns : > [[[ var columns = []; if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) { columns.push(\"1fr\"); } if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") && (variables.ulm_card_thermostat_fan_entity !== null)) { columns.push(\"1fr\"); } return columns.join(\" \"); ]]] - grid-template-rows : \"min-content\" - column-gap : \"7px\" card : - box-shadow : \"none\" - padding : \"0px\" - background : \"none\" custom_fields : auto : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) { return \"block\"; } else { return \"none\"; } ]]] heat : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) { return \"block\"; } else { return \"none\"; } ]]] cool : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) { return \"block\"; } else { return \"none\"; } ]]] dry : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) { return \"block\"; } else { return \"none\"; } ]]] heat_cool : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) { return \"block\"; } else { return \"none\"; } ]]] fan_only : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) { return \"block\"; } else { return \"none\"; } ]]] fan_entity_only : - display : > [[[ if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") && (variables.ulm_card_thermostat_fan_entity !== null)) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : auto : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:autorenew\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"auto\" state : - operator : \"template\" value : > [[[ return entity.state == \"auto\" ]]] styles : card : - background-color : \"rgba(var(--color-green),0.5)\" icon : - color : \"rgba(var(--color-green),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" heat : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:fire\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat\" state : - operator : \"template\" value : > [[[ return entity.state == \"heat\" ]]] styles : card : - background-color : \"rgba(var(--color-red),0.5)\" icon : - color : \"rgba(var(--color-red),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" cool : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"cool\" state : - operator : \"template\" value : > [[[ return entity.state == \"cool\" ]]] styles : card : - background-color : \"rgba(var(--color-blue),0.5)\" icon : - color : \"rgba(var(--color-blue),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" dry : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:water\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"dry\" state : - operator : \"template\" value : > [[[ return entity.state == \"dry\" ]]] styles : card : - background-color : \"rgba(var(--color-yellow),0.5)\" icon : - color : \"rgba(var(--color-yellow),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" heat_cool : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:sun-snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat_cool\" state : - operator : \"template\" value : > [[[ return entity.state == \"heat_cool\" ]]] styles : card : - background-color : \"rgba(var(--color-purple),0.5)\" icon : - color : \"rgba(var(--color-purple),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" fan_only : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"fan_only\" state : - operator : \"template\" value : > [[[ return entity.state == \"fan_only\" ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.5)\" icon : - color : \"rgba(var(--color-green),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" fan_entity_only : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"fan.toggle\" service_data : entity_id : \"[[[ return variables.ulm_card_thermostat_fan_entity !== null ? states[variables.ulm_card_thermostat_fan_entity].entity_id : null ]]]\" state : - operator : \"template\" value : > [[[ return ((variables.ulm_card_thermostat_fan_entity !== null) && states[variables.ulm_card_thermostat_fan_entity].state == 'on') ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.5)\" icon : - color : \"rgba(var(--color-green),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item4 : card : type : \"custom:button-card\" show_icon : false show_name : false show_label : true entity : \"[[[ return entity.entity_id ]]]\" label : |- [[[ var temperature = entity.attributes.current_temperature; if (temperature == null) { var temperature = '-'; } return temperature + hass.config.unit_system.temperature; ]]] styles : card : - background : \"none\" - box-shadow : \"none\"","title":"Thermostat Card"},{"location":"usage/cards/card_thermostat/#description","text":"This is the thermostat-card , used to toggle a climate entity. Shows state of the thermostat and, if available, current temperature. This documentation refers to the new \"All in one\" thermostat card. This card merges the following one : legacy card_thermostat (the old one) custom custom_card_heat_pump by Kam custom custom_card_mpse_thermostat by mpse custom custom_card_httpedo13_thermostat by httpedo13 custom custom_card_httpedo13_thermostat_with_buttons by httpedo13 custom custom_card_httpedo13_thermostat_with_buttons_collapse by httpedo13 Warning This card has backward compatibilty with older template except custom names and icons. It means variables like ulm_card_XXX_name and ulm_card_XXX_icon must be replaced by ulm_card_thermostat_name and ulm_card_thermostat_icon . To use popup_thermostat you need to set the variable ulm_card_thermostat_enable_popup to true . This is a different approach as the other popup_cards use.","title":"Description"},{"location":"usage/cards/card_thermostat/#variables","text":"Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_thermostat_name friendly_name Customize name ulm_card_thermostat_icon mdi:thermometer Customize icon ulm_card_thermostat_enable_collapse false Collapse controls when off Need ulm_card_thermostat_enable_controls: true ulm_card_thermostat_enable_controls false Enable temperature control ulm_card_thermostat_enable_hvac_modes false Enable HVAC modes control ulm_card_thermostat_enable_background_color false Enable background color when cooling or heating ulm_card_thermostat_enable_display_temperature false Display current temperature on top right ulm_card_thermostat_enable_horizontal false Enable horizontal card Need ulm_card_thermostat_enable_controls: true ulm_card_thermostat_enable_popup false Enable popup_thermostat ulm_card_thermostat_fan_entity null fan entity for climate if seperate entity","title":"Variables"},{"location":"usage/cards/card_thermostat/#usage","text":"- type : \"custom:button-card\" template : card_thermostat entity : climate.hvac variables : ulm_card_thermostat_enable_collapse : true ulm_card_thermostat_enable_controls : true ulm_card_thermostat_enable_hvac_modes : true ulm_card_thermostat_enable_popup : true Template Code card_thermostat.yaml --- ### Card Thermostat ### card_thermostat : template : - \"ulm_language_variables\" variables : ulm_card_thermostat_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_thermostat_icon : \"[[[ return 'mdi:thermometer' ]]]\" ulm_card_thermostat_enable_collapse : false ulm_card_thermostat_enable_controls : false ulm_card_thermostat_enable_hvac_modes : false ulm_card_thermostat_enable_background_color : false ulm_card_thermostat_enable_display_temperature : false ulm_card_thermostat_enable_horizontal : false ulm_card_thermostat_enable_popup : false ulm_card_thermostat_fan_entity : null show_icon : false show_name : false show_label : false hold_action : action : > [[[ if (variables.ulm_card_thermostat_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_thermostat_temperature\" variables : ulm_popup_thermostat_entity : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'heating' && variables.ulm_card_thermostat_enable_background_color) ]]] styles : card : - background-color : \"rgba(255,165,0,0.75)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' && variables.ulm_card_thermostat_enable_background_color) ]]] styles : card : - background-color : \"rgba(0,191,255,0.75)\" - operator : \"template\" value : > [[[ return entity.state != 'off' ]]] styles : card : - background-color : \"rgba(var(--color-background-yellow),var(--opacity-bg))\" styles : grid : - grid-template-areas : > [[[ var areas = []; if (variables.ulm_card_thermostat_enable_horizontal) { return \"\\\"item1 item2\\\"\"; } if (variables.ulm_card_thermostat_enable_display_temperature) { areas.push(\"item1 item4\"); } else { areas.push(\"item1 item1\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls) { areas.push(\"item2 item2\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls && entity.attributes.target_temp_high != null) { areas.push(\"low_temp_adjustment low_temp_adjustment\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_hvac_modes) { areas.push(\"item3 item3\"); } return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : > [[[ if (variables.ulm_card_thermostat_enable_horizontal) { return \"1fr 1fr\"; } else { return \"2fr 1fr\"; } ]]] - grid-template-rows : > [[[ var rows = []; rows.push(\"min-content\"); if (variables.ulm_card_thermostat_enable_horizontal) { return \"min-content\"; } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls) { rows.push(\"min-content\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls && entity.attributes.target_temp_high != null) { rows.push(\"min-content\"); } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_hvac_modes) { rows.push(\"min-content\"); } return rows.join(\" \"); ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item2 : - display : > [[[ if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls) { return \"block\"; } else { return \"none\"; } ]]] low_temp_adjustment : - display : > [[[ if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_controls && entity.attributes.target_temp_high != null) { return \"block\"; } else { return \"none\"; } ]]] item3 : - display : > [[[ if (variables.ulm_card_thermostat_enable_horizontal) { return \"none\"; } if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == \"off\") && variables.ulm_card_thermostat_enable_hvac_modes) { return \"block\"; } else { return \"none\"; } ]]] item4 : - display : > [[[ if (variables.ulm_card_thermostat_enable_horizontal) { return \"none\"; } if (variables.ulm_card_thermostat_enable_display_temperature) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"[[[ return variables.ulm_card_thermostat_icon ]]]\" hold_action : action : > [[[ if (variables.ulm_card_thermostat_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_thermostat_temperature\" variables : ulm_popup_thermostat_entity : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'heating') ]]] styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling') ]]] styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_thermostat_name ]]]\" tap_action : action : \"call-service\" service : > [[[ if (entity.state =='off'){ return \"climate.turn_on\"; } else { return \"climate.turn_off\"; } ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hold_action : action : > [[[ if (variables.ulm_card_thermostat_enable_popup){ return 'fire-dom-event' } else{ return 'more-info' } ]]] browser_mod : command : \"popup\" large : true hide_header : true card : type : \"custom:button-card\" template : \"popup_thermostat_temperature\" variables : ulm_popup_thermostat_entity : \"[[[ return entity.entity_id ]]]\" label : >- [[[ var label = variables.ulm_off ; if (entity.state =='off'){ label = variables.ulm_off ; }else if (entity.state == 'auto'){ label = variables.ulm_auto ; }else if (entity.state == 'heat'){ label = variables.ulm_heat ; }else if (entity.state == 'cool'){ label = variables.ulm_cool ; }else if (entity.state == 'dry'){ label = variables.ulm_dry ; }else if (entity.state == 'heat_cool'){ label = variables.ulm_heat_cool ; }else if (entity.state == 'fan_only' || ((variables.ulm_card_thermostat_fan_entity !== null) && states[variables.ulm_card_thermostat_fan_entity].state == 'on')){ label = variables.ulm_fan_only ; }else{ label = variables.ulm_idle; } if (entity.attributes.hvac_action == 'heating'){ var mode = variables.ulm_heating ; }else if (entity.attributes.hvac_action == 'cooling'){ var mode = variables.ulm_cooling ; }else if (entity.attributes.hvac_action == 'idle'){ var mode = variables.ulm_idle ; }else{ var mode = variables.ulm_unavailable; } if((entity.attributes.temperature || entity.attributes.target_temp_high != null) && !variables.ulm_card_thermostat_enable_display_temperature){ return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + (entity.state !='off' ? ' (' + mode + ')' : ''); } return label; ]]] item2 : card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:minus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ if (entity.attributes.target_temp_low == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) const new_temp = (parseFloat(entity.attributes.target_temp_high) - step) return (new_temp < entity.attributes.target_temp_low ? new_temp : entity.attributes.target_temp_low); } ]]] target_temp_high : | [[[ if (entity.attributes.target_temp_low == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_high) - step) } ]]] temperature : | [[[ if (entity.attributes.temperature == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(states[entity.entity_id].attributes.temperature) - step) } ]]] entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item2 : card : type : \"custom:button-card\" show_icon : false show_name : false show_label : true entity : \"[[[ return entity.entity_id ]]]\" label : |- [[[ var temperature = entity.attributes.temperature || entity.attributes.target_temp_high; if (temperature == null) { var temperature = '-'; } return temperature + hass.config.unit_system.temperature; ]]] styles : card : - background : \"none\" - box-shadow : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:plus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ if (entity.attributes.target_temp_low == null) { return 0; } else { return entity.attributes.target_temp_low; } ]]] target_temp_high : | [[[ if (entity.attributes.target_temp_high == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_high) + step) } ]]] temperature : | [[[ if (entity.attributes.temperature == null) { return 0; } else { const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(states[entity.entity_id].attributes.temperature) + step) } ]]] entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" low_temp_adjustment : card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:minus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_low) - step) ]]] target_temp_high : \"[[[ return entity.attributes.target_temp_high ]]]\" entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item2 : card : type : \"custom:button-card\" show_icon : false show_name : false show_label : true entity : \"[[[ return entity.entity_id ]]]\" label : |- [[[ var temperature = entity.attributes.target_temp_low; if (temperature == null) { var temperature = '-'; } return temperature + hass.config.unit_system.temperature; ]]] styles : card : - background : \"none\" - box-shadow : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:plus\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : target_temp_low : | [[[ const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) return (parseFloat(entity.attributes.target_temp_low) + step) ]]] target_temp_high : | [[[ const unit = hass.config.unit_system.temperature const step = entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5) const new_temp = (parseFloat(entity.attributes.target_temp_low) + step) return (new_temp > entity.attributes.target_temp_high ? new_temp : entity.attributes.target_temp_high) ]]] entity_id : \"[[[ return entity.entity_id ]]]\" state : - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item3 : card : type : \"custom:button-card\" styles : grid : - grid-template-areas : > [[[ var areas = []; if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) { areas.push(\"auto\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) { areas.push(\"heat\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) { areas.push(\"cool\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) { areas.push(\"dry\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) { areas.push(\"heat_cool\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) { areas.push(\"fan_only\"); } if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") && (variables.ulm_card_thermostat_fan_entity !== null)) { areas.push(\"fan_entity_only\"); } return \"\\\"\" + areas.join(\" \") + \"\\\"\"; ]]] - grid-template-columns : > [[[ var columns = []; if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) { columns.push(\"1fr\"); } if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) { columns.push(\"1fr\"); } if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") && (variables.ulm_card_thermostat_fan_entity !== null)) { columns.push(\"1fr\"); } return columns.join(\" \"); ]]] - grid-template-rows : \"min-content\" - column-gap : \"7px\" card : - box-shadow : \"none\" - padding : \"0px\" - background : \"none\" custom_fields : auto : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) { return \"block\"; } else { return \"none\"; } ]]] heat : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) { return \"block\"; } else { return \"none\"; } ]]] cool : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) { return \"block\"; } else { return \"none\"; } ]]] dry : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) { return \"block\"; } else { return \"none\"; } ]]] heat_cool : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) { return \"block\"; } else { return \"none\"; } ]]] fan_only : - display : > [[[ if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) { return \"block\"; } else { return \"none\"; } ]]] fan_entity_only : - display : > [[[ if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") && (variables.ulm_card_thermostat_fan_entity !== null)) { return \"block\"; } else { return \"none\"; } ]]] custom_fields : auto : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:autorenew\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"auto\" state : - operator : \"template\" value : > [[[ return entity.state == \"auto\" ]]] styles : card : - background-color : \"rgba(var(--color-green),0.5)\" icon : - color : \"rgba(var(--color-green),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" heat : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:fire\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat\" state : - operator : \"template\" value : > [[[ return entity.state == \"heat\" ]]] styles : card : - background-color : \"rgba(var(--color-red),0.5)\" icon : - color : \"rgba(var(--color-red),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" cool : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"cool\" state : - operator : \"template\" value : > [[[ return entity.state == \"cool\" ]]] styles : card : - background-color : \"rgba(var(--color-blue),0.5)\" icon : - color : \"rgba(var(--color-blue),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" dry : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:water\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"dry\" state : - operator : \"template\" value : > [[[ return entity.state == \"dry\" ]]] styles : card : - background-color : \"rgba(var(--color-yellow),0.5)\" icon : - color : \"rgba(var(--color-yellow),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" heat_cool : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:sun-snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat_cool\" state : - operator : \"template\" value : > [[[ return entity.state == \"heat_cool\" ]]] styles : card : - background-color : \"rgba(var(--color-purple),0.5)\" icon : - color : \"rgba(var(--color-purple),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" fan_only : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"fan_only\" state : - operator : \"template\" value : > [[[ return entity.state == \"fan_only\" ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.5)\" icon : - color : \"rgba(var(--color-green),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" fan_entity_only : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"fan.toggle\" service_data : entity_id : \"[[[ return variables.ulm_card_thermostat_fan_entity !== null ? states[variables.ulm_card_thermostat_fan_entity].entity_id : null ]]]\" state : - operator : \"template\" value : > [[[ return ((variables.ulm_card_thermostat_fan_entity !== null) && states[variables.ulm_card_thermostat_fan_entity].state == 'on') ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.5)\" icon : - color : \"rgba(var(--color-green),1)\" - operator : \"template\" value : > [[[ return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color ]]] styles : card : - background-color : \"rgba(var(--color-theme),0.15)\" item4 : card : type : \"custom:button-card\" show_icon : false show_name : false show_label : true entity : \"[[[ return entity.entity_id ]]]\" label : |- [[[ var temperature = entity.attributes.current_temperature; if (temperature == null) { var temperature = '-'; } return temperature + hass.config.unit_system.temperature; ]]] styles : card : - background : \"none\" - box-shadow : \"none\"","title":"Usage"},{"location":"usage/cards/card_title/","text":"Description \u00b6 Titles (and optionally subtitles) are used to seperate different areas in your design. You can use only a title, only a subtitle or both at once. Variables \u00b6 Variable Default Required Notes name This is a main title (either title or subtitle is required) label This is a subtitle (either title or subtitle is required) Usage \u00b6 - type : 'custom:button-card' template : card_title name : My Title label : 'Subtitle' Template Code card_title.yaml --- ### Card Title ### card_title : tap_action : action : \"none\" show_icon : false show_label : true show_name : true styles : card : - background-color : \"rgba(0,0,0,0)\" - box-shadow : \"none\" - height : \"auto\" - width : \"auto\" - margin-top : \"6px\" - margin-left : \"18px\" - margin-bottom : \"0px\" - padding : \"6px\" grid : - grid-template-areas : \"'n' 'l'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" name : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1.5rem\" label : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1rem\" - opacity : \"0.4\"","title":"Title Card"},{"location":"usage/cards/card_title/#description","text":"Titles (and optionally subtitles) are used to seperate different areas in your design. You can use only a title, only a subtitle or both at once.","title":"Description"},{"location":"usage/cards/card_title/#variables","text":"Variable Default Required Notes name This is a main title (either title or subtitle is required) label This is a subtitle (either title or subtitle is required)","title":"Variables"},{"location":"usage/cards/card_title/#usage","text":"- type : 'custom:button-card' template : card_title name : My Title label : 'Subtitle' Template Code card_title.yaml --- ### Card Title ### card_title : tap_action : action : \"none\" show_icon : false show_label : true show_name : true styles : card : - background-color : \"rgba(0,0,0,0)\" - box-shadow : \"none\" - height : \"auto\" - width : \"auto\" - margin-top : \"6px\" - margin-left : \"18px\" - margin-bottom : \"0px\" - padding : \"6px\" grid : - grid-template-areas : \"'n' 'l'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" name : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1.5rem\" label : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1rem\" - opacity : \"0.4\"","title":"Usage"},{"location":"usage/cards/card_vacuum/","text":"Description \u00b6 This is a card to control your Robot-vacuum. It has support for all vacuums which use the services vacuum.start , vacuum.stop , vacuum.return_to_base and vacuum.locate Variables \u00b6 Variable Default Required Notes entity vacuum.* ulm_card_vacuum_name Add a custom name ulm_card_vacuum_icon Add a custom MDI icon ulm_card_vacuum_label Add a custom label ulm_card_vacuum_room Add a script to clean a specific room ulm_card_vacuum_room_icon Add custom icon to the room script ulm_card_vacuum_camera Add a camera entity to the card to show the vacuum map ulm_card_vacuum_camera_toggle Only show the camera entity while cleaning Usage \u00b6 - type : \"custom:button-card\" template : \"card_vacuum\" entity : \"vacuum.<Your_Vacuum>\" - type : \"custom:button-card\" template : \"card_vacuum\" entity : \"vacuum.<Your_Vacuum>\" variables : ulm_card_vacuum_room : \"script.clean_kitchen\" ulm_card_vacuum_room_icon : \"mdi:table-chair\" ulm_card_vacuum_camera : \"camera.vacuum_map\" ulm_card_vacuum_camera_toggle : true Template Code card_vacuum.yaml --- card_vacuum : show_name : false show_icon : false show_label : false template : - \"ulm_language_variables\" variables : ulm_card_vacuum_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_vacuum_icon : \"[[[ return entity.attributes.icon ]]]\" ulm_card_vacuum_room : ulm_card_vacuum_room_icon : \"[[[ return entity.attributes.icon ]]]\" ulm_card_vacuum_camera : ulm_card_vacuum_camera_toggle : triggers_update : \"all\" styles : grid : - grid-template-areas : > [[[ if( variables.ulm_card_vacuum_camera ){ if ( variables.ulm_card_vacuum_camera_toggle ) { if( entity.state.toLowerCase() === 'cleaning' ){ return \"'item1' 'item3' 'item2'\"; } else { return \"'item1' 'item2'\"; } } else { return \"'item1' 'item3' 'item2'\"; } } else { return \"'item1' 'item2'\"; } ]]] - grid-template-columns : \"1fr\" - grid-template-rows : > [[[ if( variables.ulm_card_vacuum_camera ){ if ( variables.ulm_card_vacuum_camera_toggle ) { if( entity.state.toLowerCase() === 'cleaning' ){ return \"repeat(3, min-content)\"; } else { return \"repeat(2, min-content)\"; } } else { return \"repeat(3, min-content)\"; } } else { return \"repeat(2, min-content)\"; } ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-color : > [[[ if(hass.themes.darkMode) if( entity.state.toLowerCase() === 'cleaning' ){ return 'rgba(var(--color-blue),0.1)' } else if( entity.state.toLowerCase() === 'paused' ){ return 'rgba(var(--color-green),0.1)' } else if( entity.state.toLowerCase() === 'mopping' ){ return 'rgba(var(--color-yellow),0.1)' } else if( entity.state.toLowerCase() === 'returning' ){ return 'rgba(var(--color-purple),0.1)' } ]]] custom_fields : item3 : - display : > [[[ if( variables.ulm_card_vacuum_camera ){ if ( variables.ulm_card_vacuum_camera_toggle ) { if( entity.state.toLowerCase() === 'cleaning' ){ return \"block\"; } else { return \"none\"; } } else { return \"block\"; } } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"[[[ return variables.ulm_card_vacuum_icon ]]]\" styles : icon : - color : > [[[ if( entity.state.toLowerCase() === 'cleaning' ){ return 'rgba(var(--color-blue),1)' } else if( entity.state.toLowerCase() === 'paused' ){ return 'rgba(var(--color-green),1)' } else if( entity.state.toLowerCase() === 'mopping' ){ return 'rgba(var(--color-yellow),1)' } else if( entity.state.toLowerCase() === 'returning' ){ return 'rgba(var(--color-purple),1)' } else if( entity.state.toLowerCase() === 'error' ){ return 'rgba(var(--color-red),1)' } else { return 'rgba(var(--color-theme),0.2)' } ]]] img_cell : - background-color : > [[[ if( entity.state.toLowerCase() === 'cleaning' ){ return 'rgba(var(--color-blue),0.2)' } else if( entity.state.toLowerCase() === 'paused' ){ return 'rgba(var(--color-green),0.2)' } else if( entity.state.toLowerCase() === 'mopping' ){ return 'rgba(var(--color-yellow),0.2)' } else if( entity.state.toLowerCase() === 'returning' ){ return 'rgba(var(--color-purple),0.2)' } else if( entity.state.toLowerCase() === 'error' ){ return 'rgba(var(--color-red),0.2)' } else { return 'rgba(var(--color-theme),0.05)' } ]]] item2 : card : type : \"custom:button-card\" templates : - \"ulm_language_variables\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_vacuum_name ]]]\" label : > [[[ let label = entity.attributes.friendly_name if(variables.ulm_card_vacuum_label){ label = variables.ulm_card_vacuum_label; } else if(entity.state.toLowerCase() === 'cleaning'){ label = variables.ulm_cleaning; } else if(entity.state.toLowerCase() === 'idle'){ label = variables.ulm_idle; } else if(entity.state.toLowerCase() === 'paused'){ label = variables.ulm_paused; } else if(entity.state.toLowerCase() === 'returning'){ label = variables.ulm_returning; } else if(entity.state.toLowerCase() === 'docked'){ label = variables.ulm_docked; } else if(entity.state.toLowerCase() === 'mopping'){ label = variables.ulm_mopping; } else { label = entity.state; } return label ]]] item2 : card : type : \"custom:button-card\" template : \"list_4_items\" styles : card : - padding : \"0px\" - background : \"none\" - border-radius : \"0\" - box-shadow : \"none\" grid : - grid-template-areas : > [[[ if(variables.ulm_card_vacuum_room){ return \"'item1 item2 item3 item4'\"; } else { return \"'item1 item2 item3'\"; } ]]] - grid-template-columns : > [[[ if(variables.ulm_card_vacuum_room){ return \"1fr 1fr 1fr 1fr\"; } else { return \"1fr 1fr 1fr\"; } ]]] custom_fields : item4 : - display : > [[[ if(variables.ulm_card_vacuum_room){ return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:play\" state : - operator : \"template\" value : \"[[[ return entity.state.toLowerCase() === 'cleaning' ]]]\" icon : \"mdi:stop\" tap_action : action : \"call-service\" service : \"vacuum.stop\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : > [[[ if (entity.state.toLowerCase() === 'cleaning'){ return \"vacuum.stop\" } else { return \"vacuum.start\" } ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:home-map-marker\" tap_action : action : \"call-service\" service : \"vacuum.return_to_base\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:map-marker\" state : tap_action : action : \"call-service\" service : \"vacuum.locate\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item4 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_vacuum_room ]]]\" icon : \"[[[ return variables.ulm_card_vacuum_room_icon ]]]\" tap_action : action : \"call-service\" service : \"script.turn_on\" service_data : entity_id : \"[[[ return variables.ulm_card_vacuum_room ]]]\" item3 : card : type : \"picture-entity\" camera_view : \"live\" entity : \"[[[ return variables.ulm_card_vacuum_camera ]]]\" show_name : false show_state : false","title":"Vacuum Card"},{"location":"usage/cards/card_vacuum/#description","text":"This is a card to control your Robot-vacuum. It has support for all vacuums which use the services vacuum.start , vacuum.stop , vacuum.return_to_base and vacuum.locate","title":"Description"},{"location":"usage/cards/card_vacuum/#variables","text":"Variable Default Required Notes entity vacuum.* ulm_card_vacuum_name Add a custom name ulm_card_vacuum_icon Add a custom MDI icon ulm_card_vacuum_label Add a custom label ulm_card_vacuum_room Add a script to clean a specific room ulm_card_vacuum_room_icon Add custom icon to the room script ulm_card_vacuum_camera Add a camera entity to the card to show the vacuum map ulm_card_vacuum_camera_toggle Only show the camera entity while cleaning","title":"Variables"},{"location":"usage/cards/card_vacuum/#usage","text":"- type : \"custom:button-card\" template : \"card_vacuum\" entity : \"vacuum.<Your_Vacuum>\" - type : \"custom:button-card\" template : \"card_vacuum\" entity : \"vacuum.<Your_Vacuum>\" variables : ulm_card_vacuum_room : \"script.clean_kitchen\" ulm_card_vacuum_room_icon : \"mdi:table-chair\" ulm_card_vacuum_camera : \"camera.vacuum_map\" ulm_card_vacuum_camera_toggle : true Template Code card_vacuum.yaml --- card_vacuum : show_name : false show_icon : false show_label : false template : - \"ulm_language_variables\" variables : ulm_card_vacuum_name : \"[[[ return entity.attributes.friendly_name ]]]\" ulm_card_vacuum_icon : \"[[[ return entity.attributes.icon ]]]\" ulm_card_vacuum_room : ulm_card_vacuum_room_icon : \"[[[ return entity.attributes.icon ]]]\" ulm_card_vacuum_camera : ulm_card_vacuum_camera_toggle : triggers_update : \"all\" styles : grid : - grid-template-areas : > [[[ if( variables.ulm_card_vacuum_camera ){ if ( variables.ulm_card_vacuum_camera_toggle ) { if( entity.state.toLowerCase() === 'cleaning' ){ return \"'item1' 'item3' 'item2'\"; } else { return \"'item1' 'item2'\"; } } else { return \"'item1' 'item3' 'item2'\"; } } else { return \"'item1' 'item2'\"; } ]]] - grid-template-columns : \"1fr\" - grid-template-rows : > [[[ if( variables.ulm_card_vacuum_camera ){ if ( variables.ulm_card_vacuum_camera_toggle ) { if( entity.state.toLowerCase() === 'cleaning' ){ return \"repeat(3, min-content)\"; } else { return \"repeat(2, min-content)\"; } } else { return \"repeat(3, min-content)\"; } } else { return \"repeat(2, min-content)\"; } ]]] - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-color : > [[[ if(hass.themes.darkMode) if( entity.state.toLowerCase() === 'cleaning' ){ return 'rgba(var(--color-blue),0.1)' } else if( entity.state.toLowerCase() === 'paused' ){ return 'rgba(var(--color-green),0.1)' } else if( entity.state.toLowerCase() === 'mopping' ){ return 'rgba(var(--color-yellow),0.1)' } else if( entity.state.toLowerCase() === 'returning' ){ return 'rgba(var(--color-purple),0.1)' } ]]] custom_fields : item3 : - display : > [[[ if( variables.ulm_card_vacuum_camera ){ if ( variables.ulm_card_vacuum_camera_toggle ) { if( entity.state.toLowerCase() === 'cleaning' ){ return \"block\"; } else { return \"none\"; } } else { return \"block\"; } } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"[[[ return variables.ulm_card_vacuum_icon ]]]\" styles : icon : - color : > [[[ if( entity.state.toLowerCase() === 'cleaning' ){ return 'rgba(var(--color-blue),1)' } else if( entity.state.toLowerCase() === 'paused' ){ return 'rgba(var(--color-green),1)' } else if( entity.state.toLowerCase() === 'mopping' ){ return 'rgba(var(--color-yellow),1)' } else if( entity.state.toLowerCase() === 'returning' ){ return 'rgba(var(--color-purple),1)' } else if( entity.state.toLowerCase() === 'error' ){ return 'rgba(var(--color-red),1)' } else { return 'rgba(var(--color-theme),0.2)' } ]]] img_cell : - background-color : > [[[ if( entity.state.toLowerCase() === 'cleaning' ){ return 'rgba(var(--color-blue),0.2)' } else if( entity.state.toLowerCase() === 'paused' ){ return 'rgba(var(--color-green),0.2)' } else if( entity.state.toLowerCase() === 'mopping' ){ return 'rgba(var(--color-yellow),0.2)' } else if( entity.state.toLowerCase() === 'returning' ){ return 'rgba(var(--color-purple),0.2)' } else if( entity.state.toLowerCase() === 'error' ){ return 'rgba(var(--color-red),0.2)' } else { return 'rgba(var(--color-theme),0.05)' } ]]] item2 : card : type : \"custom:button-card\" templates : - \"ulm_language_variables\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_vacuum_name ]]]\" label : > [[[ let label = entity.attributes.friendly_name if(variables.ulm_card_vacuum_label){ label = variables.ulm_card_vacuum_label; } else if(entity.state.toLowerCase() === 'cleaning'){ label = variables.ulm_cleaning; } else if(entity.state.toLowerCase() === 'idle'){ label = variables.ulm_idle; } else if(entity.state.toLowerCase() === 'paused'){ label = variables.ulm_paused; } else if(entity.state.toLowerCase() === 'returning'){ label = variables.ulm_returning; } else if(entity.state.toLowerCase() === 'docked'){ label = variables.ulm_docked; } else if(entity.state.toLowerCase() === 'mopping'){ label = variables.ulm_mopping; } else { label = entity.state; } return label ]]] item2 : card : type : \"custom:button-card\" template : \"list_4_items\" styles : card : - padding : \"0px\" - background : \"none\" - border-radius : \"0\" - box-shadow : \"none\" grid : - grid-template-areas : > [[[ if(variables.ulm_card_vacuum_room){ return \"'item1 item2 item3 item4'\"; } else { return \"'item1 item2 item3'\"; } ]]] - grid-template-columns : > [[[ if(variables.ulm_card_vacuum_room){ return \"1fr 1fr 1fr 1fr\"; } else { return \"1fr 1fr 1fr\"; } ]]] custom_fields : item4 : - display : > [[[ if(variables.ulm_card_vacuum_room){ return \"block\"; } else { return \"none\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:play\" state : - operator : \"template\" value : \"[[[ return entity.state.toLowerCase() === 'cleaning' ]]]\" icon : \"mdi:stop\" tap_action : action : \"call-service\" service : \"vacuum.stop\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : > [[[ if (entity.state.toLowerCase() === 'cleaning'){ return \"vacuum.stop\" } else { return \"vacuum.start\" } ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:home-map-marker\" tap_action : action : \"call-service\" service : \"vacuum.return_to_base\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:map-marker\" state : tap_action : action : \"call-service\" service : \"vacuum.locate\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item4 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_vacuum_room ]]]\" icon : \"[[[ return variables.ulm_card_vacuum_room_icon ]]]\" tap_action : action : \"call-service\" service : \"script.turn_on\" service_data : entity_id : \"[[[ return variables.ulm_card_vacuum_room ]]]\" item3 : card : type : \"picture-entity\" camera_view : \"live\" entity : \"[[[ return variables.ulm_card_vacuum_camera ]]]\" show_name : false show_state : false","title":"Usage"},{"location":"usage/cards/card_vertical_button/","text":"Description \u00b6 Card card_vertical_button can be used in different ways. The primary usage is to switch between scenes or toggle a scene on/off. The seconday use is to toggle a switch or light. It's intended to be used with helper entities, either input_select or input_booelan . You connect the card to either an input_select (toggle between scenes) or input_boolean (toggle one scene) and the button will change the state of these entities. The final step is to create an automation that triggers on the state change and then runs the actions you want, apply a scene or interact with other entities. The variable ulm_card_vertical_button_state needs to be used togehter with input_select to tie a specific state to the button. Variables \u00b6 Variable Default Required Notes ulm_card_vertical_button_state on Compare the entity state value with this value, ex: the button will be on if the entity.state == state (only required with input_select) ulm_card_vertical_button_color blue color for the when the button is on. The color names are defined in the theme. The following colors are supported: blue, green, yellow, pink, red, purple Usage \u00b6 - type : 'custom:button-card' template : card_vertical_button entity : input_select.test_vertical_buttons name : Away icon : mdi:television-classic show_last_changed : true variables : ulm_card_vertical_button_state : Away ulm_card_vertical_button_color : green Template Code card_vertical_button.yaml --- ### VERTICAL BUTTONS (fka SCENES) ### card_vertical_button : variables : ulm_card_vertical_button_color : \"blue\" ulm_card_vertical_button_state : \"on\" show_label : true label : \"\" name : | [[[ if( entity.entity_id.startsWith(\"input_select.\") ) return variables.ulm_card_vertical_button_state; else if( entity.entity_id.startsWith(\"input_boolean.\") ) return \"\"; return entity.state; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" name : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i' 'n' 'l'\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"10px 0px 8px 0px\" size : \"20px\" state : - operator : \"template\" value : | [[[ return entity.state == variables.ulm_card_vertical_button_state; ]]] styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}), 1)`; ]]]\" label : - color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}-text), 1)`; ]]]\" name : - color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}-text), 1)`; ]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}), 0.2)`; ]]]\" card : - background-color : \"[[[ return `rgba(var(--color-background-${variables.ulm_card_vertical_button_color}), var(--opacity-bg))`; ]]]\" tap_action : action : \"call-service\" service : | [[[ if( entity.entity_id.startsWith(\"input_select.\") ) return \"input_select.select_option\"; if( entity.entity_id.startsWith(\"input_boolean.\") ) return \"input_boolean.toggle\"; if( entity.entity_id.startsWith(\"switch.\") ) return \"switch.toggle\"; if( entity.entity_id.startsWith(\"light.\") ) return \"light.toggle\"; if( entity.entity_id.startsWith(\"automation.\") ) return \"automation.toggle\"; if( entity.entity_id.startsWith(\"input_button.\") ) return \"input_button.press\"; // If we need to support other entities we can add these options here. return \"\"; ]]] service_data : | [[[ var obj; if( entity.entity_id.startsWith(\"input_select.\") ) obj = { entity_id: entity.entity_id, option: variables.ulm_card_vertical_button_state }; else obj = { entity_id: entity.entity_id }; return obj; ]]]","title":"Vertical Button Card"},{"location":"usage/cards/card_vertical_button/#description","text":"Card card_vertical_button can be used in different ways. The primary usage is to switch between scenes or toggle a scene on/off. The seconday use is to toggle a switch or light. It's intended to be used with helper entities, either input_select or input_booelan . You connect the card to either an input_select (toggle between scenes) or input_boolean (toggle one scene) and the button will change the state of these entities. The final step is to create an automation that triggers on the state change and then runs the actions you want, apply a scene or interact with other entities. The variable ulm_card_vertical_button_state needs to be used togehter with input_select to tie a specific state to the button.","title":"Description"},{"location":"usage/cards/card_vertical_button/#variables","text":"Variable Default Required Notes ulm_card_vertical_button_state on Compare the entity state value with this value, ex: the button will be on if the entity.state == state (only required with input_select) ulm_card_vertical_button_color blue color for the when the button is on. The color names are defined in the theme. The following colors are supported: blue, green, yellow, pink, red, purple","title":"Variables"},{"location":"usage/cards/card_vertical_button/#usage","text":"- type : 'custom:button-card' template : card_vertical_button entity : input_select.test_vertical_buttons name : Away icon : mdi:television-classic show_last_changed : true variables : ulm_card_vertical_button_state : Away ulm_card_vertical_button_color : green Template Code card_vertical_button.yaml --- ### VERTICAL BUTTONS (fka SCENES) ### card_vertical_button : variables : ulm_card_vertical_button_color : \"blue\" ulm_card_vertical_button_state : \"on\" show_label : true label : \"\" name : | [[[ if( entity.entity_id.startsWith(\"input_select.\") ) return variables.ulm_card_vertical_button_state; else if( entity.entity_id.startsWith(\"input_boolean.\") ) return \"\"; return entity.state; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" name : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i' 'n' 'l'\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"10px 0px 8px 0px\" size : \"20px\" state : - operator : \"template\" value : | [[[ return entity.state == variables.ulm_card_vertical_button_state; ]]] styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}), 1)`; ]]]\" label : - color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}-text), 1)`; ]]]\" name : - color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}-text), 1)`; ]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}), 0.2)`; ]]]\" card : - background-color : \"[[[ return `rgba(var(--color-background-${variables.ulm_card_vertical_button_color}), var(--opacity-bg))`; ]]]\" tap_action : action : \"call-service\" service : | [[[ if( entity.entity_id.startsWith(\"input_select.\") ) return \"input_select.select_option\"; if( entity.entity_id.startsWith(\"input_boolean.\") ) return \"input_boolean.toggle\"; if( entity.entity_id.startsWith(\"switch.\") ) return \"switch.toggle\"; if( entity.entity_id.startsWith(\"light.\") ) return \"light.toggle\"; if( entity.entity_id.startsWith(\"automation.\") ) return \"automation.toggle\"; if( entity.entity_id.startsWith(\"input_button.\") ) return \"input_button.press\"; // If we need to support other entities we can add these options here. return \"\"; ]]] service_data : | [[[ var obj; if( entity.entity_id.startsWith(\"input_select.\") ) obj = { entity_id: entity.entity_id, option: variables.ulm_card_vertical_button_state }; else obj = { entity_id: entity.entity_id }; return obj; ]]]","title":"Usage"},{"location":"usage/cards/card_weather/","text":"Description \u00b6 This is a card based on simple-weather-card to show your weather. simple-weather-card lovelace ressources must be installed for this one! Variables \u00b6 Variable Default Required Notes entity your weather entity ulm_card_weather_name friendly_name customize display name ulm_card_weather_primary_info extrema customize primary info. Set to false to disable. See simple-weather-card for more information ulm_card_weather_secondary_info precipitation customize secondary info. Set to false to disable. See simple-weather-card for more information ulm_card_weather_backdrop false add backdrop. See simple-weather-card for more information Usage \u00b6 - type : \"custom:button-card\" template : card_weather entity : weather.my_local_weather variables : ulm_card_weather_name : \" \" ulm_card_weather_primary_info : - wind_speed - precipitation_probability ulm_card_weather_backdrop : fade : true Template Code card_weather.yaml --- ### Card Weather ### card_weather : variables : ulm_card_weather_backdrop : false ulm_card_weather_primary_info : \"extrema\" ulm_card_weather_secondary_info : \"precipitation\" show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"'item1'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:simple-weather-card\" entity : \"[[[ return entity.entity_id; ]]]\" name : \"[[[ return variables.ulm_card_weather_name || entity.attributes.friendly_name ]]]\" primary_info : \"[[[ return variables.ulm_card_weather_primary_info ]]]\" secondary_info : \"[[[ return variables.ulm_card_weather_secondary_info ]]]\" backdrop : \"[[[ return variables.ulm_card_weather_backdrop ]]]\" style : | ha-card { border-radius: 14px; box-shadow: none; } ha-card.type-custom-simple-weather-card { padding: 24px; } ha-card[bg].type-custom-simple-weather-card{ color: white; } ha-card.type-custom-simple-weather-card .weather__info { text-align: left }","title":"Weather Card"},{"location":"usage/cards/card_weather/#description","text":"This is a card based on simple-weather-card to show your weather. simple-weather-card lovelace ressources must be installed for this one!","title":"Description"},{"location":"usage/cards/card_weather/#variables","text":"Variable Default Required Notes entity your weather entity ulm_card_weather_name friendly_name customize display name ulm_card_weather_primary_info extrema customize primary info. Set to false to disable. See simple-weather-card for more information ulm_card_weather_secondary_info precipitation customize secondary info. Set to false to disable. See simple-weather-card for more information ulm_card_weather_backdrop false add backdrop. See simple-weather-card for more information","title":"Variables"},{"location":"usage/cards/card_weather/#usage","text":"- type : \"custom:button-card\" template : card_weather entity : weather.my_local_weather variables : ulm_card_weather_name : \" \" ulm_card_weather_primary_info : - wind_speed - precipitation_probability ulm_card_weather_backdrop : fade : true Template Code card_weather.yaml --- ### Card Weather ### card_weather : variables : ulm_card_weather_backdrop : false ulm_card_weather_primary_info : \"extrema\" ulm_card_weather_secondary_info : \"precipitation\" show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"'item1'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:simple-weather-card\" entity : \"[[[ return entity.entity_id; ]]]\" name : \"[[[ return variables.ulm_card_weather_name || entity.attributes.friendly_name ]]]\" primary_info : \"[[[ return variables.ulm_card_weather_primary_info ]]]\" secondary_info : \"[[[ return variables.ulm_card_weather_secondary_info ]]]\" backdrop : \"[[[ return variables.ulm_card_weather_backdrop ]]]\" style : | ha-card { border-radius: 14px; box-shadow: none; } ha-card.type-custom-simple-weather-card { padding: 24px; } ha-card[bg].type-custom-simple-weather-card{ color: white; } ha-card.type-custom-simple-weather-card .weather__info { text-align: left }","title":"Usage"},{"location":"usage/cards/card_welcome_scenes/","text":"Description \u00b6 This is a card which shows the basic needs for your dashboard. This card can generate itself automatically. It is also included in the preview-dashboard which comes with a fresh installation of UI-Minimalist. Variables \u00b6 Variable Default Required Notes ulm_card_welcome_scenes_collapse Enables the collapse function. requires an input_boolean to track the state ulm_weather This is your weather provider. Example: weather.your_provider ulm_language Language of your system You can set a different format with the BCP-47 language tags Example: \"en-US\" or just \"en\" entity_1 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_2 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_3 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_4 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_5 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_6 none Can be any common type of entity entity_7 none Can be any common type of entity Entity Variables \u00b6 Variable Default Required Notes _entity_id Support almost all types of entities Scenes do always show as off _icon The icon to show _name The name to show _color Random Color of the icon Can choose between: blue , red , green , yellow , pink , purple If not specified, it will take a random color _state on or playing Define input_select state or give manual state for pill to be full _nav_path Navigate to another view Overrides other types of actions Requirement Collapse Function \u00b6 This feature is fully optional. It requires some more manual configuration! You need to create a input_boolean in HA to track the state. See Docs . Furthermore, you need to add the input_boolean to the variable ulm_card_welcome_scenes_collapse and to either the entity or triggers_update to make sure it directly refreshes the state. Warning Do not use triggers_update: \"all\" ! This will lead to unwanted behavior with the random colors generator. Usage \u00b6 You can set 1 to 7 entities to show 1 to 7 pills dynamically If set none it uses auto-entities with max 5 pills - type : \"custom:button-card\" template : \"card_welcome_scenes\" #triggers_update: input_boolean.<Your_boolean> #entity: input_boolean.<Your_boolean> variables : ulm_card_welcome_scenes_collapse : input_boolean.<Your_boolean> #OPTIONAl --> uncomment also entity or triggers_update ulm_weather : \"weather.YOUR_WEATHERPROVIDER\" entity_1 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"blue\" entity_2 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"red\" entity_3 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"green\" entity_4 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"purple\" entity_5 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"yellow\" entity_6 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"pink\" entity_7 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"yellow\" Auto-entities - type : \"custom:button-card\" template : \"card_welcome_scenes\" #triggers_update: input_boolean.<Your_boolean> #entity: input_boolean.<Your_boolean> variables : ulm_card_welcome_scenes_collapse : input_boolean.<Your_boolean> #OPTIONAl --> uncomment also entity or triggers_update ulm_weather : \"weather.YOUR_WEATHERPROVIDER\" Random Colors - type : \"custom:button-card\" template : \"card_welcome_scenes\" #triggers_update: input_boolean.<Your_boolean> #entity: input_boolean.<Your_boolean> variables : ulm_card_welcome_scenes_collapse : input_boolean.<Your_boolean> #OPTIONAl --> uncomment also entity or triggers_update ulm_weather : \"weather.YOUR_WEATHERPROVIDER\" entity_1 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_2 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_3 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_4 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_5 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_6 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_7 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL Template Code card_welcome_scenes.yaml --- card_welcome_scenes : variables : ulm_weather : \"[[[ return variables.ulm_weather]]]\" ulm_language : \"[[[ return window.navigator.language ]]]\" entity_1 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_4 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_5 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_6 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_7 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] template : - \"ulm_language_variables\" show_icon : false show_name : false show_label : true styles : grid : - grid-template-areas : > [[[ if(variables.ulm_card_welcome_scenes_collapse && states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){ return \"\\'item1\\' \\'item2\\' \"; } else { return \"\\'item1\\' \\'item2\\' \\'item3\\' \\'item4\\'\"; } ]]] - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"0px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"10px\" custom_fields : item3 : - display : > [[[ if(variables.ulm_card_welcome_scenes_collapse && states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] item4 : - display : > [[[ if(variables.ulm_card_welcome_scenes_collapse && states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_topbar_welcome\" variables : ulm_card_welcome_scenes_collapse : \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\" ulm_weather : \"[[[ return variables.ulm_weather]]]\" ulm_language : \"[[[ return variables.ulm_language ]]]\" styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" item2 : card : type : \"custom:button-card\" show_icon : false show_label : false show_name : true show_entity_picture : false name : | [[[ var today = new Date(); var time = today.getHours() let welcome = ''; if (time >= '18'){ welcome = variables.ulm_evening; } else if (time >= '12'){ welcome = variables.ulm_afternoon; } else if (time >= '5'){ welcome = variables.ulm_morning; } else { welcome = variables.ulm_hello; } return welcome + ', ' + ' <br>' + user.name + '!'; ]]] styles : name : - align-self : \"start\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"24px\" - margin-left : \"16px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" - text-align : \"start\" card : - box-shadow : \"none\" - padding-bottom : \"8px\" item3 : card : type : \"custom:button-card\" show_icon : true show_label : true show_name : true show_entity_picture : false name : \"Scenes\" icon : \"mdi:dots-vertical\" styles : icon : - height : \"20px\" - filter : \"opacity(50%)\" name : - align-self : \"start\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"18px\" - margin-left : \"16px\" grid : - grid-template-areas : \"'n i'\" - grid-template-columns : \"6fr 1fr\" - grid-template-rows : \"min-content min-content\" - text-align : \"start\" card : - box-shadow : \"none\" - padding-bottom : \"0px\" - bottom : \"10px\" item4 : card : type : \"custom:button-card\" template : > [[[ if(variables?.entity_1?.entity_id != \"\"){ return 'card_scenes' } else { return 'card_scenes_welcome_auto' } ]]] styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" variables : entity_1 : \"[[[ return variables.entity_1]]]\" entity_2 : \"[[[ return variables.entity_2]]]\" entity_3 : \"[[[ return variables.entity_3]]]\" entity_4 : \"[[[ return variables.entity_4]]]\" entity_5 : \"[[[ return variables.entity_5]]]\" entity_6 : \"[[[ return variables.entity_6]]]\" entity_7 : \"[[[ return variables.entity_7]]]\" card_title_welcome : tap_action : action : \"none\" show_icon : false show_label : true show_name : true styles : card : - background-color : \"rgba(0,0,0,0)\" - box-shadow : \"none\" - height : \"auto\" - width : \"auto\" - margin-top : \"-10px\" - margin-left : \"16px\" - margin-bottom : \"-15px\" grid : - grid-template-areas : \"'n' 'l'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" name : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"20px\" label : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1rem\" - opacity : \"0.4\" # pill card_scenes_pill_welcome : show_icon : false show_label : false show_name : false state : - operator : \"template\" value : > [[[ return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state) ]]] styles : card : - overflow : \"visible\" - box-shadow : \"none\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"min-content\" - grid-template-rows : \"1fr 1fr\" - row-gap : \"12px\" - justify-items : \"center\" - column-gap : \"auto\" card : - border-radius : \"50px\" - place-self : \"center\" - width : \"52px\" - height : \"84px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] color : \"var(--google-grey)\" custom_fields : item1 : card : type : \"custom:button-card\" show_icon : true show_label : false show_name : false tap_action : action : > [[[ if(variables?.nav_path){ return \"navigate\" } else { return \"call-service\" } ]]] service : > [[[ if(entity.entity_id.startsWith(\"scene.\")){ return \"scene.turn_on\" } else if(entity.entity_id.startsWith(\"media_player.\")){ return \"media_player.media_play_pause\" } else if(entity.entity_id.startsWith(\"input_select.\")){ return \"input_select.select_option\" } else { return \"homeassistant.toggle\" } ]]] navigation_path : \"[[[ return variables?.nav_path; ]]]\" service_data : | [[[ var obj; if( entity.entity_id.startsWith(\"input_select.\") ) obj = { entity_id: entity.entity_id, option: variables.state }; else obj = { entity_id: entity.entity_id }; return obj; ]]] styles : grid : - grid-template-areas : \"i\" icon : - color : > [[[ var color = variables?.color if(hass.themes.darkMode){var color = \"#FAFAFA\";} return `rgba(var(--color-${color}), 1)`; ]]] - width : \"20px\" img_cell : - background-color : > [[[ var color = variables?.color var opacity = '0.20' if(hass.themes.darkMode){var opacity = '1'} return `rgba(var(--color-${color}), ${opacity})`; ]]] - border-radius : \"50%\" - width : \"42px\" - height : \"42px\" card : - box-shadow : \"none\" - border-radius : \"50px\" - padding : \"5px\" state : - operator : \"template\" value : > [[[ return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state) ]]] styles : card : - overflow : \"visible\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item2 : card : type : \"custom:button-card\" show_icon : false show_label : false tap_action : action : > [[[ if(variables?.nav_path){ return \"navigate\" } else { return \"call-service\" } ]]] navigation_path : \"[[[ return variables?.nav_path; ]]]\" service : > [[[ if(entity.entity_id.startsWith(\"scene.\")){ return \"scene.turn_on\" } else if(entity.entity_id.startsWith(\"media_player.\")){ return \"media_player.media_play_pause\" } else if(entity.entity_id.startsWith(\"input_select.\")){ return \"input_select.select_option\" } else { return \"homeassistant.toggle\" } ]]] service_data : | [[[ var obj; if( entity.entity_id.startsWith(\"input_select.\") ) obj = { entity_id: entity.entity_id, option: variables.state }; else obj = { entity_id: entity.entity_id }; return obj; ]]] styles : grid : - grid-template-areas : \"n\" name : - font-weight : \"bold\" - font-size : \"9.5px\" - width : \"33px\" - padding-bottom : \"7px\" card : - box-shadow : \"none\" - padding : \"0px 5px 5px 5px\" - margin-top : \"-5px\" - border-radius : \"50px\" card_topbar_welcome : show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"item1 item2 item3\" - justify-content : \"space-between\" - display : \"flex\" card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"12px\" - background : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"chips\" entity : \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\" icon : \"mdi:chevron-up\" show_icon : true styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] state : - value : \"on\" icon : \"mdi:chevron-down\" styles : icon : - color : \"rgb(var(--color-theme))\" tap_action : action : \"call-service\" service : \"input_boolean.toggle\" service_data : entity_id : \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\" item2 : card : type : \"custom:button-card\" template : \"chip_weather_date\" entity : \"[[[ return variables.ulm_weather]]]\" variables : ulm_weather : \"[[[ return variables.ulm_weather ]]]\" ulm_language : \"[[[ return variables.ulm_language ]]]\" styles : card : - width : \"100px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item3 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"/config/dashboard\" template : \"chip_mdi_icon_only\" variables : ulm_chip_mdi_icon_only_icon : \"mdi:cog-outline\" styles : card : - align-self : \"end\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] # auto-entities card_scenes_welcome_auto : show_icon : false show_name : true show_label : false variables : colors : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] styles : grid : - grid-template-areas : \"item1\" - display : \"flex\" - justify-content : \"center\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:auto-entities\" card : type : \"grid\" columns : 5 square : false card_param : \"cards\" sort : count : 5 filter : include : - domain : \"light\" options : type : \"custom:button-card\" template : \"card_scenes_pill_welcome\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"this.entity_id\" styles : icon : - color : > [[[ var color = variables.colors if(hass.themes.darkMode){var color = \"#FAFAFA\";} return `rgba(var(--color-${color}), 1)`; ]]] - width : \"20px\" img_cell : - background-color : > [[[ var color = variables.colors var opacity = '0.20' if(hass.themes.darkMode){var opacity = '1'} return `rgba(var(--color-${color}), ${opacity})`; ]]] item2 : card : type : \"custom:button-card\" entity : \"this.entity_id\"","title":"Welcome Scenes Card"},{"location":"usage/cards/card_welcome_scenes/#description","text":"This is a card which shows the basic needs for your dashboard. This card can generate itself automatically. It is also included in the preview-dashboard which comes with a fresh installation of UI-Minimalist.","title":"Description"},{"location":"usage/cards/card_welcome_scenes/#variables","text":"Variable Default Required Notes ulm_card_welcome_scenes_collapse Enables the collapse function. requires an input_boolean to track the state ulm_weather This is your weather provider. Example: weather.your_provider ulm_language Language of your system You can set a different format with the BCP-47 language tags Example: \"en-US\" or just \"en\" entity_1 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_2 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_3 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_4 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_5 auto-entities Can be any common type of entity if no entity is specified defaults to auto-entities entity_6 none Can be any common type of entity entity_7 none Can be any common type of entity","title":"Variables"},{"location":"usage/cards/card_welcome_scenes/#entity-variables","text":"Variable Default Required Notes _entity_id Support almost all types of entities Scenes do always show as off _icon The icon to show _name The name to show _color Random Color of the icon Can choose between: blue , red , green , yellow , pink , purple If not specified, it will take a random color _state on or playing Define input_select state or give manual state for pill to be full _nav_path Navigate to another view Overrides other types of actions","title":"Entity Variables"},{"location":"usage/cards/card_welcome_scenes/#requirement-collapse-function","text":"This feature is fully optional. It requires some more manual configuration! You need to create a input_boolean in HA to track the state. See Docs . Furthermore, you need to add the input_boolean to the variable ulm_card_welcome_scenes_collapse and to either the entity or triggers_update to make sure it directly refreshes the state. Warning Do not use triggers_update: \"all\" ! This will lead to unwanted behavior with the random colors generator.","title":"Requirement Collapse Function"},{"location":"usage/cards/card_welcome_scenes/#usage","text":"You can set 1 to 7 entities to show 1 to 7 pills dynamically If set none it uses auto-entities with max 5 pills - type : \"custom:button-card\" template : \"card_welcome_scenes\" #triggers_update: input_boolean.<Your_boolean> #entity: input_boolean.<Your_boolean> variables : ulm_card_welcome_scenes_collapse : input_boolean.<Your_boolean> #OPTIONAl --> uncomment also entity or triggers_update ulm_weather : \"weather.YOUR_WEATHERPROVIDER\" entity_1 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"blue\" entity_2 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"red\" entity_3 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"green\" entity_4 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"purple\" entity_5 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"yellow\" entity_6 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"pink\" entity_7 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL color : \"yellow\" Auto-entities - type : \"custom:button-card\" template : \"card_welcome_scenes\" #triggers_update: input_boolean.<Your_boolean> #entity: input_boolean.<Your_boolean> variables : ulm_card_welcome_scenes_collapse : input_boolean.<Your_boolean> #OPTIONAl --> uncomment also entity or triggers_update ulm_weather : \"weather.YOUR_WEATHERPROVIDER\" Random Colors - type : \"custom:button-card\" template : \"card_welcome_scenes\" #triggers_update: input_boolean.<Your_boolean> #entity: input_boolean.<Your_boolean> variables : ulm_card_welcome_scenes_collapse : input_boolean.<Your_boolean> #OPTIONAl --> uncomment also entity or triggers_update ulm_weather : \"weather.YOUR_WEATHERPROVIDER\" entity_1 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_2 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_3 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_4 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_5 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_6 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL entity_7 : entity_id : \"<YOUR_ENTITY>\" icon : \"mdi:YOUR_ICON\" #OPTIONAL name : \"YOUR_NAME\" #OPTIONAL Template Code card_welcome_scenes.yaml --- card_welcome_scenes : variables : ulm_weather : \"[[[ return variables.ulm_weather]]]\" ulm_language : \"[[[ return window.navigator.language ]]]\" entity_1 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_4 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_5 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_6 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_7 : entity_id : \"\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] template : - \"ulm_language_variables\" show_icon : false show_name : false show_label : true styles : grid : - grid-template-areas : > [[[ if(variables.ulm_card_welcome_scenes_collapse && states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){ return \"\\'item1\\' \\'item2\\' \"; } else { return \"\\'item1\\' \\'item2\\' \\'item3\\' \\'item4\\'\"; } ]]] - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"0px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"10px\" custom_fields : item3 : - display : > [[[ if(variables.ulm_card_welcome_scenes_collapse && states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] item4 : - display : > [[[ if(variables.ulm_card_welcome_scenes_collapse && states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_topbar_welcome\" variables : ulm_card_welcome_scenes_collapse : \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\" ulm_weather : \"[[[ return variables.ulm_weather]]]\" ulm_language : \"[[[ return variables.ulm_language ]]]\" styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" item2 : card : type : \"custom:button-card\" show_icon : false show_label : false show_name : true show_entity_picture : false name : | [[[ var today = new Date(); var time = today.getHours() let welcome = ''; if (time >= '18'){ welcome = variables.ulm_evening; } else if (time >= '12'){ welcome = variables.ulm_afternoon; } else if (time >= '5'){ welcome = variables.ulm_morning; } else { welcome = variables.ulm_hello; } return welcome + ', ' + ' <br>' + user.name + '!'; ]]] styles : name : - align-self : \"start\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"24px\" - margin-left : \"16px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" - text-align : \"start\" card : - box-shadow : \"none\" - padding-bottom : \"8px\" item3 : card : type : \"custom:button-card\" show_icon : true show_label : true show_name : true show_entity_picture : false name : \"Scenes\" icon : \"mdi:dots-vertical\" styles : icon : - height : \"20px\" - filter : \"opacity(50%)\" name : - align-self : \"start\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"18px\" - margin-left : \"16px\" grid : - grid-template-areas : \"'n i'\" - grid-template-columns : \"6fr 1fr\" - grid-template-rows : \"min-content min-content\" - text-align : \"start\" card : - box-shadow : \"none\" - padding-bottom : \"0px\" - bottom : \"10px\" item4 : card : type : \"custom:button-card\" template : > [[[ if(variables?.entity_1?.entity_id != \"\"){ return 'card_scenes' } else { return 'card_scenes_welcome_auto' } ]]] styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" variables : entity_1 : \"[[[ return variables.entity_1]]]\" entity_2 : \"[[[ return variables.entity_2]]]\" entity_3 : \"[[[ return variables.entity_3]]]\" entity_4 : \"[[[ return variables.entity_4]]]\" entity_5 : \"[[[ return variables.entity_5]]]\" entity_6 : \"[[[ return variables.entity_6]]]\" entity_7 : \"[[[ return variables.entity_7]]]\" card_title_welcome : tap_action : action : \"none\" show_icon : false show_label : true show_name : true styles : card : - background-color : \"rgba(0,0,0,0)\" - box-shadow : \"none\" - height : \"auto\" - width : \"auto\" - margin-top : \"-10px\" - margin-left : \"16px\" - margin-bottom : \"-15px\" grid : - grid-template-areas : \"'n' 'l'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" name : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"20px\" label : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1rem\" - opacity : \"0.4\" # pill card_scenes_pill_welcome : show_icon : false show_label : false show_name : false state : - operator : \"template\" value : > [[[ return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state) ]]] styles : card : - overflow : \"visible\" - box-shadow : \"none\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"min-content\" - grid-template-rows : \"1fr 1fr\" - row-gap : \"12px\" - justify-items : \"center\" - column-gap : \"auto\" card : - border-radius : \"50px\" - place-self : \"center\" - width : \"52px\" - height : \"84px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] color : \"var(--google-grey)\" custom_fields : item1 : card : type : \"custom:button-card\" show_icon : true show_label : false show_name : false tap_action : action : > [[[ if(variables?.nav_path){ return \"navigate\" } else { return \"call-service\" } ]]] service : > [[[ if(entity.entity_id.startsWith(\"scene.\")){ return \"scene.turn_on\" } else if(entity.entity_id.startsWith(\"media_player.\")){ return \"media_player.media_play_pause\" } else if(entity.entity_id.startsWith(\"input_select.\")){ return \"input_select.select_option\" } else { return \"homeassistant.toggle\" } ]]] navigation_path : \"[[[ return variables?.nav_path; ]]]\" service_data : | [[[ var obj; if( entity.entity_id.startsWith(\"input_select.\") ) obj = { entity_id: entity.entity_id, option: variables.state }; else obj = { entity_id: entity.entity_id }; return obj; ]]] styles : grid : - grid-template-areas : \"i\" icon : - color : > [[[ var color = variables?.color if(hass.themes.darkMode){var color = \"#FAFAFA\";} return `rgba(var(--color-${color}), 1)`; ]]] - width : \"20px\" img_cell : - background-color : > [[[ var color = variables?.color var opacity = '0.20' if(hass.themes.darkMode){var opacity = '1'} return `rgba(var(--color-${color}), ${opacity})`; ]]] - border-radius : \"50%\" - width : \"42px\" - height : \"42px\" card : - box-shadow : \"none\" - border-radius : \"50px\" - padding : \"5px\" state : - operator : \"template\" value : > [[[ return (entity.state !== 'on' && entity.state !== 'playing' && entity.state != variables?.state) ]]] styles : card : - overflow : \"visible\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item2 : card : type : \"custom:button-card\" show_icon : false show_label : false tap_action : action : > [[[ if(variables?.nav_path){ return \"navigate\" } else { return \"call-service\" } ]]] navigation_path : \"[[[ return variables?.nav_path; ]]]\" service : > [[[ if(entity.entity_id.startsWith(\"scene.\")){ return \"scene.turn_on\" } else if(entity.entity_id.startsWith(\"media_player.\")){ return \"media_player.media_play_pause\" } else if(entity.entity_id.startsWith(\"input_select.\")){ return \"input_select.select_option\" } else { return \"homeassistant.toggle\" } ]]] service_data : | [[[ var obj; if( entity.entity_id.startsWith(\"input_select.\") ) obj = { entity_id: entity.entity_id, option: variables.state }; else obj = { entity_id: entity.entity_id }; return obj; ]]] styles : grid : - grid-template-areas : \"n\" name : - font-weight : \"bold\" - font-size : \"9.5px\" - width : \"33px\" - padding-bottom : \"7px\" card : - box-shadow : \"none\" - padding : \"0px 5px 5px 5px\" - margin-top : \"-5px\" - border-radius : \"50px\" card_topbar_welcome : show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"item1 item2 item3\" - justify-content : \"space-between\" - display : \"flex\" card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"12px\" - background : \"none\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"chips\" entity : \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\" icon : \"mdi:chevron-up\" show_icon : true styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] state : - value : \"on\" icon : \"mdi:chevron-down\" styles : icon : - color : \"rgb(var(--color-theme))\" tap_action : action : \"call-service\" service : \"input_boolean.toggle\" service_data : entity_id : \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\" item2 : card : type : \"custom:button-card\" template : \"chip_weather_date\" entity : \"[[[ return variables.ulm_weather]]]\" variables : ulm_weather : \"[[[ return variables.ulm_weather ]]]\" ulm_language : \"[[[ return variables.ulm_language ]]]\" styles : card : - width : \"100px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item3 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"/config/dashboard\" template : \"chip_mdi_icon_only\" variables : ulm_chip_mdi_icon_only_icon : \"mdi:cog-outline\" styles : card : - align-self : \"end\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] # auto-entities card_scenes_welcome_auto : show_icon : false show_name : true show_label : false variables : colors : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] styles : grid : - grid-template-areas : \"item1\" - display : \"flex\" - justify-content : \"center\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:auto-entities\" card : type : \"grid\" columns : 5 square : false card_param : \"cards\" sort : count : 5 filter : include : - domain : \"light\" options : type : \"custom:button-card\" template : \"card_scenes_pill_welcome\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"this.entity_id\" styles : icon : - color : > [[[ var color = variables.colors if(hass.themes.darkMode){var color = \"#FAFAFA\";} return `rgba(var(--color-${color}), 1)`; ]]] - width : \"20px\" img_cell : - background-color : > [[[ var color = variables.colors var opacity = '0.20' if(hass.themes.darkMode){var opacity = '1'} return `rgba(var(--color-${color}), ${opacity})`; ]]] item2 : card : type : \"custom:button-card\" entity : \"this.entity_id\"","title":"Usage"},{"location":"usage/chips/chip_alarm/","text":"Description \u00b6 Alarm chip that displays alarm armed and disarmed state with colored icon. Variables \u00b6 Variable Default Required Notes entity entity of your alarm_control_panel Usage \u00b6 - type : 'custom:button-card' template : chip_alarm entity : alarm_control_panel.alarm Template Code chip_alarm.yaml --- ### chip_alarm ### chip_alarm : template : - \"chip_icon_label\" - \"ulm_language_variables\" label : | [[[ var alarm_label = variables.ulm_unknown; if (entity.state == \"armed_home\"){ var alarm_label = variables.ulm_alarm_armed_home; } else if(entity.state == \"armed_away\"){ var alarm_label = variables.ulm_alarm_armed_away; } else if(entity.state == \"armed_night\"){ var alarm_label = variables.ulm_alarm_armed_night; } else if(entity.state == \"disarmed\"){ var alarm_label = variables.ulm_alarm_disarmed; } else if(entity.state == \"arming\"){ var alarm_label = variables.ulm_alarm_arming; } else if(entity.state == \"triggered\"){ var alarm_label = variables.ulm_alarm_triggered; } return alarm_label; ]]] icon : | [[[ var alarm_icon = \"mdi:shield-outline\"; if (entity.state == \"armed_home\"){ var alarm_icon = \"mdi:shield-home\"; } else if(entity.state == \"armed_away\"){ var alarm_icon = \"mdi:shield-lock\"; } else if(entity.state == \"armed_night\"){ var alarm_icon = \"mdi:shield-moon\"; } else if(entity.state == \"disarmed\"){ var alarm_icon = \"mdi:shield-off\"; } else if(entity.state == \"arming\"){ var alarm_icon = \"mdi:shield\"; } else if(entity.state == \"triggered\"){ var alarm_icon = \"mdi:shield-alert\"; } return alarm_icon; ]]] styles : icon : - color : | [[[ var alarm_color = \"var(--google-yellow)\"; if (entity.state == \"armed_home\"){ var alarm_color = \"var(--google-red)\"; } else if(entity.state == \"armed_away\"){ var alarm_color = \"var(--google-red)\"; } else if(entity.state == \"armed_night\"){ var alarm_color = \"var(--google-red)\"; } else if(entity.state == \"disarmed\"){ var alarm_color = \"var(--google-green)\"; } else if(entity.state == \"arming\"){ var alarm_color = \"var(--google-yellow)\"; } else if(entity.state == \"triggered\"){ var alarm_color = \"var(--google-red)\"; } return alarm_color; ]]]","title":"Alarm Chip"},{"location":"usage/chips/chip_alarm/#description","text":"Alarm chip that displays alarm armed and disarmed state with colored icon.","title":"Description"},{"location":"usage/chips/chip_alarm/#variables","text":"Variable Default Required Notes entity entity of your alarm_control_panel","title":"Variables"},{"location":"usage/chips/chip_alarm/#usage","text":"- type : 'custom:button-card' template : chip_alarm entity : alarm_control_panel.alarm Template Code chip_alarm.yaml --- ### chip_alarm ### chip_alarm : template : - \"chip_icon_label\" - \"ulm_language_variables\" label : | [[[ var alarm_label = variables.ulm_unknown; if (entity.state == \"armed_home\"){ var alarm_label = variables.ulm_alarm_armed_home; } else if(entity.state == \"armed_away\"){ var alarm_label = variables.ulm_alarm_armed_away; } else if(entity.state == \"armed_night\"){ var alarm_label = variables.ulm_alarm_armed_night; } else if(entity.state == \"disarmed\"){ var alarm_label = variables.ulm_alarm_disarmed; } else if(entity.state == \"arming\"){ var alarm_label = variables.ulm_alarm_arming; } else if(entity.state == \"triggered\"){ var alarm_label = variables.ulm_alarm_triggered; } return alarm_label; ]]] icon : | [[[ var alarm_icon = \"mdi:shield-outline\"; if (entity.state == \"armed_home\"){ var alarm_icon = \"mdi:shield-home\"; } else if(entity.state == \"armed_away\"){ var alarm_icon = \"mdi:shield-lock\"; } else if(entity.state == \"armed_night\"){ var alarm_icon = \"mdi:shield-moon\"; } else if(entity.state == \"disarmed\"){ var alarm_icon = \"mdi:shield-off\"; } else if(entity.state == \"arming\"){ var alarm_icon = \"mdi:shield\"; } else if(entity.state == \"triggered\"){ var alarm_icon = \"mdi:shield-alert\"; } return alarm_icon; ]]] styles : icon : - color : | [[[ var alarm_color = \"var(--google-yellow)\"; if (entity.state == \"armed_home\"){ var alarm_color = \"var(--google-red)\"; } else if(entity.state == \"armed_away\"){ var alarm_color = \"var(--google-red)\"; } else if(entity.state == \"armed_night\"){ var alarm_color = \"var(--google-red)\"; } else if(entity.state == \"disarmed\"){ var alarm_color = \"var(--google-green)\"; } else if(entity.state == \"arming\"){ var alarm_color = \"var(--google-yellow)\"; } else if(entity.state == \"triggered\"){ var alarm_color = \"var(--google-red)\"; } return alarm_color; ]]]","title":"Usage"},{"location":"usage/chips/chip_back/","text":"Description \u00b6 This is a back-button , primarly used if you switch between views and want a convenient way back. Variables \u00b6 Variable Default Required Notes ulm_chip_back_path Set the navigation path to your default view, eg. ui-lovelace-minimalist/home or lovelace Usage \u00b6 - type : 'custom:button-card' template : chip_back variables : ulm_chip_back_path : /ui-lovelace-minimalist/home Template Code chip_back.yaml --- ### Chip Back ### chip_back : template : \"chips\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_chip_back_path; ]]]\" show_icon : true icon : \"mdi:arrow-left\" styles : grid : - grid-template-areas : \"'i'\"","title":"Back Chip"},{"location":"usage/chips/chip_back/#description","text":"This is a back-button , primarly used if you switch between views and want a convenient way back.","title":"Description"},{"location":"usage/chips/chip_back/#variables","text":"Variable Default Required Notes ulm_chip_back_path Set the navigation path to your default view, eg. ui-lovelace-minimalist/home or lovelace","title":"Variables"},{"location":"usage/chips/chip_back/#usage","text":"- type : 'custom:button-card' template : chip_back variables : ulm_chip_back_path : /ui-lovelace-minimalist/home Template Code chip_back.yaml --- ### Chip Back ### chip_back : template : \"chips\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_chip_back_path; ]]]\" show_icon : true icon : \"mdi:arrow-left\" styles : grid : - grid-template-areas : \"'i'\"","title":"Usage"},{"location":"usage/chips/chip_icon_double_state/","text":"Description \u00b6 This chip displays can display an icon and value of two entities. Variables \u00b6 Variable Default Required Notes ulm_chip_icon_double_state_icon This is the icon to show. See icons to read more about the used unicode emojis . ulm_chip_icon_double_state_entity_1 This is the entity to display in first position ulm_chip_icon_double_state_entity_2 This is the entity to display in second position ulm_chip_navigate_path The path to your view Usage \u00b6 - type : 'custom:button-card' template : chip_icon_double_state variables : ulm_chip_icon_double_state_icon : '\ud83d\udcbb' ulm_chip_icon_double_state_entity_1 : sensor.nas_disk_used ulm_chip_icon_double_state_entity_2 : sensor.nas_cpu_load ulm_chip_navigate_path : /lovelace-minimalist-ui/0 Template Code chip_icon_double_state.yaml --- ### Chip Icon Double State ### chip_icon_double_state : template : \"chips\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_chip_navigate_path; ]]]\" triggers_update : \"all\" label : | [[[ var icon = \"\u2754\"; if (variables.ulm_chip_icon_double_state_icon){ var icon = variables.ulm_chip_icon_double_state_icon; } var state1 = \"\"; if (states[variables.ulm_chip_icon_double_state_entity_1].state){ var state1 = states[variables.ulm_chip_icon_double_state_entity_1].state; if (states[variables.ulm_chip_icon_double_state_entity_1].attributes.unit_of_measurement){ state1 += states[variables.ulm_chip_icon_double_state_entity_1].attributes.unit_of_measurement; } } var state2 = \"\"; if (states[variables.ulm_chip_icon_double_state_entity_2].state){ var state2 = states[variables.ulm_chip_icon_double_state_entity_2].state; if (states[variables.ulm_chip_icon_double_state_entity_2].attributes.unit_of_measurement){ state2 += states[variables.ulm_chip_icon_double_state_entity_2].attributes.unit_of_measurement; } } return icon + \" \" + state1 + \" \u2022 \" + state2; ]]]","title":"Icon Double State Chip"},{"location":"usage/chips/chip_icon_double_state/#description","text":"This chip displays can display an icon and value of two entities.","title":"Description"},{"location":"usage/chips/chip_icon_double_state/#variables","text":"Variable Default Required Notes ulm_chip_icon_double_state_icon This is the icon to show. See icons to read more about the used unicode emojis . ulm_chip_icon_double_state_entity_1 This is the entity to display in first position ulm_chip_icon_double_state_entity_2 This is the entity to display in second position ulm_chip_navigate_path The path to your view","title":"Variables"},{"location":"usage/chips/chip_icon_double_state/#usage","text":"- type : 'custom:button-card' template : chip_icon_double_state variables : ulm_chip_icon_double_state_icon : '\ud83d\udcbb' ulm_chip_icon_double_state_entity_1 : sensor.nas_disk_used ulm_chip_icon_double_state_entity_2 : sensor.nas_cpu_load ulm_chip_navigate_path : /lovelace-minimalist-ui/0 Template Code chip_icon_double_state.yaml --- ### Chip Icon Double State ### chip_icon_double_state : template : \"chips\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_chip_navigate_path; ]]]\" triggers_update : \"all\" label : | [[[ var icon = \"\u2754\"; if (variables.ulm_chip_icon_double_state_icon){ var icon = variables.ulm_chip_icon_double_state_icon; } var state1 = \"\"; if (states[variables.ulm_chip_icon_double_state_entity_1].state){ var state1 = states[variables.ulm_chip_icon_double_state_entity_1].state; if (states[variables.ulm_chip_icon_double_state_entity_1].attributes.unit_of_measurement){ state1 += states[variables.ulm_chip_icon_double_state_entity_1].attributes.unit_of_measurement; } } var state2 = \"\"; if (states[variables.ulm_chip_icon_double_state_entity_2].state){ var state2 = states[variables.ulm_chip_icon_double_state_entity_2].state; if (states[variables.ulm_chip_icon_double_state_entity_2].attributes.unit_of_measurement){ state2 += states[variables.ulm_chip_icon_double_state_entity_2].attributes.unit_of_measurement; } } return icon + \" \" + state1 + \" \u2022 \" + state2; ]]]","title":"Usage"},{"location":"usage/chips/chip_icon_label/","text":"Description \u00b6 This chip displays an icon using mdi and a label. Variables \u00b6 Variable Default Required Notes icon Icon to display label Label to display Usage \u00b6 - type : 'custom:button-card' template : chip_icon_label label : Label icon : 'mdi:heart' Template Code chip_icon_label.yaml --- ## Chips Icon Label ### chip_icon_label : template : \"chips\" show_icon : true show_name : false show_label : true size : \"100%\" styles : card : - box-shadow : \"var(--box-shadow)\" - padding-top : \"6px\" - padding-button : \"6px\" - padding-left : \"12px\" - padding-right : \"6px\" grid : - grid-template-areas : \"'i l'\" - grid-template-columns : \"max_content auto\" - grid-template-rows : \"min-content\" img_cell : - place-self : \"center\" - width : \"14px\" - height : \"24px\" label : - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"12px\" - margin-left : \"0px\"","title":"Icon Label Chip"},{"location":"usage/chips/chip_icon_label/#description","text":"This chip displays an icon using mdi and a label.","title":"Description"},{"location":"usage/chips/chip_icon_label/#variables","text":"Variable Default Required Notes icon Icon to display label Label to display","title":"Variables"},{"location":"usage/chips/chip_icon_label/#usage","text":"- type : 'custom:button-card' template : chip_icon_label label : Label icon : 'mdi:heart' Template Code chip_icon_label.yaml --- ## Chips Icon Label ### chip_icon_label : template : \"chips\" show_icon : true show_name : false show_label : true size : \"100%\" styles : card : - box-shadow : \"var(--box-shadow)\" - padding-top : \"6px\" - padding-button : \"6px\" - padding-left : \"12px\" - padding-right : \"6px\" grid : - grid-template-areas : \"'i l'\" - grid-template-columns : \"max_content auto\" - grid-template-rows : \"min-content\" img_cell : - place-self : \"center\" - width : \"14px\" - height : \"24px\" label : - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"12px\" - margin-left : \"0px\"","title":"Usage"},{"location":"usage/chips/chip_icon_only/","text":"Description \u00b6 This chip displays just an icon. Variables \u00b6 Variable Default Required Notes ulm_chip_icon_only This is the icon to show. See icons to read more about the used unicode emojis . Usage \u00b6 - type : 'custom:button-card' template : chip_icon_only variables : ulm_chip_icon_only : '\u2764\ufe0f' Template Code chip_icon_only.yaml --- ### Chip Icon Only ### chip_icon_only : template : \"chips\" label : | [[[ var icon = \"\u2754\"; if (variables.ulm_chip_icon_only){ var icon = variables.ulm_chip_icon_only; } return icon; ]]]","title":"Icon Only Chip"},{"location":"usage/chips/chip_icon_only/#description","text":"This chip displays just an icon.","title":"Description"},{"location":"usage/chips/chip_icon_only/#variables","text":"Variable Default Required Notes ulm_chip_icon_only This is the icon to show. See icons to read more about the used unicode emojis .","title":"Variables"},{"location":"usage/chips/chip_icon_only/#usage","text":"- type : 'custom:button-card' template : chip_icon_only variables : ulm_chip_icon_only : '\u2764\ufe0f' Template Code chip_icon_only.yaml --- ### Chip Icon Only ### chip_icon_only : template : \"chips\" label : | [[[ var icon = \"\u2754\"; if (variables.ulm_chip_icon_only){ var icon = variables.ulm_chip_icon_only; } return icon; ]]]","title":"Usage"},{"location":"usage/chips/chip_icon_state/","text":"Description \u00b6 This chip displays an icon and a label, where the label can be any state of a sensor you configure. Variables \u00b6 Variable Default Required Notes ulm_chip_icon_state_icon This is the icon to show. See See icons to read more about the used unicode emojis . ulm_chip_icon_state_entity Enable background Usage \u00b6 - type : 'custom:button-card' template : chip_icon_state variables : ulm_chip_icon_state_icon : '\ud83d\udecf\ufe0f' ulm_chip_icon_state_entity : sensor.bed_occupancy Template Code chip_icon_state.yaml --- ### Chip Icon State ### chip_icon_state : template : \"chips\" triggers_update : \"all\" label : | [[[ var icon = \"\u2754\"; if (variables.ulm_chip_icon_state_icon){ var icon = variables.ulm_chip_icon_state_icon; } var state = \"\"; if (states[variables.ulm_chip_icon_state_entity].state){ var state = states[variables.ulm_chip_icon_state_entity].state; if (states[variables.ulm_chip_icon_state_entity].attributes.unit_of_measurement){ state += states[variables.ulm_chip_icon_state_entity].attributes.unit_of_measurement; } } return icon + \" \" + state; ]]]","title":"Icon State Chip"},{"location":"usage/chips/chip_icon_state/#description","text":"This chip displays an icon and a label, where the label can be any state of a sensor you configure.","title":"Description"},{"location":"usage/chips/chip_icon_state/#variables","text":"Variable Default Required Notes ulm_chip_icon_state_icon This is the icon to show. See See icons to read more about the used unicode emojis . ulm_chip_icon_state_entity Enable background","title":"Variables"},{"location":"usage/chips/chip_icon_state/#usage","text":"- type : 'custom:button-card' template : chip_icon_state variables : ulm_chip_icon_state_icon : '\ud83d\udecf\ufe0f' ulm_chip_icon_state_entity : sensor.bed_occupancy Template Code chip_icon_state.yaml --- ### Chip Icon State ### chip_icon_state : template : \"chips\" triggers_update : \"all\" label : | [[[ var icon = \"\u2754\"; if (variables.ulm_chip_icon_state_icon){ var icon = variables.ulm_chip_icon_state_icon; } var state = \"\"; if (states[variables.ulm_chip_icon_state_entity].state){ var state = states[variables.ulm_chip_icon_state_entity].state; if (states[variables.ulm_chip_icon_state_entity].attributes.unit_of_measurement){ state += states[variables.ulm_chip_icon_state_entity].attributes.unit_of_measurement; } } return icon + \" \" + state; ]]]","title":"Usage"},{"location":"usage/chips/chip_mdi_icon_only/","text":"Description \u00b6 This chip displays an icon using mdi . Variables \u00b6 Variable Default Required Notes ulm_chip_mdi_icon_only_entity entity to link ulm_chip_mdi_icon_only_icon mdi:icon to display ulm_chip_mdi_icon_only_icon_color primary-text-color Allow to change icon color Usage \u00b6 - type : 'custom:button-card' template : chip_mdi_icon_only variables : ulm_chip_mdi_icon_only_entity : binary_sensor.bedroom_master_closed_door ulm_chip_mdi_icon_only_icon : mdi:door Template Code chip_mdi_icon_only.yaml --- ### Chip Mdi Icon Only ### chip_mdi_icon_only : template : \"chips\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_chip_mdi_icon_only_entity ]]]\" show_icon : true icon : \"[[[ return variables.ulm_chip_mdi_icon_only_icon ]]]\" styles : grid : - grid-template-areas : \"'i'\" icon : - color : \"[[[ return variables.ulm_chip_mdi_icon_only_icon_color; ]]]\"","title":"Mdi:icon Only Chip"},{"location":"usage/chips/chip_mdi_icon_only/#description","text":"This chip displays an icon using mdi .","title":"Description"},{"location":"usage/chips/chip_mdi_icon_only/#variables","text":"Variable Default Required Notes ulm_chip_mdi_icon_only_entity entity to link ulm_chip_mdi_icon_only_icon mdi:icon to display ulm_chip_mdi_icon_only_icon_color primary-text-color Allow to change icon color","title":"Variables"},{"location":"usage/chips/chip_mdi_icon_only/#usage","text":"- type : 'custom:button-card' template : chip_mdi_icon_only variables : ulm_chip_mdi_icon_only_entity : binary_sensor.bedroom_master_closed_door ulm_chip_mdi_icon_only_icon : mdi:door Template Code chip_mdi_icon_only.yaml --- ### Chip Mdi Icon Only ### chip_mdi_icon_only : template : \"chips\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_chip_mdi_icon_only_entity ]]]\" show_icon : true icon : \"[[[ return variables.ulm_chip_mdi_icon_only_icon ]]]\" styles : grid : - grid-template-areas : \"'i'\" icon : - color : \"[[[ return variables.ulm_chip_mdi_icon_only_icon_color; ]]]\"","title":"Usage"},{"location":"usage/chips/chip_mdi_icon_state/","text":"Description \u00b6 This chip displays an icon using mdi and state of the chosen entity . Variables \u00b6 Variable Default Required Notes ulm_chip_mdi_icon_state_entity entity to link ulm_chip_mdi_icon_state_icon mdi:icon to display ulm_chip_mdi_icon_state_icon_color primary-text-color Allow to change icon color ulm_chip_mdi_icon_state_label_color primary-text-color Allow to change label color Usage \u00b6 - type : \"custom:button-card\" template : chip_mdi_icon_state variables : ulm_chip_mdi_icon_state_entity : light.kitchen_lights ulm_chip_mdi_icon_state_icon : mdi:lightbulb Template Code chip_mdi_icon_state.yaml --- ### Chip Mdi Icon State ### chip_mdi_icon_state : template : \"chips\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_chip_mdi_icon_state_entity ]]]\" triggers_update : \"all\" show_icon : true icon : \"[[[ return variables.ulm_chip_mdi_icon_state_icon ]]]\" label : \"[[[ return states[variables.ulm_chip_mdi_icon_state_entity].state ]]]\" styles : grid : - grid-template-areas : \"'i l'\" icon : - color : \"[[[ return variables.ulm_chip_mdi_icon_state_icon_color; ]]]\" label : - color : \"[[[ return variables.ulm_chip_mdi_icon_state_label_color; ]]]\"","title":"Mdi:icon State Chip"},{"location":"usage/chips/chip_mdi_icon_state/#description","text":"This chip displays an icon using mdi and state of the chosen entity .","title":"Description"},{"location":"usage/chips/chip_mdi_icon_state/#variables","text":"Variable Default Required Notes ulm_chip_mdi_icon_state_entity entity to link ulm_chip_mdi_icon_state_icon mdi:icon to display ulm_chip_mdi_icon_state_icon_color primary-text-color Allow to change icon color ulm_chip_mdi_icon_state_label_color primary-text-color Allow to change label color","title":"Variables"},{"location":"usage/chips/chip_mdi_icon_state/#usage","text":"- type : \"custom:button-card\" template : chip_mdi_icon_state variables : ulm_chip_mdi_icon_state_entity : light.kitchen_lights ulm_chip_mdi_icon_state_icon : mdi:lightbulb Template Code chip_mdi_icon_state.yaml --- ### Chip Mdi Icon State ### chip_mdi_icon_state : template : \"chips\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_chip_mdi_icon_state_entity ]]]\" triggers_update : \"all\" show_icon : true icon : \"[[[ return variables.ulm_chip_mdi_icon_state_icon ]]]\" label : \"[[[ return states[variables.ulm_chip_mdi_icon_state_entity].state ]]]\" styles : grid : - grid-template-areas : \"'i l'\" icon : - color : \"[[[ return variables.ulm_chip_mdi_icon_state_icon_color; ]]]\" label : - color : \"[[[ return variables.ulm_chip_mdi_icon_state_label_color; ]]]\"","title":"Usage"},{"location":"usage/chips/chip_navigate/","text":"Description \u00b6 This chip is a menu button with an icon using mdi . Variables \u00b6 Variable Default Required Notes ulm_chip_navigate_path path to navigate to ulm_chip_navigate_icon Icon to use ulm_chip_navigate_icon_color primary-text-color Allow to change icon color ulm_chip_navigate_label_color primary-text-color Allow to change label color Usage \u00b6 - type : \"custom:button-card\" template : chip_navigate label : 'Living Room' variables : ulm_chip_navigate_path : /lovelace-minimalist-test/ ulm_chip_navigate_icon : mdi:sofa Template Code chip_navigate.yaml --- ### Chip Navigate ### chip_navigate : template : \"chips\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_chip_navigate_path; ]]]\" show_icon : true icon : \"[[[ return variables.ulm_chip_navigate_icon; ]]]\" styles : grid : - grid-template-areas : \"'i l'\" icon : - color : \"[[[ return variables.ulm_chip_navigate_icon_color; ]]]\" label : - color : \"[[[ return variables.ulm_chip_navigate_label_color; ]]]\"","title":"Navigate Chip"},{"location":"usage/chips/chip_navigate/#description","text":"This chip is a menu button with an icon using mdi .","title":"Description"},{"location":"usage/chips/chip_navigate/#variables","text":"Variable Default Required Notes ulm_chip_navigate_path path to navigate to ulm_chip_navigate_icon Icon to use ulm_chip_navigate_icon_color primary-text-color Allow to change icon color ulm_chip_navigate_label_color primary-text-color Allow to change label color","title":"Variables"},{"location":"usage/chips/chip_navigate/#usage","text":"- type : \"custom:button-card\" template : chip_navigate label : 'Living Room' variables : ulm_chip_navigate_path : /lovelace-minimalist-test/ ulm_chip_navigate_icon : mdi:sofa Template Code chip_navigate.yaml --- ### Chip Navigate ### chip_navigate : template : \"chips\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.ulm_chip_navigate_path; ]]]\" show_icon : true icon : \"[[[ return variables.ulm_chip_navigate_icon; ]]]\" styles : grid : - grid-template-areas : \"'i l'\" icon : - color : \"[[[ return variables.ulm_chip_navigate_icon_color; ]]]\" label : - color : \"[[[ return variables.ulm_chip_navigate_label_color; ]]]\"","title":"Usage"},{"location":"usage/chips/chip_power_consumption/","text":"Description \u00b6 This chip shows you the electric consumption from a sensor. Configurable to show power (kWh) or price (currency). Variables \u00b6 Variable Default Required Notes ulm_chip_electric_consumption Variable / Entry Example Required ulm_chip_electric_consumption sensor.my_electric_power_consumption true. This is your consumed energy. This is the sensor, that shows how many kWh s are consumed. ulm_chip_electric_price This is the price for your consumed energy, if you have such a sensor. This should be a sensor that shows a price in your defined currency. If this variable is not set, the chip shows only the kWh s! If this variable is set the chip shows the price for the consumed energy! Usage \u00b6 - type : 'custom:button-card' template : chip_power_consumption variables : ulm_chip_electric_consumption : sensor.my_electric_power_consumption ulm_chip_electric_price : sensor.my_electric_power_price Template Code chip_power_consumption.yaml --- ### Chip Power Consumption ### chip_power_consumption : template : - \"chips\" - \"ulm_language_variables\" triggers_update : \"all\" label : | [[[ var amount = variables.ulm_chip_electric_price != \"\" ? true : false if (amount){ return \"\u26a1 \" + states[variables.ulm_chip_electric_price].state + variables.ulm_currency; } else { return \"\u26a1 \" + states[variables.ulm_chip_electric_consumption].state + states[variables.ulm_chip_electric_consumption].attributes.unit_of_measurement; } ]]]","title":"Power Consumption Chip"},{"location":"usage/chips/chip_power_consumption/#description","text":"This chip shows you the electric consumption from a sensor. Configurable to show power (kWh) or price (currency).","title":"Description"},{"location":"usage/chips/chip_power_consumption/#variables","text":"Variable Default Required Notes ulm_chip_electric_consumption Variable / Entry Example Required ulm_chip_electric_consumption sensor.my_electric_power_consumption true. This is your consumed energy. This is the sensor, that shows how many kWh s are consumed. ulm_chip_electric_price This is the price for your consumed energy, if you have such a sensor. This should be a sensor that shows a price in your defined currency. If this variable is not set, the chip shows only the kWh s! If this variable is set the chip shows the price for the consumed energy!","title":"Variables"},{"location":"usage/chips/chip_power_consumption/#usage","text":"- type : 'custom:button-card' template : chip_power_consumption variables : ulm_chip_electric_consumption : sensor.my_electric_power_consumption ulm_chip_electric_price : sensor.my_electric_power_price Template Code chip_power_consumption.yaml --- ### Chip Power Consumption ### chip_power_consumption : template : - \"chips\" - \"ulm_language_variables\" triggers_update : \"all\" label : | [[[ var amount = variables.ulm_chip_electric_price != \"\" ? true : false if (amount){ return \"\u26a1 \" + states[variables.ulm_chip_electric_price].state + variables.ulm_currency; } else { return \"\u26a1 \" + states[variables.ulm_chip_electric_consumption].state + states[variables.ulm_chip_electric_consumption].attributes.unit_of_measurement; } ]]]","title":"Usage"},{"location":"usage/chips/chip_presence_detection/","text":"Description \u00b6 This chip shows you the actual presence in your home. Shows residents and guests (guests only if one or more). Variables \u00b6 Variable Default Required Notes ulm_chip_presence_counter_residents This is the sensor that shows your residents counter. ulm_chip_presence_counter_guests This is the sensor that shows your guests counter. Usage \u00b6 - type : 'custom:button-card' template : chip_presence_detection variables : ulm_chip_presence_counter_residents : sensor.people_home ulm_chip_presence_counter_guests : sensor.guests_home Template Code chip_presence_detection.yaml --- ### Chip Presence Detection ### chip_presence_detection : template : \"chips\" triggers_update : \"all\" label : | [[[ if (!!variables.ulm_chip_presence_counter_guests) { return \"\ud83c\udfe0 \" + states[variables.ulm_chip_presence_counter_residents].state + \" / \" + states[variables.ulm_chip_presence_counter_guests].state; } else { return \"\ud83c\udfe0 \" + states[variables.ulm_chip_presence_counter_residents].state; } ]]]","title":"Presence Detection Chip"},{"location":"usage/chips/chip_presence_detection/#description","text":"This chip shows you the actual presence in your home. Shows residents and guests (guests only if one or more).","title":"Description"},{"location":"usage/chips/chip_presence_detection/#variables","text":"Variable Default Required Notes ulm_chip_presence_counter_residents This is the sensor that shows your residents counter. ulm_chip_presence_counter_guests This is the sensor that shows your guests counter.","title":"Variables"},{"location":"usage/chips/chip_presence_detection/#usage","text":"- type : 'custom:button-card' template : chip_presence_detection variables : ulm_chip_presence_counter_residents : sensor.people_home ulm_chip_presence_counter_guests : sensor.guests_home Template Code chip_presence_detection.yaml --- ### Chip Presence Detection ### chip_presence_detection : template : \"chips\" triggers_update : \"all\" label : | [[[ if (!!variables.ulm_chip_presence_counter_guests) { return \"\ud83c\udfe0 \" + states[variables.ulm_chip_presence_counter_residents].state + \" / \" + states[variables.ulm_chip_presence_counter_guests].state; } else { return \"\ud83c\udfe0 \" + states[variables.ulm_chip_presence_counter_residents].state; } ]]]","title":"Usage"},{"location":"usage/chips/chip_temperature/","text":"Description \u00b6 This chip is to display a weather icon together with the outside and inside temperature. Variables \u00b6 Variable Default Required Notes ulm_chip_temperature_outside This is the sensor that provides your outside temperature. If you want to use eg. a temperature value from your weather provider, you'd need to setup a template sensor first. The state of this sensor should represent a numeric value (\u00b0C or \u00b0F doesn't matter). ulm_chip_temperature_inside This is the sensor that provides your inside temperature. The state of this sensor should represent a numeric value (\u00b0C or \u00b0F doesn't matter). ulm_chip_temperature_weather This is the sensor for your weather entity for showing current weather conditions Usage \u00b6 - type : 'custom:button-card' template : chip_temperature variables : ulm_chip_temperature_inside : sensor.my_temperature_sensor_inside ulm_chip_temperature_outside : sensor.my_temperature_sensor_outside ulm_chip_temperature_weather : weather.my_weather_provider Template Code chip_temperature.yaml --- ### Chip Temperature ### chip_temperature : template : \"chips\" triggers_update : \"all\" label : | [[[ var icon = \"\ud83c\udf21\ufe0f\"; var weather_state = states[variables.ulm_chip_temperature_weather].state; if (weather_state == \"clear-night\"){ var icon = \"\ud83c\udf19\"; } else if(weather_state == \"cloudy\"){ var icon = \"\u2601\ufe0f\"; } else if(weather_state == \"exceptional\"){ var icon = \"\ud83c\udf1e\"; } else if(weather_state == \"fog\"){ var icon = \"\ud83c\udf2b\ufe0f\"; } else if(weather_state == \"hail\"){ var icon = \"\u26c8\ufe0f\"; } else if(weather_state == \"lightning\"){ var icon = \"\u26a1\"; } else if(weather_state == \"lightning-rainy\"){ var icon = \"\u26c8\ufe0f\"; } else if(weather_state == \"partlycloudy\"){ var icon = \"\u26c5\"; } else if(weather_state == \"pouring\"){ var icon = \"\ud83c\udf27\ufe0f\"; } else if(weather_state == \"rainy\"){ var icon = \"\ud83d\udca7\"; } else if(weather_state == \"snowy\"){ var icon = \"\u2744\ufe0f\"; } else if(weather_state == \"snowy-rainy\"){ var icon = \"\ud83c\udf28\ufe0f\"; } else if(weather_state == \"sunny\"){ var icon = \"\u2600\ufe0f\"; } else if(weather_state == \"windy\"){ var icon = \"\ud83c\udf2a\ufe0f\"; } function convertTemperature(temp) { if (parseFloat(temp) == temp && Math.floor(temp) != temp) { return parseFloat(temp).toFixed(1); } return temp; } var outside_temp = states[variables.ulm_chip_temperature_outside].state; var inside_temp = states[variables.ulm_chip_temperature_inside].state; return icon + \" \" + convertTemperature(outside_temp) + \"\u00b0 / \" + convertTemperature(inside_temp) + \"\u00b0\" ; ]]]","title":"Temperature Chip"},{"location":"usage/chips/chip_temperature/#description","text":"This chip is to display a weather icon together with the outside and inside temperature.","title":"Description"},{"location":"usage/chips/chip_temperature/#variables","text":"Variable Default Required Notes ulm_chip_temperature_outside This is the sensor that provides your outside temperature. If you want to use eg. a temperature value from your weather provider, you'd need to setup a template sensor first. The state of this sensor should represent a numeric value (\u00b0C or \u00b0F doesn't matter). ulm_chip_temperature_inside This is the sensor that provides your inside temperature. The state of this sensor should represent a numeric value (\u00b0C or \u00b0F doesn't matter). ulm_chip_temperature_weather This is the sensor for your weather entity for showing current weather conditions","title":"Variables"},{"location":"usage/chips/chip_temperature/#usage","text":"- type : 'custom:button-card' template : chip_temperature variables : ulm_chip_temperature_inside : sensor.my_temperature_sensor_inside ulm_chip_temperature_outside : sensor.my_temperature_sensor_outside ulm_chip_temperature_weather : weather.my_weather_provider Template Code chip_temperature.yaml --- ### Chip Temperature ### chip_temperature : template : \"chips\" triggers_update : \"all\" label : | [[[ var icon = \"\ud83c\udf21\ufe0f\"; var weather_state = states[variables.ulm_chip_temperature_weather].state; if (weather_state == \"clear-night\"){ var icon = \"\ud83c\udf19\"; } else if(weather_state == \"cloudy\"){ var icon = \"\u2601\ufe0f\"; } else if(weather_state == \"exceptional\"){ var icon = \"\ud83c\udf1e\"; } else if(weather_state == \"fog\"){ var icon = \"\ud83c\udf2b\ufe0f\"; } else if(weather_state == \"hail\"){ var icon = \"\u26c8\ufe0f\"; } else if(weather_state == \"lightning\"){ var icon = \"\u26a1\"; } else if(weather_state == \"lightning-rainy\"){ var icon = \"\u26c8\ufe0f\"; } else if(weather_state == \"partlycloudy\"){ var icon = \"\u26c5\"; } else if(weather_state == \"pouring\"){ var icon = \"\ud83c\udf27\ufe0f\"; } else if(weather_state == \"rainy\"){ var icon = \"\ud83d\udca7\"; } else if(weather_state == \"snowy\"){ var icon = \"\u2744\ufe0f\"; } else if(weather_state == \"snowy-rainy\"){ var icon = \"\ud83c\udf28\ufe0f\"; } else if(weather_state == \"sunny\"){ var icon = \"\u2600\ufe0f\"; } else if(weather_state == \"windy\"){ var icon = \"\ud83c\udf2a\ufe0f\"; } function convertTemperature(temp) { if (parseFloat(temp) == temp && Math.floor(temp) != temp) { return parseFloat(temp).toFixed(1); } return temp; } var outside_temp = states[variables.ulm_chip_temperature_outside].state; var inside_temp = states[variables.ulm_chip_temperature_inside].state; return icon + \" \" + convertTemperature(outside_temp) + \"\u00b0 / \" + convertTemperature(inside_temp) + \"\u00b0\" ; ]]]","title":"Usage"},{"location":"usage/custom_cards/custom_card_afvalophaling/","text":"Custom-card \"Afvalophaling\" \u00b6 !! Attention !! This card can only be used if the integration \"Home-Assistant-Sensor-Afvalbeheer\" from pippyn is installed. Credits \u00b6 Author: AndyVRD - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : 'custom:button-card' template : - card_afvalophaling variables : ulm_card_ophaling_vandaag : 'sensor.limburg_net_afvalophaling_vandaag' ulm_card_ophaling_morgen : \"sensor.limburg_net_afvalophaling_morgen\" ulm_card_datum_gft : \"sensor.limburg_net_afvalophaling_gft\" ulm_card_datum_pmd : \"sensor.limburg_net_afvalophaling_pmd\" ulm_card_datum_rest : \"sensor.limburg_net_afvalophaling_restafval\" ulm_card_datum_papier : \"sensor.limburg_net_afvalophaling_papier\" Requirements \u00b6 Integration from HACS: \"Home-Assistant-Sensor-Afvalbeheer\" from pippyn Variables \u00b6 Variable Example Required Explanation ulm_card_ophaling_vandaag sensor.limburg_net_afvalophaling_vandaag yes Collection(s) for today ulm_card_ophaling_morgen sensor.limburg_net_afvalophaling_morgen yes Collection(s) for tomorrow ulm_card_datum_gft sensor.limburg_net_afvalophaling_gft yes GFT collection date ulm_card_datum_pmd sensor.limburg_net_afvalophaling_pmd yes PMD collection date ulm_card_datum_rest sensor.limburg_net_afvalophaling_rest yes Restafval collection date ulm_card_datum_papier sensor.limburg_net_afvalophaling_papier yes Papier collection date Template code \u00b6 --- card_afvalophaling : template : - \"ulm_language_variables\" - \"icon_info_afvalophaling\" - \"custom_colors\" triggers_update : \"all\" icon : \"mdi:delete\" name : > [[[ if(states[variables.ulm_card_ophaling_vandaag].state !=='Geen' || states[variables.ulm_card_ophaling_morgen].state !=='Geen'){ return variables.ulm_ophaling } else { return variables.ulm_volgende_ophaling } ]]] label : | [[[ var glas = '' if(variables.ulm_card_datum_glas){ var glas = \"Glas \" + ' \u2022 ' + states[variables.ulm_card_datum_glas].state + '<br>' } var pmd = '' if(variables.ulm_card_datum_pmd){ var pmd = \"PMD \" + ' \u2022 ' + states[variables.ulm_card_datum_pmd].state + '<br>' } var gft = '' if(variables.ulm_card_datum_gft){ var gft = \"GFT \" + ' \u2022 ' + states[variables.ulm_card_datum_gft].state + '<br>' } var rest = '' if(variables.ulm_card_datum_rest){ var rest = \"Restafval \" + ' \u2022 ' + states[variables.ulm_card_datum_rest].state + '<br>' } var papier = '' if(variables.ulm_card_datum_papier){ var papier = \"Papier \" + ' \u2022 ' + states[variables.ulm_card_datum_papier].state + '<br>' } if(states[variables.ulm_card_ophaling_vandaag].state !=='Geen'){ return states[variables.ulm_card_ophaling_vandaag].state } if(states[variables.ulm_card_ophaling_morgen].state !=='Geen'){ return states[variables.ulm_card_ophaling_morgen].state } else { return rest + papier + pmd + gft + glas } ]]] custom_colors : state : - styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" value : > [[[ return states[variables.ulm_card_ophaling_vandaag].state !== \"Geen\" || states[variables.ulm_card_ophaling_morgen].state !== \"Geen\" ]]] icon : \"mdi:recycle\" operator : \"template\" - styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" value : > [[[ return states[variables.ulm_card_ophaling_vandaag].state === \"glas\" || states[variables.ulm_card_ophaling_morgen].state === \"glas\" ]]] icon : \"mdi:bottle-wine-outline\" operator : \"template\" icon_info_afvalophaling : color : \"var(--google-grey)\" show_icon : \"true\" show_label : \"true\" show_name : \"true\" state : - value : \"unavailable\" styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red), 0.2)\" custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"42px\" - top : \"10px\" - height : \"16px\" - width : \"16px\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" - text-align : \"start\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - margin-bottom : \"4px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : notification : > [[[ if (states[variables.ulm_card_ophaling_vandaag].state =='unavailable' || states[variables.ulm_card_ophaling_morgen].state =='unavailable'){ return `<ha-icon icon=\"mdi:help\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>` } ]]] size : \"20px\"","title":"Afvalophaling Custom-card"},{"location":"usage/custom_cards/custom_card_afvalophaling/#custom-card-afvalophaling","text":"!! Attention !! This card can only be used if the integration \"Home-Assistant-Sensor-Afvalbeheer\" from pippyn is installed.","title":"Custom-card \"Afvalophaling\""},{"location":"usage/custom_cards/custom_card_afvalophaling/#credits","text":"Author: AndyVRD - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_afvalophaling/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_afvalophaling/#usage","text":"- type : 'custom:button-card' template : - card_afvalophaling variables : ulm_card_ophaling_vandaag : 'sensor.limburg_net_afvalophaling_vandaag' ulm_card_ophaling_morgen : \"sensor.limburg_net_afvalophaling_morgen\" ulm_card_datum_gft : \"sensor.limburg_net_afvalophaling_gft\" ulm_card_datum_pmd : \"sensor.limburg_net_afvalophaling_pmd\" ulm_card_datum_rest : \"sensor.limburg_net_afvalophaling_restafval\" ulm_card_datum_papier : \"sensor.limburg_net_afvalophaling_papier\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_afvalophaling/#requirements","text":"Integration from HACS: \"Home-Assistant-Sensor-Afvalbeheer\" from pippyn","title":"Requirements"},{"location":"usage/custom_cards/custom_card_afvalophaling/#variables","text":"Variable Example Required Explanation ulm_card_ophaling_vandaag sensor.limburg_net_afvalophaling_vandaag yes Collection(s) for today ulm_card_ophaling_morgen sensor.limburg_net_afvalophaling_morgen yes Collection(s) for tomorrow ulm_card_datum_gft sensor.limburg_net_afvalophaling_gft yes GFT collection date ulm_card_datum_pmd sensor.limburg_net_afvalophaling_pmd yes PMD collection date ulm_card_datum_rest sensor.limburg_net_afvalophaling_rest yes Restafval collection date ulm_card_datum_papier sensor.limburg_net_afvalophaling_papier yes Papier collection date","title":"Variables"},{"location":"usage/custom_cards/custom_card_afvalophaling/#template-code","text":"--- card_afvalophaling : template : - \"ulm_language_variables\" - \"icon_info_afvalophaling\" - \"custom_colors\" triggers_update : \"all\" icon : \"mdi:delete\" name : > [[[ if(states[variables.ulm_card_ophaling_vandaag].state !=='Geen' || states[variables.ulm_card_ophaling_morgen].state !=='Geen'){ return variables.ulm_ophaling } else { return variables.ulm_volgende_ophaling } ]]] label : | [[[ var glas = '' if(variables.ulm_card_datum_glas){ var glas = \"Glas \" + ' \u2022 ' + states[variables.ulm_card_datum_glas].state + '<br>' } var pmd = '' if(variables.ulm_card_datum_pmd){ var pmd = \"PMD \" + ' \u2022 ' + states[variables.ulm_card_datum_pmd].state + '<br>' } var gft = '' if(variables.ulm_card_datum_gft){ var gft = \"GFT \" + ' \u2022 ' + states[variables.ulm_card_datum_gft].state + '<br>' } var rest = '' if(variables.ulm_card_datum_rest){ var rest = \"Restafval \" + ' \u2022 ' + states[variables.ulm_card_datum_rest].state + '<br>' } var papier = '' if(variables.ulm_card_datum_papier){ var papier = \"Papier \" + ' \u2022 ' + states[variables.ulm_card_datum_papier].state + '<br>' } if(states[variables.ulm_card_ophaling_vandaag].state !=='Geen'){ return states[variables.ulm_card_ophaling_vandaag].state } if(states[variables.ulm_card_ophaling_morgen].state !=='Geen'){ return states[variables.ulm_card_ophaling_morgen].state } else { return rest + papier + pmd + gft + glas } ]]] custom_colors : state : - styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" value : > [[[ return states[variables.ulm_card_ophaling_vandaag].state !== \"Geen\" || states[variables.ulm_card_ophaling_morgen].state !== \"Geen\" ]]] icon : \"mdi:recycle\" operator : \"template\" - styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" value : > [[[ return states[variables.ulm_card_ophaling_vandaag].state === \"glas\" || states[variables.ulm_card_ophaling_morgen].state === \"glas\" ]]] icon : \"mdi:bottle-wine-outline\" operator : \"template\" icon_info_afvalophaling : color : \"var(--google-grey)\" show_icon : \"true\" show_label : \"true\" show_name : \"true\" state : - value : \"unavailable\" styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red), 0.2)\" custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"42px\" - top : \"10px\" - height : \"16px\" - width : \"16px\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" - text-align : \"start\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - margin-bottom : \"4px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : notification : > [[[ if (states[variables.ulm_card_ophaling_vandaag].state =='unavailable' || states[variables.ulm_card_ophaling_morgen].state =='unavailable'){ return `<ha-icon icon=\"mdi:help\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>` } ]]] size : \"20px\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_apexcharts/","text":"Custom-card \"Apexcharts\" \u00b6 Credits \u00b6 Author: AndyVRD - 2022 Credits to benm7 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : \"custom:button-card\" template : \"custom_card_apexcharts\" variables : chart_type : \"donut\" graph_span : \"1d\" entity_1 : entity_id : \"sensor.google\" icon : '' name : \"Google\" color : \"blue\" max_value : 300 entity_2 : entity_id : \"sensor.cloudflare\" icon : '' name : \"Cloudflare\" color : \"yellow\" max_value : 50 entity_3 : entity_id : \"sensor.gateway\" icon : '' name : \"Gateway\" color : \"green\" max_value : 30 Requirements \u00b6 Integration from HACS: \"custom:apexcharts-card\" from RomRider Variables \u00b6 Variable Example Required Explanation chart_type line, scatter, pie, donut or radialBar yes The chart type you want to display graph_span 1h, 12min, 1d, 1h25, 10sec, ... no The span of the graph as a time interval entity_id sensor.speedtest_download yes Entity sensor of choice icon mdi:cpu-64-bit no mdi icon you want to be exposed in the img_cell, '' will return entity.attributes.icon name name for the used sensor no '' will return entity.attributes.friendly_name color green, blue, yellow, red or grey no if you don't use the color variable it will choice a random color max_value 10, 300, ... no Maximum value of the sensor. Default will be 100 Template code \u00b6 --- custom_card_apexcharts : variables : entity_1 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'green']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'green']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red','green']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] color : \"auto\" variable : \"spin\" spin : false show_name : false show_state : false show_label : false show_icon : false show_last_changed : false show_entity_picture : false tap_action : action : \"none\" aspect_ratio : \"2/1\" styles : grid : - grid-template-areas : \"'item1 radial' 'item2 radial' 'item3 radial'\" - grid-template-columns : \"35% 65%\" - grid-template-rows : \"1fr 1fr 1fr\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_1.entity_id ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" template : - \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" template : - \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item3 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" template : - \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" radial : card : type : \"custom:apexcharts-card\" graph_span : \"[[[ return variables.graph_span ]]]\" chart_type : \"[[[ return variables.chart_type ]]]\" style : | ha-card { border-radius: \"var(--border-radius)\"; box-shadow: none; padding-left: 10px; padding-bottom: 0px; } header : show : false apex_config : title : floating : false align : \"top\" style : fontSize : \"2px\" fontWeight : \"bold\" chart : foreColor : \"rgb(148,148,148)\" offsetY : 5 legend : show : false series : - entity : \"[[[ return variables.entity_1.entity_id ]]]\" name : \"[[[ return variables.entity_1_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_1.color})`;]]]\" max : \"[[[ return variables.entity_1.max_value ]]]\" - entity : \"[[[ return variables.entity_2.entity_id ]]]\" name : \"[[[ return variables.entity_2_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_2.color})`;]]]\" max : \"[[[ return variables.entity_2.max_value ]]]\" - entity : \"[[[ return variables.entity_3.entity_id ]]]\" name : \"[[[ return variables.entity_3_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_3.color})`;]]]\" max : \"[[[ return variables.entity_3.max_value ]]]\"","title":"Apexcharts Custom-card"},{"location":"usage/custom_cards/custom_card_apexcharts/#custom-card-apexcharts","text":"","title":"Custom-card \"Apexcharts\""},{"location":"usage/custom_cards/custom_card_apexcharts/#credits","text":"Author: AndyVRD - 2022 Credits to benm7 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_apexcharts/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_apexcharts/#usage","text":"- type : \"custom:button-card\" template : \"custom_card_apexcharts\" variables : chart_type : \"donut\" graph_span : \"1d\" entity_1 : entity_id : \"sensor.google\" icon : '' name : \"Google\" color : \"blue\" max_value : 300 entity_2 : entity_id : \"sensor.cloudflare\" icon : '' name : \"Cloudflare\" color : \"yellow\" max_value : 50 entity_3 : entity_id : \"sensor.gateway\" icon : '' name : \"Gateway\" color : \"green\" max_value : 30","title":"Usage"},{"location":"usage/custom_cards/custom_card_apexcharts/#requirements","text":"Integration from HACS: \"custom:apexcharts-card\" from RomRider","title":"Requirements"},{"location":"usage/custom_cards/custom_card_apexcharts/#variables","text":"Variable Example Required Explanation chart_type line, scatter, pie, donut or radialBar yes The chart type you want to display graph_span 1h, 12min, 1d, 1h25, 10sec, ... no The span of the graph as a time interval entity_id sensor.speedtest_download yes Entity sensor of choice icon mdi:cpu-64-bit no mdi icon you want to be exposed in the img_cell, '' will return entity.attributes.icon name name for the used sensor no '' will return entity.attributes.friendly_name color green, blue, yellow, red or grey no if you don't use the color variable it will choice a random color max_value 10, 300, ... no Maximum value of the sensor. Default will be 100","title":"Variables"},{"location":"usage/custom_cards/custom_card_apexcharts/#template-code","text":"--- custom_card_apexcharts : variables : entity_1 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'green']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'green']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red','green']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] color : \"auto\" variable : \"spin\" spin : false show_name : false show_state : false show_label : false show_icon : false show_last_changed : false show_entity_picture : false tap_action : action : \"none\" aspect_ratio : \"2/1\" styles : grid : - grid-template-areas : \"'item1 radial' 'item2 radial' 'item3 radial'\" - grid-template-columns : \"35% 65%\" - grid-template-rows : \"1fr 1fr 1fr\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_1.entity_id ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" template : - \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" template : - \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item3 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" template : - \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" radial : card : type : \"custom:apexcharts-card\" graph_span : \"[[[ return variables.graph_span ]]]\" chart_type : \"[[[ return variables.chart_type ]]]\" style : | ha-card { border-radius: \"var(--border-radius)\"; box-shadow: none; padding-left: 10px; padding-bottom: 0px; } header : show : false apex_config : title : floating : false align : \"top\" style : fontSize : \"2px\" fontWeight : \"bold\" chart : foreColor : \"rgb(148,148,148)\" offsetY : 5 legend : show : false series : - entity : \"[[[ return variables.entity_1.entity_id ]]]\" name : \"[[[ return variables.entity_1_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_1.color})`;]]]\" max : \"[[[ return variables.entity_1.max_value ]]]\" - entity : \"[[[ return variables.entity_2.entity_id ]]]\" name : \"[[[ return variables.entity_2_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_2.color})`;]]]\" max : \"[[[ return variables.entity_2.max_value ]]]\" - entity : \"[[[ return variables.entity_3.entity_id ]]]\" name : \"[[[ return variables.entity_3_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_3.color})`;]]]\" max : \"[[[ return variables.entity_3.max_value ]]]\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_bar_card/","text":"Custom-card \"Bar Card\" \u00b6 This is a custom-card to display a percentage value as a bar. Credits \u00b6 Author: rphlwnk - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release. Requirements \u00b6 This card needs the following to function correctly: Custom Card 'Bar-Card' Usage \u00b6 - type : 'custom:button-card' template : custom_card_bar_card variables : ulm_custom_card_bar_card_entity : sensor.memory_use_percent ulm_custom_card_bar_card_name : Memory Usage ulm_custom_card_bar_card_value : true ulm_custom_card_bar_card_indicator : true ulm_custom_card_bar_card_color : \"var(--google-green)\" ulm_custom_card_bar_card_min : 10 ulm_custom_card_bar_card_max : 20 Variables \u00b6 Variable Example Required Default Explanation ulm_custom_card_bar_card_entity sensor.memory_use_percent yes The entity with the desired value ulm_custom_card_bar_card_name \"Memory Consumption\" no Sensor Name Overwrites the sensor name ulm_custom_card_bar_card_value true / false no false If true, shows the value in the bar ulm_custom_card_bar_card_indicator true / false no false If true, shows if the value has changed up or down ulm_custom_card_bar_card_color \"var(--google-green)\" no \"var(--google-blue)\" Change the color of the bar ulm_custom_card_bar_card_min 10 no 0 Change the minimum value of the bar ulm_custom_card_bar_card_max 20 no 100 Change the maximum value of the bar Example \u00b6 - type : 'custom:button-card' template : custom_card_bar_card variables : ulm_custom_card_bar_card_entity : sensor.memory_use_percent ulm_custom_card_bar_card_name : Memory Usage","title":"Bar Card Custom-card"},{"location":"usage/custom_cards/custom_card_bar_card/#custom-card-bar-card","text":"This is a custom-card to display a percentage value as a bar.","title":"Custom-card \"Bar Card\""},{"location":"usage/custom_cards/custom_card_bar_card/#credits","text":"Author: rphlwnk - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_bar_card/#changelog","text":"1.0.0 Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_bar_card/#requirements","text":"This card needs the following to function correctly: Custom Card 'Bar-Card'","title":"Requirements"},{"location":"usage/custom_cards/custom_card_bar_card/#usage","text":"- type : 'custom:button-card' template : custom_card_bar_card variables : ulm_custom_card_bar_card_entity : sensor.memory_use_percent ulm_custom_card_bar_card_name : Memory Usage ulm_custom_card_bar_card_value : true ulm_custom_card_bar_card_indicator : true ulm_custom_card_bar_card_color : \"var(--google-green)\" ulm_custom_card_bar_card_min : 10 ulm_custom_card_bar_card_max : 20","title":"Usage"},{"location":"usage/custom_cards/custom_card_bar_card/#variables","text":"Variable Example Required Default Explanation ulm_custom_card_bar_card_entity sensor.memory_use_percent yes The entity with the desired value ulm_custom_card_bar_card_name \"Memory Consumption\" no Sensor Name Overwrites the sensor name ulm_custom_card_bar_card_value true / false no false If true, shows the value in the bar ulm_custom_card_bar_card_indicator true / false no false If true, shows if the value has changed up or down ulm_custom_card_bar_card_color \"var(--google-green)\" no \"var(--google-blue)\" Change the color of the bar ulm_custom_card_bar_card_min 10 no 0 Change the minimum value of the bar ulm_custom_card_bar_card_max 20 no 100 Change the maximum value of the bar","title":"Variables"},{"location":"usage/custom_cards/custom_card_bar_card/#example","text":"- type : 'custom:button-card' template : custom_card_bar_card variables : ulm_custom_card_bar_card_entity : sensor.memory_use_percent ulm_custom_card_bar_card_name : Memory Usage","title":"Example"},{"location":"usage/custom_cards/custom_card_camera/","text":"Custom-card \"Camera\" \u00b6 This is a custom-card to display a camera live view. Credits \u00b6 Author: Eltarius, from the script of Clemalex - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release. Usage \u00b6 - type : \"custom:button-card\" entity : \"camera.sensor\" template : \"custom_card_camera\" show_icon : false #True if you set ulm_custom_card_camera_title: true variables : ulm_custom_card_camera_title : true ulm_custom_card_camera_name : \"name\" ulm_custom_card_camera_label : \"label\" Variables \u00b6 Variable Example Required Default Explanation ulm_custom_card_camera_title true yes If you want header card ulm_custom_card_camera_name \"Garden\" no Name of your choice ulm_custom_card_camera_label \"Room\" no Label of your choice","title":"Custom Camera Card"},{"location":"usage/custom_cards/custom_card_camera/#custom-card-camera","text":"This is a custom-card to display a camera live view.","title":"Custom-card \"Camera\""},{"location":"usage/custom_cards/custom_card_camera/#credits","text":"Author: Eltarius, from the script of Clemalex - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_camera/#changelog","text":"1.0.0 Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_camera/#usage","text":"- type : \"custom:button-card\" entity : \"camera.sensor\" template : \"custom_card_camera\" show_icon : false #True if you set ulm_custom_card_camera_title: true variables : ulm_custom_card_camera_title : true ulm_custom_card_camera_name : \"name\" ulm_custom_card_camera_label : \"label\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_camera/#variables","text":"Variable Example Required Default Explanation ulm_custom_card_camera_title true yes If you want header card ulm_custom_card_camera_name \"Garden\" no Name of your choice ulm_custom_card_camera_label \"Room\" no Label of your choice","title":"Variables"},{"location":"usage/custom_cards/custom_card_chromecast/","text":"Media player: sonos \u00b6 NOTE This card is under review and is not ready to use! Usage ## Example - type : 'custom:button-card' template : card_media_player_chromecast_with_controls variables : ulm_card_media_player_with_controls_name : \"Chromecast\" ulm_card_media_player_with_controls_entity : media_player.my_chromecast ## Variables Variable Example Required Explanation ulm_card_media_player_with_controls_name Chromecast Yes Name shown in lovelace ulm_card_media_player_with_controls_entity media_player.my_chromecast Yes Entity id Template code card_media_player_sonos : size : \"20px\" show_icon : true show_entity_picture : false show_state : false show_name : true template : - \"green_playing\" - \"icon_info_bg\" - \"ulm_language_variables\" label : | [[[ if (entity.state == 'idle'){ return variables.ulm_off; } if (entity.state == 'paused'){ return variables.ulm_paused; } if (entity.state == 'unavailable'){ return variables.ulm_unavailable; } else { return (entity.attributes.source) + ' \u2022 ' + ( Math.round(entity.attributes.volume_level / 0.01)) + '%' ; } ]]] card_media_player_sonos_with_controls : variables : ulm_card_media_player_with_controls_name : \"No name set\" triggers_update : - \"[[[ ulm_card_media_player_with_controls_entity ]]]\" styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"ulm_language_variables\" - \"card_media_player_sonos\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" name : \"[[[ return variables.ulm_card_media_player_with_controls_name ]]]\" styles : card : - box-shadow : \"none\" - padding : \"0px\" item2 : card : type : \"custom:button-card\" template : \"list_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_down\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-minus\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_play_pause\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:pause\" state : - value : \"paused\" icon : \"mdi:play\" - value : \"off\" icon : \"mdi:play\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_up\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-plus\" icon_info_bg_sonos : color : \"var(--google-grey)\" show_icon : true show_label : true show_name : true state : - value : \"unavailable\" styles : custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"3px\" - top : \"8px\" - height : \"18px\" - width : \"18px\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" size : \"20px\" green_playing : state : - styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" value : \"playing\"","title":"Mediaplayer Chromecast Custom-card"},{"location":"usage/custom_cards/custom_card_chromecast/#media-player-sonos","text":"NOTE This card is under review and is not ready to use! Usage ## Example - type : 'custom:button-card' template : card_media_player_chromecast_with_controls variables : ulm_card_media_player_with_controls_name : \"Chromecast\" ulm_card_media_player_with_controls_entity : media_player.my_chromecast ## Variables Variable Example Required Explanation ulm_card_media_player_with_controls_name Chromecast Yes Name shown in lovelace ulm_card_media_player_with_controls_entity media_player.my_chromecast Yes Entity id Template code card_media_player_sonos : size : \"20px\" show_icon : true show_entity_picture : false show_state : false show_name : true template : - \"green_playing\" - \"icon_info_bg\" - \"ulm_language_variables\" label : | [[[ if (entity.state == 'idle'){ return variables.ulm_off; } if (entity.state == 'paused'){ return variables.ulm_paused; } if (entity.state == 'unavailable'){ return variables.ulm_unavailable; } else { return (entity.attributes.source) + ' \u2022 ' + ( Math.round(entity.attributes.volume_level / 0.01)) + '%' ; } ]]] card_media_player_sonos_with_controls : variables : ulm_card_media_player_with_controls_name : \"No name set\" triggers_update : - \"[[[ ulm_card_media_player_with_controls_entity ]]]\" styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"ulm_language_variables\" - \"card_media_player_sonos\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" name : \"[[[ return variables.ulm_card_media_player_with_controls_name ]]]\" styles : card : - box-shadow : \"none\" - padding : \"0px\" item2 : card : type : \"custom:button-card\" template : \"list_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_down\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-minus\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_play_pause\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:pause\" state : - value : \"paused\" icon : \"mdi:play\" - value : \"off\" icon : \"mdi:play\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_up\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-plus\" icon_info_bg_sonos : color : \"var(--google-grey)\" show_icon : true show_label : true show_name : true state : - value : \"unavailable\" styles : custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"3px\" - top : \"8px\" - height : \"18px\" - width : \"18px\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" size : \"20px\" green_playing : state : - styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" value : \"playing\"","title":"Media player: sonos"},{"location":"usage/custom_cards/custom_card_damix48_power_details/","text":"Custom-card \"Power details\" \u00b6 The custom_card_damix48_power_details is an extension of the standard graph card and can show a detailed graphs of power consumption. If hover (or tap in mobile) the points of the line show the average power in that time interval. Credits \u00b6 Author: Damix48 Version: 0.1.0 Changelog \u00b6 0.1.0 Initial release. Usage \u00b6 - type : \"custom:button-card\" template : custom_card_damix48_power_details variables : ulm_card_power_details_name : Power ulm_card_power_details_entity : sensor.shellyem_id_channel_1_power ulm_card_power_details_hours : 2 ulm_card_power_details_24hour : true ulm_card_power_details_thresholds : - value : 0 color : \"#43A047\" - value : 2500 color : \"#FFA600\" - value : 3000 color : \"#DB4437\" Requirements \u00b6 Need mini-graph-card Variables \u00b6 Variable Example Required Explanation ulm_card_power_details_entity sensor.shellyem_id_channel_1_power yes Power sensor entity ulm_card_power_details_name \"Power\" no Name to show on card. ulm_card_power_details_hours 2 no Number of hour to show in the graph (2 is the default value) ulm_card_power_details_24hour true no Switch from AM/PM (default) to 24h format ulm_card_power_details_thresholds - value: 0 color: \"#43A047\" - value: 2500 color: \"#FFA600\" - value: 3000 color: \"#DB4437\" no Thresholds to change color in the graph according to power value (default is only one color) ulm_card_power_details_height 180 no Height of the graph (180 is the default value) Template code \u00b6 --- custom_card_damix48_power_details : template : - \"ulm_custom_card_damix48_power_details_language_variables\" variables : ulm_card_power_details_name : \"n/a\" ulm_card_power_details_hours : 2 ulm_card_power_details_24hour : false ulm_card_power_details_height : 180 triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"card_generic\" styles : card : - box-shadow : \"none\" - border-radius : \"var(--border-radius) var(--border-radius) 0px 0px\" - padding : \"12px\" entity : \"[[[ return variables.ulm_card_power_details_entity ]]]\" name : | [[[ if (variables.ulm_card_power_details_hours == 1) { return variables.ulm_custom_card_damix48_power_details_in_the_last + \" \" + variables.ulm_custom_card_damix48_power_details_hour; } else { return variables.ulm_custom_card_damix48_power_details_in_the_lasts + \" \" + variables.ulm_card_power_details_hours + \" \" + variables.ulm_custom_card_damix48_power_details_hours; } ]]] label : \"[[[ return variables.ulm_card_power_details_name ]]]\" item2 : card : type : \"custom:mini-graph-card\" template : - \"icon_info\" - \"card_generic\" entities : - entity : \"[[[ return variables.ulm_card_power_details_entity ]]]\" color_thresholds : | [[[ if (variables.ulm_card_power_details_thresholds) { return variables.ulm_card_power_details_thresholds; } else { return [{ value: 0, color: \"var(--info-color)\" }]; } ]]] hours_to_show : \"[[[ return variables.ulm_card_power_details_hours ]]]\" points_per_hour : \"[[[ return Math.floor(120 / variables.ulm_card_power_details_hours) ]]]\" name : \"[[[ return variables.ulm_card_power_details_name ]]]\" hour24 : \"[[[ return variables.ulm_card_power_details_24hour ]]]\" decimals : 1 show : name : false icon : false legend : false state : true align_state : center height : \"[[[ return variables.ulm_card_power_details_height ]]]\" style : | ha-card { box-shadow: none; border-radius: var(--border-radius); } ha-card .state { font-weight: bold; font-size: 14px; } ha-card .graph__labels > span { background: var(--card-background-color); color: var(--secondary-text-color) }","title":"Power Details Custom-card"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#custom-card-power-details","text":"The custom_card_damix48_power_details is an extension of the standard graph card and can show a detailed graphs of power consumption. If hover (or tap in mobile) the points of the line show the average power in that time interval.","title":"Custom-card \"Power details\""},{"location":"usage/custom_cards/custom_card_damix48_power_details/#credits","text":"Author: Damix48 Version: 0.1.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#changelog","text":"0.1.0 Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#usage","text":"- type : \"custom:button-card\" template : custom_card_damix48_power_details variables : ulm_card_power_details_name : Power ulm_card_power_details_entity : sensor.shellyem_id_channel_1_power ulm_card_power_details_hours : 2 ulm_card_power_details_24hour : true ulm_card_power_details_thresholds : - value : 0 color : \"#43A047\" - value : 2500 color : \"#FFA600\" - value : 3000 color : \"#DB4437\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#requirements","text":"Need mini-graph-card","title":"Requirements"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#variables","text":"Variable Example Required Explanation ulm_card_power_details_entity sensor.shellyem_id_channel_1_power yes Power sensor entity ulm_card_power_details_name \"Power\" no Name to show on card. ulm_card_power_details_hours 2 no Number of hour to show in the graph (2 is the default value) ulm_card_power_details_24hour true no Switch from AM/PM (default) to 24h format ulm_card_power_details_thresholds - value: 0 color: \"#43A047\" - value: 2500 color: \"#FFA600\" - value: 3000 color: \"#DB4437\" no Thresholds to change color in the graph according to power value (default is only one color) ulm_card_power_details_height 180 no Height of the graph (180 is the default value)","title":"Variables"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#template-code","text":"--- custom_card_damix48_power_details : template : - \"ulm_custom_card_damix48_power_details_language_variables\" variables : ulm_card_power_details_name : \"n/a\" ulm_card_power_details_hours : 2 ulm_card_power_details_24hour : false ulm_card_power_details_height : 180 triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"card_generic\" styles : card : - box-shadow : \"none\" - border-radius : \"var(--border-radius) var(--border-radius) 0px 0px\" - padding : \"12px\" entity : \"[[[ return variables.ulm_card_power_details_entity ]]]\" name : | [[[ if (variables.ulm_card_power_details_hours == 1) { return variables.ulm_custom_card_damix48_power_details_in_the_last + \" \" + variables.ulm_custom_card_damix48_power_details_hour; } else { return variables.ulm_custom_card_damix48_power_details_in_the_lasts + \" \" + variables.ulm_card_power_details_hours + \" \" + variables.ulm_custom_card_damix48_power_details_hours; } ]]] label : \"[[[ return variables.ulm_card_power_details_name ]]]\" item2 : card : type : \"custom:mini-graph-card\" template : - \"icon_info\" - \"card_generic\" entities : - entity : \"[[[ return variables.ulm_card_power_details_entity ]]]\" color_thresholds : | [[[ if (variables.ulm_card_power_details_thresholds) { return variables.ulm_card_power_details_thresholds; } else { return [{ value: 0, color: \"var(--info-color)\" }]; } ]]] hours_to_show : \"[[[ return variables.ulm_card_power_details_hours ]]]\" points_per_hour : \"[[[ return Math.floor(120 / variables.ulm_card_power_details_hours) ]]]\" name : \"[[[ return variables.ulm_card_power_details_name ]]]\" hour24 : \"[[[ return variables.ulm_card_power_details_24hour ]]]\" decimals : 1 show : name : false icon : false legend : false state : true align_state : center height : \"[[[ return variables.ulm_card_power_details_height ]]]\" style : | ha-card { box-shadow: none; border-radius: var(--border-radius); } ha-card .state { font-weight: bold; font-size: 14px; } ha-card .graph__labels > span { background: var(--card-background-color); color: var(--secondary-text-color) }","title":"Template code"},{"location":"usage/custom_cards/custom_card_device_tracker/","text":"Description \u00b6 The custom_card_device_tracker displays presence state of a device according to the provided entity. It allow to display the state of two tracker for this device Variables \u00b6 Variable Default Required Notes entity The device entity or group ulm_custom_card_device_tracker_icon icon to display ulm_custom_card_device_tracker_tracker_1_entity Set the first tracker entity . ulm_custom_card_device_tracker_tracker_1_type Set the type of the first tracker, for the notification icon ulm_custom_card_device_tracker_tracker_2_entity Set the second tracker entity . ulm_custom_card_device_tracker_tracker_2_type Set the type of the second tracker, for the notification icon Usage \u00b6 - type : 'custom:button-card' template : custom_card_device_tracker entity : group.my_smartphone variables : ulm_custom_card_device_tracker_icon : mdi:cellphone ulm_custom_card_device_tracker_tracker_1_entity : device_tracker.my_smartphone_ping ulm_custom_card_device_tracker_tracker_1_type : 'lan' ulm_custom_card_device_tracker_tracker_2_entity : device_tracker.my_smartphone_bluetooth ulm_custom_card_device_tracker_tracker_2_type : 'bluetooth' Template Code custom_card_device_tracker.yaml --- custom_card_device_tracker : template : - \"icon_info_bg\" - \"ulm_language_variables\" tap_action : action : \"more-info\" show_label : true show_name : true label : > [[[ let state = entity.state; return variables[\"ulm_device_state_\" + state] ? variables[\"ulm_device_state_\" + state] : state; ]]] entity : \"[[[ return entity; ]]]\" icon : \"[[[ return variables.ulm_custom_card_device_tracker_icon; ]]]\" styles : icon : - color : > [[[ return entity.state === \"not_home\" ? \"rgba(var(--color-theme),0.9)\": \"rgba(var(--color-green),1)\"; ]]] custom_fields : tracker_1 : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_1_entity) { if (states[variables.ulm_custom_card_device_tracker_tracker_1_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } } ]]] tracker_2 : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"38px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_2_entity) { if (states[variables.ulm_custom_card_device_tracker_tracker_2_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } } ]]] custom_fields : tracker_1 : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_1_entity) { let state = states[variables.ulm_custom_card_device_tracker_tracker_1_entity].state; let icon = state === 'home' ? 'mdi:home-variant' : 'mdi:home-minus'; let type = variables.ulm_custom_card_device_tracker_tracker_1_type if (type == 'bluetooth') { icon = state === 'home' ? 'mdi:bluetooth': 'mdi:bluetooth-off'; } else if (type == 'lan') { icon = state === 'home' ? 'mdi:lan-connect' : 'mdi:lan-disconnect'; } return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] tracker_2 : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_2_entity) { let state = states[variables.ulm_custom_card_device_tracker_tracker_2_entity].state; let icon = state === 'home' ? 'mdi:home-variant' : 'mdi:home-minus'; let type = variables.ulm_custom_card_device_tracker_tracker_2_type if (type == 'bluetooth') { icon = state === 'home' ? 'mdi:bluetooth': 'mdi:bluetooth-off'; } else if (type == 'lan') { icon = state === 'home' ? 'mdi:lan-connect' : 'mdi:lan-disconnect'; } return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]]","title":"Device Tracker Custom-card"},{"location":"usage/custom_cards/custom_card_device_tracker/#description","text":"The custom_card_device_tracker displays presence state of a device according to the provided entity. It allow to display the state of two tracker for this device","title":"Description"},{"location":"usage/custom_cards/custom_card_device_tracker/#variables","text":"Variable Default Required Notes entity The device entity or group ulm_custom_card_device_tracker_icon icon to display ulm_custom_card_device_tracker_tracker_1_entity Set the first tracker entity . ulm_custom_card_device_tracker_tracker_1_type Set the type of the first tracker, for the notification icon ulm_custom_card_device_tracker_tracker_2_entity Set the second tracker entity . ulm_custom_card_device_tracker_tracker_2_type Set the type of the second tracker, for the notification icon","title":"Variables"},{"location":"usage/custom_cards/custom_card_device_tracker/#usage","text":"- type : 'custom:button-card' template : custom_card_device_tracker entity : group.my_smartphone variables : ulm_custom_card_device_tracker_icon : mdi:cellphone ulm_custom_card_device_tracker_tracker_1_entity : device_tracker.my_smartphone_ping ulm_custom_card_device_tracker_tracker_1_type : 'lan' ulm_custom_card_device_tracker_tracker_2_entity : device_tracker.my_smartphone_bluetooth ulm_custom_card_device_tracker_tracker_2_type : 'bluetooth' Template Code custom_card_device_tracker.yaml --- custom_card_device_tracker : template : - \"icon_info_bg\" - \"ulm_language_variables\" tap_action : action : \"more-info\" show_label : true show_name : true label : > [[[ let state = entity.state; return variables[\"ulm_device_state_\" + state] ? variables[\"ulm_device_state_\" + state] : state; ]]] entity : \"[[[ return entity; ]]]\" icon : \"[[[ return variables.ulm_custom_card_device_tracker_icon; ]]]\" styles : icon : - color : > [[[ return entity.state === \"not_home\" ? \"rgba(var(--color-theme),0.9)\": \"rgba(var(--color-green),1)\"; ]]] custom_fields : tracker_1 : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_1_entity) { if (states[variables.ulm_custom_card_device_tracker_tracker_1_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } } ]]] tracker_2 : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"38px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_2_entity) { if (states[variables.ulm_custom_card_device_tracker_tracker_2_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } } ]]] custom_fields : tracker_1 : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_1_entity) { let state = states[variables.ulm_custom_card_device_tracker_tracker_1_entity].state; let icon = state === 'home' ? 'mdi:home-variant' : 'mdi:home-minus'; let type = variables.ulm_custom_card_device_tracker_tracker_1_type if (type == 'bluetooth') { icon = state === 'home' ? 'mdi:bluetooth': 'mdi:bluetooth-off'; } else if (type == 'lan') { icon = state === 'home' ? 'mdi:lan-connect' : 'mdi:lan-disconnect'; } return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] tracker_2 : > [[[ if (variables.ulm_custom_card_device_tracker_tracker_2_entity) { let state = states[variables.ulm_custom_card_device_tracker_tracker_2_entity].state; let icon = state === 'home' ? 'mdi:home-variant' : 'mdi:home-minus'; let type = variables.ulm_custom_card_device_tracker_tracker_2_type if (type == 'bluetooth') { icon = state === 'home' ? 'mdi:bluetooth': 'mdi:bluetooth-off'; } else if (type == 'lan') { icon = state === 'home' ? 'mdi:lan-connect' : 'mdi:lan-disconnect'; } return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]]","title":"Usage"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/","text":"Custom-card \"Elapsed Time\" \u00b6 This is a custom-card that works with a input_datetime input. Template checks the has_date and has_time attributes and creates a label in x days x hours x minutes ago format. x days only included if has_date is true (datetime object) x hours only included if has_time is true (datetime and time objects) x minutes only included if has_time is true and has_date is false (time object) Credits \u00b6 Author: eraycetinay - 2022 Version: 0.0.1 Changelog \u00b6 0.0.1 Initial release Usage \u00b6 - type : \"custom:button-card\" template : \"custom_card_eraycetinay_elapsed_time\" entity : input_datetime.cat_litter name : \"Cat Litter\" Template code \u00b6 --- custom_card_eraycetinay_elapsed_time : template : - \"ulm_custom_card_eraycetinay_elapsed_time_language_variables\" - \"icon_info_bg\" show_label : true show_name : true triggers_update : - \"[[[ return entity.entity_id ]]]\" label : | [[[ let endDate = new Date(); let today = new Date(); if(entity.attributes.has_date) { today = new Date(entity.state.replace(\" \", \"T\")); } else { today = new Date().setHours(entity.attributes.hour,entity.attributes.minute,entity.attributes.second); } const days = parseInt((endDate - today) / (1000 * 60 * 60 * 24)); const hours = parseInt(Math.abs(endDate - today) / (1000 * 60 * 60) % 24); const minutes = parseInt(Math.abs(endDate - today) / (1000 * 60) % 60); let text = ''; if(entity.attributes.has_date) { text += days > 0 ? days + ' ' + (days > 1 ? variables.custom_card_eraycetinay_elapsed_time_days : variables.custom_card_eraycetinay_elapsed_time_day) +' ' : ''; } if(entity.attributes.has_time) { text += hours > 0 ? hours + ' ' + (hours > 1 ? variables.custom_card_eraycetinay_elapsed_time_hours : variables.custom_card_eraycetinay_elapsed_time_hour) +' ' : ''; } if(entity.attributes.has_time && !entity.attributes.has_date) { text += minutes > 0 ? minutes + ' ' + (minutes > 1 ? variables.custom_card_eraycetinay_elapsed_time_minutes : variables.custom_card_eraycetinay_elapsed_time_minute) +' ' : ''; } text = text.length ? text += variables.custom_card_eraycetinay_elapsed_time_ago : variables.custom_card_eraycetinay_elapsed_time_justnow; return text; ]]]","title":"Elapsed Time Custom-card"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#custom-card-elapsed-time","text":"This is a custom-card that works with a input_datetime input. Template checks the has_date and has_time attributes and creates a label in x days x hours x minutes ago format. x days only included if has_date is true (datetime object) x hours only included if has_time is true (datetime and time objects) x minutes only included if has_time is true and has_date is false (time object)","title":"Custom-card \"Elapsed Time\""},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#credits","text":"Author: eraycetinay - 2022 Version: 0.0.1","title":"Credits"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#changelog","text":"0.0.1 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#usage","text":"- type : \"custom:button-card\" template : \"custom_card_eraycetinay_elapsed_time\" entity : input_datetime.cat_litter name : \"Cat Litter\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#template-code","text":"--- custom_card_eraycetinay_elapsed_time : template : - \"ulm_custom_card_eraycetinay_elapsed_time_language_variables\" - \"icon_info_bg\" show_label : true show_name : true triggers_update : - \"[[[ return entity.entity_id ]]]\" label : | [[[ let endDate = new Date(); let today = new Date(); if(entity.attributes.has_date) { today = new Date(entity.state.replace(\" \", \"T\")); } else { today = new Date().setHours(entity.attributes.hour,entity.attributes.minute,entity.attributes.second); } const days = parseInt((endDate - today) / (1000 * 60 * 60 * 24)); const hours = parseInt(Math.abs(endDate - today) / (1000 * 60 * 60) % 24); const minutes = parseInt(Math.abs(endDate - today) / (1000 * 60) % 60); let text = ''; if(entity.attributes.has_date) { text += days > 0 ? days + ' ' + (days > 1 ? variables.custom_card_eraycetinay_elapsed_time_days : variables.custom_card_eraycetinay_elapsed_time_day) +' ' : ''; } if(entity.attributes.has_time) { text += hours > 0 ? hours + ' ' + (hours > 1 ? variables.custom_card_eraycetinay_elapsed_time_hours : variables.custom_card_eraycetinay_elapsed_time_hour) +' ' : ''; } if(entity.attributes.has_time && !entity.attributes.has_date) { text += minutes > 0 ? minutes + ' ' + (minutes > 1 ? variables.custom_card_eraycetinay_elapsed_time_minutes : variables.custom_card_eraycetinay_elapsed_time_minute) +' ' : ''; } text = text.length ? text += variables.custom_card_eraycetinay_elapsed_time_ago : variables.custom_card_eraycetinay_elapsed_time_justnow; return text; ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/","text":"Custom-card \"Lock\" \u00b6 This is a custom-card that works in switch logic with a lock entity. Card structure uses lock , unlock (optional open ) actions and lock , unlock , locking , unlocking , jammed states. Credits \u00b6 Author: eraycetinay - 2022 Version: 0.0.1 Changelog \u00b6 0.0.2 Added option to only use lock.open 0.0.1 Initial release Usage \u00b6 - type : \"custom:button-card\" entity : lock.door_lock template : \"custom_card_eraycetinay_lock\" name : \"Door Lock\" variables : ulm_custom_card_eraycetinay_lock_tap_control : true ulm_custom_card_eraycetinay_lock_open : true Variables \u00b6 Variable Example Required Explanation ulm_custom_card_eraycetinay_lock_tap_control true no Lock/Unlock on tap action ulm_custom_card_eraycetinay_lock_open true no Only use the card to open the door (always sends lock.open on tap) Template code \u00b6 --- custom_card_eraycetinay_lock : template : - \"ulm_custom_card_eraycetinay_lock_language_variables\" - \"icon_info_bg\" - \"ulm_language_variables\" tap_action : action : | [[[ if(variables.ulm_custom_card_eraycetinay_lock_tap_control == true){ return \"call-service\"; } else { return \"more-info\"; } ]]] # only related with call-service action service : | [[[ if(variables.ulm_custom_card_eraycetinay_lock_tap_control == true){ if(variables.ulm_custom_card_eraycetinay_lock_open == true){ return \"lock.open\" } else { if (entity.state == \"locked\"){ return \"lock.unlock\" } } else if (entity.state == \"unlocked\"){ return \"lock.lock\" } } } else { return; } ]]] # only related with call-service action service_data : entity_id : | [[[ return entity.entity_id ]]] show_label : true show_name : true triggers_update : - \"[[[ return entity.entity_id ]]]\" label : | [[[ if (entity.state != \"unavailable\"){ if (entity.state == \"locked\"){ return variables.custom_card_eraycetinay_lock_locked; } else if (entity.state == \"unlocked\"){ return variables.custom_card_eraycetinay_lock_unlocked; } else if (entity.state == \"open\"){ return variables.ulm_open; } else if (entity.state == \"unlocking\"){ return variables.custom_card_eraycetinay_lock_unlocking; } else if (entity.state == \"locking\"){ return variables.custom_card_eraycetinay_lock_locking; } else if (entity.state == \"jammed\"){ return variables.custom_card_eraycetinay_lock_jammed; } else { return entity.state; } } else { return custom_card_eraycetinay_lock_unavailable; } ]]] state : - operator : \"template\" value : | [[[ return entity.state == \"unlocked\"; ]]] styles : icon : - color : \"[[[ return `rgba(var(--color-yellow), 1)`; ]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-yellow), 0.2)`; ]]]\" - operator : \"template\" value : | [[[ return entity.state == \"locked\"; ]]] styles : icon : - color : \"[[[ return `rgba(var(--color-green), 1)`; ]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-green), 0.2)`; ]]]\" styles : icon : - color : \"rgba(var(--color-theme),0.2)\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\"","title":"Lock Card Custom-card"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#custom-card-lock","text":"This is a custom-card that works in switch logic with a lock entity. Card structure uses lock , unlock (optional open ) actions and lock , unlock , locking , unlocking , jammed states.","title":"Custom-card \"Lock\""},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#credits","text":"Author: eraycetinay - 2022 Version: 0.0.1","title":"Credits"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#changelog","text":"0.0.2 Added option to only use lock.open 0.0.1 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#usage","text":"- type : \"custom:button-card\" entity : lock.door_lock template : \"custom_card_eraycetinay_lock\" name : \"Door Lock\" variables : ulm_custom_card_eraycetinay_lock_tap_control : true ulm_custom_card_eraycetinay_lock_open : true","title":"Usage"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#variables","text":"Variable Example Required Explanation ulm_custom_card_eraycetinay_lock_tap_control true no Lock/Unlock on tap action ulm_custom_card_eraycetinay_lock_open true no Only use the card to open the door (always sends lock.open on tap)","title":"Variables"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#template-code","text":"--- custom_card_eraycetinay_lock : template : - \"ulm_custom_card_eraycetinay_lock_language_variables\" - \"icon_info_bg\" - \"ulm_language_variables\" tap_action : action : | [[[ if(variables.ulm_custom_card_eraycetinay_lock_tap_control == true){ return \"call-service\"; } else { return \"more-info\"; } ]]] # only related with call-service action service : | [[[ if(variables.ulm_custom_card_eraycetinay_lock_tap_control == true){ if(variables.ulm_custom_card_eraycetinay_lock_open == true){ return \"lock.open\" } else { if (entity.state == \"locked\"){ return \"lock.unlock\" } } else if (entity.state == \"unlocked\"){ return \"lock.lock\" } } } else { return; } ]]] # only related with call-service action service_data : entity_id : | [[[ return entity.entity_id ]]] show_label : true show_name : true triggers_update : - \"[[[ return entity.entity_id ]]]\" label : | [[[ if (entity.state != \"unavailable\"){ if (entity.state == \"locked\"){ return variables.custom_card_eraycetinay_lock_locked; } else if (entity.state == \"unlocked\"){ return variables.custom_card_eraycetinay_lock_unlocked; } else if (entity.state == \"open\"){ return variables.ulm_open; } else if (entity.state == \"unlocking\"){ return variables.custom_card_eraycetinay_lock_unlocking; } else if (entity.state == \"locking\"){ return variables.custom_card_eraycetinay_lock_locking; } else if (entity.state == \"jammed\"){ return variables.custom_card_eraycetinay_lock_jammed; } else { return entity.state; } } else { return custom_card_eraycetinay_lock_unavailable; } ]]] state : - operator : \"template\" value : | [[[ return entity.state == \"unlocked\"; ]]] styles : icon : - color : \"[[[ return `rgba(var(--color-yellow), 1)`; ]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-yellow), 0.2)`; ]]]\" - operator : \"template\" value : | [[[ return entity.state == \"locked\"; ]]] styles : icon : - color : \"[[[ return `rgba(var(--color-green), 1)`; ]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-green), 0.2)`; ]]]\" styles : icon : - color : \"rgba(var(--color-theme),0.2)\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_esh_room/","text":"Custom Card \"Room\" \u00b6 Credits \u00b6 Author: Everything Smart Home - 2022 Full credit to user bms on the forum , they created it in full, I just put it into a PR as the basis beasthouse and basbruss on the EverythingSmartHome discord channel for emoji/humidity customization Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Description \u00b6 This is an alternative room card to the standard one that is more rectangular than square. Variables \u00b6 Variable Default Required Notes entity Yes The light entity to control Name Yes Name of the room to display icon Yes The icon to show tap_action Yes The action to perform when tapping label Yes The label to display information, this can be a template that returns a temperature or static text Usage \u00b6 - type : 'custom:button-card' template : - card_esh_room - yellow_on name : Bathroom entity : light.bathroom_lights icon : mdi:bathtub tap_action : action : navigate navigation_path : 'bathroom' label : '[[[ return states[\"sensor.room_temperature\"].state + \"\u00b0C\" ]]]' Customizations \u00b6 To add both temperature and humidity (as shown below) to the card, replace the label section with this code: label : > [[[ return \"\ud83c\udf21\ufe0f \" + states['sensor.temperature'].state + \" \u00b0C\" + \" \ud83d\udca7 \" + states['sensor.humidity'].state + \" %\" ]]] You can also replace \ud83c\udf21\ufe0f and \ud83d\udca7 with any desired Emoji, and sensor.room_temperature/sensor.room_humidity to match any of your HA entities you would like to be displayed. Ensure that the correct units of measurement are also updated (or removed) to match your custom entities. In this example they are \u00b0C and %. Template code \u00b6 --- card_esh_room : tap_action : action : \"more-info\" color : \"var(--google-grey-500)\" show_icon : true show_name : true show_label : true size : \"20px\" label : >- [[[ if (entity.state !=\"unavailable\"){ if (entity.state ==\"off\"){ var bri = Math.round(entity.attributes.brightness / 2.55); return \"Off\"; }else{ var bri = Math.round(entity.attributes.brightness / 2.55); return (bri ? bri : \"0\") + \"%\"; } }else{ return \"Unavailable\"; } ]]] styles : card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" grid : - grid-template-areas : \"'i toggle' 'n n' 'l l'\" - grid-template-columns : \"1fr 1fr\" - grid-template-rows : \"min-content\" icon : - color : \"rgba(var(--color-theme),0.2)\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - margin-top : \"12px\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" custom_fields : toggle : card : entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return name ]]]\" state : - value : \"on\" icon : \"mdi:lightbulb\" styles : icon : - color : \"rgba(var(--color-yellow),1)\" img_cell : - background-color : \"rgba(var(--color-yellow), 0.2)\" - value : \"off\" icon : \"mdi:lightbulb-off\" tap_action : action : \"toggle\" type : \"custom:button-card\" template : \"widget_icon\"","title":"Custom Card Room"},{"location":"usage/custom_cards/custom_card_esh_room/#custom-card-room","text":"","title":"Custom Card \"Room\""},{"location":"usage/custom_cards/custom_card_esh_room/#credits","text":"Author: Everything Smart Home - 2022 Full credit to user bms on the forum , they created it in full, I just put it into a PR as the basis beasthouse and basbruss on the EverythingSmartHome discord channel for emoji/humidity customization Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_esh_room/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_esh_room/#description","text":"This is an alternative room card to the standard one that is more rectangular than square.","title":"Description"},{"location":"usage/custom_cards/custom_card_esh_room/#variables","text":"Variable Default Required Notes entity Yes The light entity to control Name Yes Name of the room to display icon Yes The icon to show tap_action Yes The action to perform when tapping label Yes The label to display information, this can be a template that returns a temperature or static text","title":"Variables"},{"location":"usage/custom_cards/custom_card_esh_room/#usage","text":"- type : 'custom:button-card' template : - card_esh_room - yellow_on name : Bathroom entity : light.bathroom_lights icon : mdi:bathtub tap_action : action : navigate navigation_path : 'bathroom' label : '[[[ return states[\"sensor.room_temperature\"].state + \"\u00b0C\" ]]]'","title":"Usage"},{"location":"usage/custom_cards/custom_card_esh_room/#customizations","text":"To add both temperature and humidity (as shown below) to the card, replace the label section with this code: label : > [[[ return \"\ud83c\udf21\ufe0f \" + states['sensor.temperature'].state + \" \u00b0C\" + \" \ud83d\udca7 \" + states['sensor.humidity'].state + \" %\" ]]] You can also replace \ud83c\udf21\ufe0f and \ud83d\udca7 with any desired Emoji, and sensor.room_temperature/sensor.room_humidity to match any of your HA entities you would like to be displayed. Ensure that the correct units of measurement are also updated (or removed) to match your custom entities. In this example they are \u00b0C and %.","title":"Customizations"},{"location":"usage/custom_cards/custom_card_esh_room/#template-code","text":"--- card_esh_room : tap_action : action : \"more-info\" color : \"var(--google-grey-500)\" show_icon : true show_name : true show_label : true size : \"20px\" label : >- [[[ if (entity.state !=\"unavailable\"){ if (entity.state ==\"off\"){ var bri = Math.round(entity.attributes.brightness / 2.55); return \"Off\"; }else{ var bri = Math.round(entity.attributes.brightness / 2.55); return (bri ? bri : \"0\") + \"%\"; } }else{ return \"Unavailable\"; } ]]] styles : card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" grid : - grid-template-areas : \"'i toggle' 'n n' 'l l'\" - grid-template-columns : \"1fr 1fr\" - grid-template-rows : \"min-content\" icon : - color : \"rgba(var(--color-theme),0.2)\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - margin-top : \"12px\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" custom_fields : toggle : card : entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return name ]]]\" state : - value : \"on\" icon : \"mdi:lightbulb\" styles : icon : - color : \"rgba(var(--color-yellow),1)\" img_cell : - background-color : \"rgba(var(--color-yellow), 0.2)\" - value : \"off\" icon : \"mdi:lightbulb-off\" tap_action : action : \"toggle\" type : \"custom:button-card\" template : \"widget_icon\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_esh_welcome/","text":"Custom Card \"Welcome Navigation\" \u00b6 Credits \u00b6 Author: Everything Smart Home - 2022 Credits to the welcome scenes card as the basis Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Description \u00b6 This is a welcome card based on the welcome scenes card but replaces the scenes for page navigation instead. Variables \u00b6 Variable Default Required Notes ulm_card_esh_welcome_collapse No Enables the collapse function. requires an input_boolean to track the state ulm_weather Yes This is your weather provider. Example: weather.your_provider entity_ Yes Support almost all types of entities Scenes do always show as off icon_ Yes The icon to show name_ Yes The name to show color_ Yes Color of the icon Can choose between: blue , red , green , yellow , pink , purple nav_ Yes The page/view to navigate to Collapse \u00b6 Note This feature is fully optional. It requires some more manual configuration! You need to create a input_boolean in HA to track the state. See Docs . Furthermore, you need to add the input_boolean to the variable ulm_card_esh_welcome_collapse and to either the entity or triggers_update to make sure it directly refreshes the state. Warning Do not use triggers_update: \"all\" ! This will lead to unwanted behavior with the random colors generator. Usage \u00b6 - type : \"custom:button-card\" template : \"card_esh_welcome\" triggers_update : \"input_boolean.welcome_toggle\" variables : ulm_card_esh_welcome_collapse : input_boolean.welcome_toggle ulm_weather : \"weather.your_weather\" entity_1 : nav : \"house\" icon : \"mdi:home\" name : \"House\" color : \"blue\" entity_2 : nav : \"lights\" icon : \"mdi:lightbulb\" name : \"Lights\" color : \"yellow\" entity_3 : nav : \"security\" icon : \"mdi:shield\" name : Secure color : \"green\" entity_4 : nav : \"network\" icon : \"mdi:nas\" name : Lab color : \"purple\" entity_5 : nav : \"network\" icon : \"mdi:flask\" name : Lab color : \"red\" Template code \u00b6 --- card_esh_welcome : variables : ulm_weather : \"[[[ return variables.ulm_weather]]]\" entity_1 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_4 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_5 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] template : - \"ulm_language_variables\" show_icon : false show_name : false show_label : true styles : grid : - grid-template-areas : > [[[ if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){ return \"\\'item1\\' \\'item2\\' \"; } else { return \"\\'item1\\' \\'item2\\' \\'item3\\'\"; } ]]] - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"0px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"10px\" custom_fields : item3 : - display : > [[[ if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] item4 : - display : > [[[ if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_esh_welcome_topbar\" variables : ulm_card_esh_welcome_collapse : \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\" ulm_weather : \"[[[ return variables.ulm_weather]]]\" styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" - margin-left : \"relative\" item2 : card : type : \"custom:button-card\" show_icon : false show_label : false show_name : true show_entity_picture : false name : | [[[ var today = new Date(); var time = today.getHours() let welcome = ''; if (time >= '18'){ welcome = variables.ulm_evening; } else if (time >= '12'){ welcome = variables.ulm_afternoon; } else if (time >= '5'){ welcome = variables.ulm_morning; } else { welcome = variables.ulm_hello; } return welcome + ', ' + ' <br>' + user.name + '!'; ]]] styles : name : - align-self : \"start\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"24px\" - margin-left : \"16px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" - text-align : \"start\" card : - box-shadow : \"none\" - padding-bottom : \"8px\" item3 : card : type : \"custom:button-card\" template : > [[[ if(variables.entity_1.nav && variables.entity_2.nav && variables.entity_3.nav && variables.entity_4.nav && variables.entity_5.nav){ return 'card_esh_welcome_nav' } ]]] styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" variables : entity_1 : \"[[[ return variables.entity_1]]]\" entity_2 : \"[[[ return variables.entity_2]]]\" entity_3 : \"[[[ return variables.entity_3]]]\" entity_4 : \"[[[ return variables.entity_4]]]\" entity_5 : \"[[[ return variables.entity_5]]]\" card_esh_welcome_title : tap_action : action : \"none\" show_icon : false show_label : true show_name : true styles : card : - background-color : \"rgba(0,0,0,0)\" - box-shadow : \"none\" - height : \"auto\" - width : \"auto\" - margin-top : \"-10px\" - margin-left : \"16px\" - margin-bottom : \"-15px\" grid : - grid-template-areas : \"'n' 'l'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" name : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"20px\" label : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1rem\" - opacity : \"0.4\" card_esh_welcome_nav : show_icon : false show_name : true show_label : false styles : grid : - grid-template-areas : \"'item1 item2 item3 item4 item5'\" - grid-template-columns : \"1fr 1fr 1fr 1fr 1fr\" - grid-template-rows : \"min-content\" - justify-items : \"center\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - overflow : \"visible\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_1.nav; ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_1.nav; ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" item2 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_2.nav; ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_2.nav; ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" item3 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_3.nav; ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_3.nav; ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" item4 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" entity : \"[[[ return variables.entity_4.entity_id ]]]\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_4.nav; ]]]\" icon : \"[[[ return variables.entity_4.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_4.nav; ]]]\" name : \"[[[ return variables.entity_4.name ]]]\" item5 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_5.nav; ]]]\" icon : \"[[[ return variables.entity_5.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_5.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_5.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_1.nav; ]]]\" name : \"[[[ return variables.entity_5.name ]]]\" card_esh_welcome_pill_nav : show_icon : false show_label : false show_name : false state : - value : \"on\" styles : card : - overflow : \"visible\" - box-shadow : \"none\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"min-content\" - grid-template-rows : \"1fr 1fr\" - row-gap : \"12px\" - justify-items : \"center\" - column-gap : \"auto\" card : - border-radius : \"50px\" - place-self : \"center\" - width : \"52px\" - height : \"84px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] color : \"var(--google-grey)\" custom_fields : item1 : card : type : \"custom:button-card\" show_icon : true show_label : false show_name : false styles : grid : - grid-template-areas : \"i\" icon : - color : \"[[[ return `rgba(var(--color-theme), 0.20)`;]]]\" - width : \"20px\" img_cell : - background-color : \"[[[ return `rgba(var(--color-theme), 0.05)`;]]] \" - border-radius : \"50%\" - width : \"42px\" - height : \"42px\" card : - box-shadow : \"none\" - border-radius : \"50px\" - padding : \"5px\" state : - value : \"on\" styles : card : - overflow : \"visible\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item2 : card : type : \"custom:button-card\" show_icon : false show_label : false styles : grid : - grid-template-areas : \"n\" name : - font-weight : \"bold\" - font-size : \"9.5px\" - width : \"33px\" - padding-bottom : \"7px\" card : - box-shadow : \"none\" - padding : \"0px 5px 5px 5px\" - margin-top : \"-5px\" - border-radius : \"50px\" card_esh_welcome_topbar : show_icon : false show_name : true show_label : false styles : grid : - grid-template-areas : \"'item1 item2 item3'\" - grid-template-columns : \"1fr 7fr 1fr\" - grid-template-rows : \"min-content\" - justify-items : \"center\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"chips\" entity : \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\" icon : \"mdi:chevron-up\" show_icon : true styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] state : - value : \"on\" icon : \"mdi:chevron-down\" styles : icon : - color : \"rgb(var(--color-theme))\" tap_action : action : \"call-service\" service : \"input_boolean.toggle\" service_data : entity_id : \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\" item2 : card : type : \"custom:button-card\" template : \"chip_weather_date\" variables : ulm_weather : \"[[[ return variables.ulm_weather]]]\" tap_action : action : \"more-info\" styles : card : - width : \"100px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item3 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"/config/dashboard\" template : \"chip_mdi_icon_only\" variables : ulm_chip_mdi_icon_only_icon : \"mdi:cog-outline\" styles : card : - align-self : \"end\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]]","title":"Custom Card Welcome Navigation"},{"location":"usage/custom_cards/custom_card_esh_welcome/#custom-card-welcome-navigation","text":"","title":"Custom Card \"Welcome Navigation\""},{"location":"usage/custom_cards/custom_card_esh_welcome/#credits","text":"Author: Everything Smart Home - 2022 Credits to the welcome scenes card as the basis Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_esh_welcome/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_esh_welcome/#description","text":"This is a welcome card based on the welcome scenes card but replaces the scenes for page navigation instead.","title":"Description"},{"location":"usage/custom_cards/custom_card_esh_welcome/#variables","text":"Variable Default Required Notes ulm_card_esh_welcome_collapse No Enables the collapse function. requires an input_boolean to track the state ulm_weather Yes This is your weather provider. Example: weather.your_provider entity_ Yes Support almost all types of entities Scenes do always show as off icon_ Yes The icon to show name_ Yes The name to show color_ Yes Color of the icon Can choose between: blue , red , green , yellow , pink , purple nav_ Yes The page/view to navigate to","title":"Variables"},{"location":"usage/custom_cards/custom_card_esh_welcome/#collapse","text":"Note This feature is fully optional. It requires some more manual configuration! You need to create a input_boolean in HA to track the state. See Docs . Furthermore, you need to add the input_boolean to the variable ulm_card_esh_welcome_collapse and to either the entity or triggers_update to make sure it directly refreshes the state. Warning Do not use triggers_update: \"all\" ! This will lead to unwanted behavior with the random colors generator.","title":"Collapse"},{"location":"usage/custom_cards/custom_card_esh_welcome/#usage","text":"- type : \"custom:button-card\" template : \"card_esh_welcome\" triggers_update : \"input_boolean.welcome_toggle\" variables : ulm_card_esh_welcome_collapse : input_boolean.welcome_toggle ulm_weather : \"weather.your_weather\" entity_1 : nav : \"house\" icon : \"mdi:home\" name : \"House\" color : \"blue\" entity_2 : nav : \"lights\" icon : \"mdi:lightbulb\" name : \"Lights\" color : \"yellow\" entity_3 : nav : \"security\" icon : \"mdi:shield\" name : Secure color : \"green\" entity_4 : nav : \"network\" icon : \"mdi:nas\" name : Lab color : \"purple\" entity_5 : nav : \"network\" icon : \"mdi:flask\" name : Lab color : \"red\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_esh_welcome/#template-code","text":"--- card_esh_welcome : variables : ulm_weather : \"[[[ return variables.ulm_weather]]]\" entity_1 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_4 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_5 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink']; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] template : - \"ulm_language_variables\" show_icon : false show_name : false show_label : true styles : grid : - grid-template-areas : > [[[ if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){ return \"\\'item1\\' \\'item2\\' \"; } else { return \"\\'item1\\' \\'item2\\' \\'item3\\'\"; } ]]] - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"0px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"10px\" custom_fields : item3 : - display : > [[[ if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] item4 : - display : > [[[ if(variables.ulm_card_esh_welcome_collapse && states[variables.ulm_card_esh_welcome_collapse].state == 'on'){ return \"none\"; } else { return \"block\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_esh_welcome_topbar\" variables : ulm_card_esh_welcome_collapse : \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\" ulm_weather : \"[[[ return variables.ulm_weather]]]\" styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" - margin-left : \"relative\" item2 : card : type : \"custom:button-card\" show_icon : false show_label : false show_name : true show_entity_picture : false name : | [[[ var today = new Date(); var time = today.getHours() let welcome = ''; if (time >= '18'){ welcome = variables.ulm_evening; } else if (time >= '12'){ welcome = variables.ulm_afternoon; } else if (time >= '5'){ welcome = variables.ulm_morning; } else { welcome = variables.ulm_hello; } return welcome + ', ' + ' <br>' + user.name + '!'; ]]] styles : name : - align-self : \"start\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"24px\" - margin-left : \"16px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" - text-align : \"start\" card : - box-shadow : \"none\" - padding-bottom : \"8px\" item3 : card : type : \"custom:button-card\" template : > [[[ if(variables.entity_1.nav && variables.entity_2.nav && variables.entity_3.nav && variables.entity_4.nav && variables.entity_5.nav){ return 'card_esh_welcome_nav' } ]]] styles : card : - border-radius : \"none\" - box-shadow : \"none\" - padding : \"4px\" variables : entity_1 : \"[[[ return variables.entity_1]]]\" entity_2 : \"[[[ return variables.entity_2]]]\" entity_3 : \"[[[ return variables.entity_3]]]\" entity_4 : \"[[[ return variables.entity_4]]]\" entity_5 : \"[[[ return variables.entity_5]]]\" card_esh_welcome_title : tap_action : action : \"none\" show_icon : false show_label : true show_name : true styles : card : - background-color : \"rgba(0,0,0,0)\" - box-shadow : \"none\" - height : \"auto\" - width : \"auto\" - margin-top : \"-10px\" - margin-left : \"16px\" - margin-bottom : \"-15px\" grid : - grid-template-areas : \"'n' 'l'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" name : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"20px\" label : - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"1rem\" - opacity : \"0.4\" card_esh_welcome_nav : show_icon : false show_name : true show_label : false styles : grid : - grid-template-areas : \"'item1 item2 item3 item4 item5'\" - grid-template-columns : \"1fr 1fr 1fr 1fr 1fr\" - grid-template-rows : \"min-content\" - justify-items : \"center\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - overflow : \"visible\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_1.nav; ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_1.nav; ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" item2 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_2.nav; ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_2.nav; ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" item3 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_3.nav; ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_3.nav; ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" item4 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" entity : \"[[[ return variables.entity_4.entity_id ]]]\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_4.nav; ]]]\" icon : \"[[[ return variables.entity_4.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_4.nav; ]]]\" name : \"[[[ return variables.entity_4.name ]]]\" item5 : card : type : \"custom:button-card\" template : \"card_esh_welcome_pill_nav\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_5.nav; ]]]\" icon : \"[[[ return variables.entity_5.icon ]]]\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_5.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_5.color}), 0.20)`;]]]\" item2 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"[[[ return variables.entity_1.nav; ]]]\" name : \"[[[ return variables.entity_5.name ]]]\" card_esh_welcome_pill_nav : show_icon : false show_label : false show_name : false state : - value : \"on\" styles : card : - overflow : \"visible\" - box-shadow : \"none\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"min-content\" - grid-template-rows : \"1fr 1fr\" - row-gap : \"12px\" - justify-items : \"center\" - column-gap : \"auto\" card : - border-radius : \"50px\" - place-self : \"center\" - width : \"52px\" - height : \"84px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] color : \"var(--google-grey)\" custom_fields : item1 : card : type : \"custom:button-card\" show_icon : true show_label : false show_name : false styles : grid : - grid-template-areas : \"i\" icon : - color : \"[[[ return `rgba(var(--color-theme), 0.20)`;]]]\" - width : \"20px\" img_cell : - background-color : \"[[[ return `rgba(var(--color-theme), 0.05)`;]]] \" - border-radius : \"50%\" - width : \"42px\" - height : \"42px\" card : - box-shadow : \"none\" - border-radius : \"50px\" - padding : \"5px\" state : - value : \"on\" styles : card : - overflow : \"visible\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item2 : card : type : \"custom:button-card\" show_icon : false show_label : false styles : grid : - grid-template-areas : \"n\" name : - font-weight : \"bold\" - font-size : \"9.5px\" - width : \"33px\" - padding-bottom : \"7px\" card : - box-shadow : \"none\" - padding : \"0px 5px 5px 5px\" - margin-top : \"-5px\" - border-radius : \"50px\" card_esh_welcome_topbar : show_icon : false show_name : true show_label : false styles : grid : - grid-template-areas : \"'item1 item2 item3'\" - grid-template-columns : \"1fr 7fr 1fr\" - grid-template-rows : \"min-content\" - justify-items : \"center\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"chips\" entity : \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\" icon : \"mdi:chevron-up\" show_icon : true styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] state : - value : \"on\" icon : \"mdi:chevron-down\" styles : icon : - color : \"rgb(var(--color-theme))\" tap_action : action : \"call-service\" service : \"input_boolean.toggle\" service_data : entity_id : \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\" item2 : card : type : \"custom:button-card\" template : \"chip_weather_date\" variables : ulm_weather : \"[[[ return variables.ulm_weather]]]\" tap_action : action : \"more-info\" styles : card : - width : \"100px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] item3 : card : type : \"custom:button-card\" tap_action : action : \"navigate\" navigation_path : \"/config/dashboard\" template : \"chip_mdi_icon_only\" variables : ulm_chip_mdi_icon_only_icon : \"mdi:cog-outline\" styles : card : - align-self : \"end\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_heat_pump/","text":"Custom-card \"Heat Pump\" \u00b6 The custom_card_heat_pump allows you to control your HVAC system and all its modes. This card is inspired by Simple Thermostat Card . Credits \u00b6 Author: Kam - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Images \u00b6 Usage \u00b6 - type : custom:button-card template : custom_card_heat_pump entity : climate.heat_pump Requirements \u00b6 Entity climate with only heat mode Modification \u00b6 If your entity does not have all the available options in the hvac component , modify (delete or comment out) the following part to match your setup. Each button corresponds to a mode of the hvac component . item3 : card : type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:power\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"off\" - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fire\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"cool\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:sync\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat_cool\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:water\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"dry\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"fan_only\" ... Code template \u00b6 --- custom_card_heat_pump : show_name : false show_icon : false template : - \"icon_info_bg\" - \"ulm_language_variables\" - \"custom_card_heat_pump_language_variables\" hold_action : action : \"more-info\" styles : grid : - grid-template-areas : \"'item1' 'item2' 'item3'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" tap_action : action : \"more-info\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.name ]]]\" label : >- [[[ var label = variables.ulm_off ; if (entity.state =='off'){ label = variables.ulm_off ; } else if (entity.state =='dry') { return variables.custom_card_heat_pump_dry; } else if (entity.state =='heat') { return variables.custom_card_heat_pump_heat; } else if (entity.state =='heat_cool') { return variables.custom_card_heat_pump_heat_cool; } else if (entity.state =='cool') { return variables.custom_card_heat_pump_cool; } else if (entity.state =='fan_only') { return variables.custom_card_heat_pump_fan_only; } if(entity.attributes.temperature){ return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + ' (' + entity.attributes.hvac_action + ')'; } return label; ]]] icon : > [[[ var icon = \"mdi:thermostat\"; var state = entity.state; if (state =='dry') { return \"mdi:water\"; } else if (state =='heat') { return \"mdi:fire\"; } else if (state =='cool') { return \"mdi:snowflake\"; } else if (state =='fan_only') { return \"mdi:fan\"; } else if (state =='heat_cool') { return \"mdi:sync\"; } return icon; ]]] state : - operator : \"template\" value : \"[[[return entity.state == 'dry']]]\" styles : icon : - color : \"rgba(var(--color, 255, 165, 0),1)\" img_cell : - background-color : \"rgba(var(--color, 255, 165, 0),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'cool']]]\" styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'heat']]]\" styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'fan_only']]]\" styles : icon : - color : \"rgba(var(--color, 195, 0, 255),1)\" img_cell : - background-color : \"rgba(var(--color, 195, 0, 255),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'heat_cool']]]\" styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green),0.2)\" item2 : card : type : \"custom:button-card\" template : \"list_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-down\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature - entity.attributes.target_temp_step ]]]\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.attributes.temperature + '\u00b0C' ]]]\" styles : card : - box-shadow : \"none\" show_icon : false tap_action : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-up\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature + entity.attributes.target_temp_step ]]]\" item3 : card : type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:power\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"off\" - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fire\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"heat\"){ var color = 'rgba(var(--color-red), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"heat\"){ var bc_color = 'rgba(var(--color-red), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"cool\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"cool\"){ var color = 'rgba(var(--color-blue), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"cool\"){ var bc_color = 'rgba(var(--color-blue), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:sync\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat_cool\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"heat_cool\"){ var color = 'rgba(var(--color-green), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"heat_cool\"){ var bc_color = 'rgba(var(--color-green), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:water\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"dry\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"dry\"){ var color = 'rgba(var(--color, 255, 165, 0), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"dry\"){ var bc_color = 'rgba(var(--color, 255, 165, 0), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"fan_only\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"fan_only\"){ var color = 'rgba(var(--color, 195, 0, 255), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"fan_only\"){ var bc_color = 'rgba(var(--color, 195, 0, 255), 0.2)'; } return bc_color; ]]] widget_icon_juve : tap_action : action : \"toggle\" show_icon : true show_name : false show_state : true styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" icon : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\"","title":"Heat Pump Custom-card"},{"location":"usage/custom_cards/custom_card_heat_pump/#custom-card-heat-pump","text":"The custom_card_heat_pump allows you to control your HVAC system and all its modes. This card is inspired by Simple Thermostat Card .","title":"Custom-card \"Heat Pump\""},{"location":"usage/custom_cards/custom_card_heat_pump/#credits","text":"Author: Kam - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_heat_pump/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_heat_pump/#images","text":"","title":"Images"},{"location":"usage/custom_cards/custom_card_heat_pump/#usage","text":"- type : custom:button-card template : custom_card_heat_pump entity : climate.heat_pump","title":"Usage"},{"location":"usage/custom_cards/custom_card_heat_pump/#requirements","text":"Entity climate with only heat mode","title":"Requirements"},{"location":"usage/custom_cards/custom_card_heat_pump/#modification","text":"If your entity does not have all the available options in the hvac component , modify (delete or comment out) the following part to match your setup. Each button corresponds to a mode of the hvac component . item3 : card : type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:power\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"off\" - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fire\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"cool\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:sync\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat_cool\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:water\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"dry\" ... - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"fan_only\" ...","title":"Modification"},{"location":"usage/custom_cards/custom_card_heat_pump/#code-template","text":"--- custom_card_heat_pump : show_name : false show_icon : false template : - \"icon_info_bg\" - \"ulm_language_variables\" - \"custom_card_heat_pump_language_variables\" hold_action : action : \"more-info\" styles : grid : - grid-template-areas : \"'item1' 'item2' 'item3'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" tap_action : action : \"more-info\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.name ]]]\" label : >- [[[ var label = variables.ulm_off ; if (entity.state =='off'){ label = variables.ulm_off ; } else if (entity.state =='dry') { return variables.custom_card_heat_pump_dry; } else if (entity.state =='heat') { return variables.custom_card_heat_pump_heat; } else if (entity.state =='heat_cool') { return variables.custom_card_heat_pump_heat_cool; } else if (entity.state =='cool') { return variables.custom_card_heat_pump_cool; } else if (entity.state =='fan_only') { return variables.custom_card_heat_pump_fan_only; } if(entity.attributes.temperature){ return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + ' (' + entity.attributes.hvac_action + ')'; } return label; ]]] icon : > [[[ var icon = \"mdi:thermostat\"; var state = entity.state; if (state =='dry') { return \"mdi:water\"; } else if (state =='heat') { return \"mdi:fire\"; } else if (state =='cool') { return \"mdi:snowflake\"; } else if (state =='fan_only') { return \"mdi:fan\"; } else if (state =='heat_cool') { return \"mdi:sync\"; } return icon; ]]] state : - operator : \"template\" value : \"[[[return entity.state == 'dry']]]\" styles : icon : - color : \"rgba(var(--color, 255, 165, 0),1)\" img_cell : - background-color : \"rgba(var(--color, 255, 165, 0),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'cool']]]\" styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'heat']]]\" styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'fan_only']]]\" styles : icon : - color : \"rgba(var(--color, 195, 0, 255),1)\" img_cell : - background-color : \"rgba(var(--color, 195, 0, 255),0.2)\" - operator : \"template\" value : \"[[[return entity.state == 'heat_cool']]]\" styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green),0.2)\" item2 : card : type : \"custom:button-card\" template : \"list_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-down\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature - entity.attributes.target_temp_step ]]]\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.attributes.temperature + '\u00b0C' ]]]\" styles : card : - box-shadow : \"none\" show_icon : false tap_action : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-up\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature + entity.attributes.target_temp_step ]]]\" item3 : card : type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:power\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"off\" - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fire\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"heat\"){ var color = 'rgba(var(--color-red), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"heat\"){ var bc_color = 'rgba(var(--color-red), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:snowflake\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"cool\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"cool\"){ var color = 'rgba(var(--color-blue), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"cool\"){ var bc_color = 'rgba(var(--color-blue), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:sync\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"heat_cool\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"heat_cool\"){ var color = 'rgba(var(--color-green), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"heat_cool\"){ var bc_color = 'rgba(var(--color-green), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:water\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"dry\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"dry\"){ var color = 'rgba(var(--color, 255, 165, 0), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"dry\"){ var bc_color = 'rgba(var(--color, 255, 165, 0), 0.2)'; } return bc_color; ]]] - type : \"custom:button-card\" template : \"widget_icon_juve\" icon : \"mdi:fan\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" hvac_mode : \"fan_only\" styles : icon : - color : | [[[ var color = 'rgba(var(--color-theme), 1)'; if (entity.state == \"fan_only\"){ var color = 'rgba(var(--color, 195, 0, 255), 1)'; } return color; ]]] card : - background-color : | [[[ var bc_color = 'rgba(var(--color-theme),0.05)'; if (entity.state == \"fan_only\"){ var bc_color = 'rgba(var(--color, 195, 0, 255), 0.2)'; } return bc_color; ]]] widget_icon_juve : tap_action : action : \"toggle\" show_icon : true show_name : false show_state : true styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" icon : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\"","title":"Code template"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/","text":"Custom-card \"Homeassistant updates\" \u00b6 Credits \u00b6 Author: AndyVRD - 2021 Special thanks to basbruss Version: 1.0.2 Changelog \u00b6 1.0.0 Initial release 1.0.1 Added support for ulm_language variables 1.0.2 Updated capitalization of OS 1.0.3 Updated sensors and binary_sensors + Removed group.updaters Usage \u00b6 - type : 'custom:button-card' template : card_homeassistant_updates variables : ulm_card_homeassistant_entity : \"binary_sensor.updates\" ulm_card_homeassistant_core : \"sensor.core_updates\" ulm_card_homeassistant_supervisor : \"sensor.supervisor_updates\" ulm_card_homeassistant_os : \"sensor.os_updates\" Requirements \u00b6 !! Attention !! This card needs additional template sensors and binary_sensor updaters to work, all detail can be found in this readme. Variables \u00b6 Variable Example Required Explanation core_ sensor.core_updates yes sensor core installed/latest version os_ sensor.os_updates no sensor os installed/latest version supervisor_ sensor.supervisor_updates no sensor supervisor installed/latest version Template code \u00b6 --- card_homeassistant_updates : triggers_update : \"all\" template : - \"ulm_language_variables\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : triggers_update : \"all\" type : \"custom:button-card\" template : - \"icon_info_updates\" icon : \"mdi:home-assistant\" tap_action : action : \"none\" entity : \"[[[ return variables.ulm_card_homeassistant_entity ]]]\" name : > [[[ if(states[variables.ulm_card_homeassistant_core].state ==='True' || states[variables.ulm_card_homeassistant_supervisor].state ==='True' || states[variables.ulm_card_homeassistant_os].state ==='True'){ return variables.ulm_updates_available; } else { return variables.ulm_no_updates_available; } ]]] label : > [[[ if(variables.ulm_card_homeassistant_core){ if(states[variables.ulm_card_homeassistant_core].state ==='True'){ var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version + ' -> ' + states[variables.ulm_card_homeassistant_core].attributes.latest_version; } else { var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version; } } if(variables.ulm_card_homeassistant_supervisor){ if(states[variables.ulm_card_homeassistant_supervisor].state ==='True'){ var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version + ' -> ' + states[variables.ulm_card_homeassistant_supervisor].attributes.latest_version; } else { var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version; } } if(variables.ulm_card_homeassistant_os){ if(states[variables.ulm_card_homeassistant_os].state ==='True'){ var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version + ' -> ' + states[variables.ulm_card_homeassistant_os].attributes.latest_version; } else { var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version; } } if(variables.ulm_card_homeassistant_core && variables.ulm_card_homeassistant_supervisor && variables.ulm_card_homeassistant_os){ return supervisor + '<br>' + core + '<br>' + os; } else if(variables.ulm_card_homeassistant_core && variables.ulm_card_homeassistant_supervisor){ return supervisor + '<br>' + core; } else if(variables.ulm_card_homeassistant_core){ return core; } ]]] styles : icon : - color : \"rgba(var(--color-theme),0.9)\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:file-document\" tap_action : action : \"url\" url_path : \"https://www.home-assistant.io/latest-release-notes/\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:cog\" tap_action : action : \"navigate\" navigation_path : \"/developer-tools/yaml\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:update\" tap_action : action : \"navigate\" navigation_path : \"/config/dashboard\" icon_info_updates : color : \"var(--google-grey)\" show_icon : true show_label : true show_name : true state : - value : \"on\" styles : custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"28px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-blue),1)\"; ]]] icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"16px\" - text-align : \"start\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"16px\" - margin-bottom : \"4px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"21px 8px 8px 21px\" - box-shadow : \"none\" - padding : \"0px\" custom_fields : notification : > [[[ if ( entity.state ==\"unavailable\" || entity.state ==\"on\" ){ return `<ha-icon icon=\"mdi:party-popper\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>`; } ]]] size : \"20px\" Template sensors code \u00b6 sensor : - platform : command_line name : core_updates command : 'curl http://supervisor/core/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available} '' ' value_template : '{{ value_json.update_available }}' scan_interval : 600 json_attributes : - update_available - latest_version - installed_version - platform : command_line name : supervisor_updates command : 'curl http://supervisor/supervisor/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available} '' ' value_template : '{{ value_json.update_available }}' scan_interval : 600 json_attributes : - update_available - latest_version - installed_version - platform : command_line name : os_updates command : 'curl http://supervisor/os/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available} '' ' value_template : '{{ value_json.update_available }}' scan_interval : 600 json_attributes : - update_available - latest_version - installed_version - platform : command_line name : addons_updates command : 'curl http://supervisor/addons -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"addons\":[.data.addons[] | select(.update_available)]} '' ' value_template : '{{ value_json.addons | length }}' scan_interval : 600 unit_of_measurement : pending update(s) json_attributes : - addons binary_sensor : - platform : template sensors : updater_core : friendly_name : Core device_class : problem value_template : \"{{ states('sensor.core_updates') }}\" attribute_templates : installed_version : \"{{ state_attr('sensor.core_updates', 'installed_version') }}\" latest_version : \"{{ state_attr('sensor.core_updates', 'latest_version') }}\" updater_supervisor : friendly_name : Supervisor device_class : problem value_template : \"{{ states('sensor.supervisor_updates') }}\" attribute_templates : installed_version : \"{{ state_attr('sensor.supervisor_updates', 'installed_version') }}\" latest_version : \"{{ state_attr('sensor.supervisor_updates', 'latest_version') }}\" updater_os : friendly_name : OS device_class : problem value_template : \"{{ states('sensor.os_updates') }}\" attribute_templates : installed_version : \"{{ state_attr('sensor.os_updates', 'installed_version') }}\" latest_version : \"{{ state_attr('sensor.os_updates', 'latest_version') }}\" updater_addons : friendly_name : Supervisor Add-ons device_class : problem value_template : \"{{ states('sensor.addons_updates')|int(0) != 0 }}\" attribute_templates : addons : \"{{ state_attr('sensor.addons_updates', 'addons') }}\" updater_hacs : friendly_name : HACS Integrations device_class : problem value_template : \"{{ states('sensor.hacs')|int(0) != 0 }}\" attribute_templates : repositories : \"{{ state_attr('sensor.hacs', 'repositories') }}\" - platform : group name : \"Updates\" entities : - binary_sensor.updater_core - binary_sensor.updater_supervisor - binary_sensor.updater_os","title":"Homeassistant Updates Custom-card"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#custom-card-homeassistant-updates","text":"","title":"Custom-card \"Homeassistant updates\""},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#credits","text":"Author: AndyVRD - 2021 Special thanks to basbruss Version: 1.0.2","title":"Credits"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#changelog","text":"1.0.0 Initial release 1.0.1 Added support for ulm_language variables 1.0.2 Updated capitalization of OS 1.0.3 Updated sensors and binary_sensors + Removed group.updaters","title":"Changelog"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#usage","text":"- type : 'custom:button-card' template : card_homeassistant_updates variables : ulm_card_homeassistant_entity : \"binary_sensor.updates\" ulm_card_homeassistant_core : \"sensor.core_updates\" ulm_card_homeassistant_supervisor : \"sensor.supervisor_updates\" ulm_card_homeassistant_os : \"sensor.os_updates\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#requirements","text":"!! Attention !! This card needs additional template sensors and binary_sensor updaters to work, all detail can be found in this readme.","title":"Requirements"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#variables","text":"Variable Example Required Explanation core_ sensor.core_updates yes sensor core installed/latest version os_ sensor.os_updates no sensor os installed/latest version supervisor_ sensor.supervisor_updates no sensor supervisor installed/latest version","title":"Variables"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#template-code","text":"--- card_homeassistant_updates : triggers_update : \"all\" template : - \"ulm_language_variables\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : triggers_update : \"all\" type : \"custom:button-card\" template : - \"icon_info_updates\" icon : \"mdi:home-assistant\" tap_action : action : \"none\" entity : \"[[[ return variables.ulm_card_homeassistant_entity ]]]\" name : > [[[ if(states[variables.ulm_card_homeassistant_core].state ==='True' || states[variables.ulm_card_homeassistant_supervisor].state ==='True' || states[variables.ulm_card_homeassistant_os].state ==='True'){ return variables.ulm_updates_available; } else { return variables.ulm_no_updates_available; } ]]] label : > [[[ if(variables.ulm_card_homeassistant_core){ if(states[variables.ulm_card_homeassistant_core].state ==='True'){ var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version + ' -> ' + states[variables.ulm_card_homeassistant_core].attributes.latest_version; } else { var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version; } } if(variables.ulm_card_homeassistant_supervisor){ if(states[variables.ulm_card_homeassistant_supervisor].state ==='True'){ var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version + ' -> ' + states[variables.ulm_card_homeassistant_supervisor].attributes.latest_version; } else { var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version; } } if(variables.ulm_card_homeassistant_os){ if(states[variables.ulm_card_homeassistant_os].state ==='True'){ var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version + ' -> ' + states[variables.ulm_card_homeassistant_os].attributes.latest_version; } else { var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version; } } if(variables.ulm_card_homeassistant_core && variables.ulm_card_homeassistant_supervisor && variables.ulm_card_homeassistant_os){ return supervisor + '<br>' + core + '<br>' + os; } else if(variables.ulm_card_homeassistant_core && variables.ulm_card_homeassistant_supervisor){ return supervisor + '<br>' + core; } else if(variables.ulm_card_homeassistant_core){ return core; } ]]] styles : icon : - color : \"rgba(var(--color-theme),0.9)\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:file-document\" tap_action : action : \"url\" url_path : \"https://www.home-assistant.io/latest-release-notes/\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:cog\" tap_action : action : \"navigate\" navigation_path : \"/developer-tools/yaml\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:update\" tap_action : action : \"navigate\" navigation_path : \"/config/dashboard\" icon_info_updates : color : \"var(--google-grey)\" show_icon : true show_label : true show_name : true state : - value : \"on\" styles : custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"28px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-blue),1)\"; ]]] icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"16px\" - text-align : \"start\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"16px\" - margin-bottom : \"4px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"21px 8px 8px 21px\" - box-shadow : \"none\" - padding : \"0px\" custom_fields : notification : > [[[ if ( entity.state ==\"unavailable\" || entity.state ==\"on\" ){ return `<ha-icon icon=\"mdi:party-popper\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>`; } ]]] size : \"20px\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#template-sensors-code","text":"sensor : - platform : command_line name : core_updates command : 'curl http://supervisor/core/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available} '' ' value_template : '{{ value_json.update_available }}' scan_interval : 600 json_attributes : - update_available - latest_version - installed_version - platform : command_line name : supervisor_updates command : 'curl http://supervisor/supervisor/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available} '' ' value_template : '{{ value_json.update_available }}' scan_interval : 600 json_attributes : - update_available - latest_version - installed_version - platform : command_line name : os_updates command : 'curl http://supervisor/os/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available} '' ' value_template : '{{ value_json.update_available }}' scan_interval : 600 json_attributes : - update_available - latest_version - installed_version - platform : command_line name : addons_updates command : 'curl http://supervisor/addons -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq '' {\"addons\":[.data.addons[] | select(.update_available)]} '' ' value_template : '{{ value_json.addons | length }}' scan_interval : 600 unit_of_measurement : pending update(s) json_attributes : - addons binary_sensor : - platform : template sensors : updater_core : friendly_name : Core device_class : problem value_template : \"{{ states('sensor.core_updates') }}\" attribute_templates : installed_version : \"{{ state_attr('sensor.core_updates', 'installed_version') }}\" latest_version : \"{{ state_attr('sensor.core_updates', 'latest_version') }}\" updater_supervisor : friendly_name : Supervisor device_class : problem value_template : \"{{ states('sensor.supervisor_updates') }}\" attribute_templates : installed_version : \"{{ state_attr('sensor.supervisor_updates', 'installed_version') }}\" latest_version : \"{{ state_attr('sensor.supervisor_updates', 'latest_version') }}\" updater_os : friendly_name : OS device_class : problem value_template : \"{{ states('sensor.os_updates') }}\" attribute_templates : installed_version : \"{{ state_attr('sensor.os_updates', 'installed_version') }}\" latest_version : \"{{ state_attr('sensor.os_updates', 'latest_version') }}\" updater_addons : friendly_name : Supervisor Add-ons device_class : problem value_template : \"{{ states('sensor.addons_updates')|int(0) != 0 }}\" attribute_templates : addons : \"{{ state_attr('sensor.addons_updates', 'addons') }}\" updater_hacs : friendly_name : HACS Integrations device_class : problem value_template : \"{{ states('sensor.hacs')|int(0) != 0 }}\" attribute_templates : repositories : \"{{ state_attr('sensor.hacs', 'repositories') }}\" - platform : group name : \"Updates\" entities : - binary_sensor.updater_core - binary_sensor.updater_supervisor - binary_sensor.updater_os","title":"Template sensors code"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/","text":"Custom-card \"Sun\" \u00b6 The custom_card_httpedo13_sun adapt sun card for minimalist ui. Credits \u00b6 Author: httpedo13 - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 This card uses: Component / card required Link Sun integration yes more info Sun card yes more info Images \u00b6 Usage \u00b6 - type : custom:button-card template : custom_card_httpedo13_sun variables : language : 'it' Variables \u00b6 The same sun card config. Name Accepted values Description Default darkMode boolean Changes card colors to dark or light Home assistant dark mode state language string 1 Changes card language Home assistant language or english if not supported showAzimuth boolean Displays azimuth in the footer false showElevation boolean Displays elevation in the footer false timeFormat '12h' / '24h' Displayed time format Locale based on Home assistant language title string Card title Doesn't display a title by default ( 1 ) Supported languages: da , de , en , es , et , fi , fr , hu , it , nl , pl , pt-BR , ru , sl , sv","title":"Sun Card Custom-card"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#custom-card-sun","text":"The custom_card_httpedo13_sun adapt sun card for minimalist ui.","title":"Custom-card \"Sun\""},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#credits","text":"Author: httpedo13 - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#requirements","text":"This card uses: Component / card required Link Sun integration yes more info Sun card yes more info","title":"Requirements"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#images","text":"","title":"Images"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#usage","text":"- type : custom:button-card template : custom_card_httpedo13_sun variables : language : 'it'","title":"Usage"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#variables","text":"The same sun card config. Name Accepted values Description Default darkMode boolean Changes card colors to dark or light Home assistant dark mode state language string 1 Changes card language Home assistant language or english if not supported showAzimuth boolean Displays azimuth in the footer false showElevation boolean Displays elevation in the footer false timeFormat '12h' / '24h' Displayed time format Locale based on Home assistant language title string Card title Doesn't display a title by default ( 1 ) Supported languages: da , de , en , es , et , fi , fr , hu , it , nl , pl , pt-BR , ru , sl , sv","title":"Variables"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/","text":"Custom-card \"Thermostat\" \u00b6 The custom_card_httpedo13_thermostat shows data from your thermostat and gives you the possibility to control it. Thanks to tpx01's air-condition custom card! Credits \u00b6 Author: httpedo13 - 2021 Version: 1.0.0 This design was made by tpx01's Changelog \u00b6 1.0.0 Initial release Images \u00b6 Usage \u00b6 With buttons: - type : custom:button-card template : custom_card_httpedo13_thermostat_with_buttons variables : entity : climate.ground_floor name : Heater Ground Floor With collapse button: - type : custom:button-card template : custom_card_httpedo13_thermostat_with_buttons_collapse variables : entity : climate.ground_floor name : Heater Ground Floor Requirements \u00b6 Entity climate with only heat mode Variables \u00b6 Variable Example Required Explanation entity climate.ground_floor yes Your climate with only heat mode entity name Heater Ground Floor yes The name to show Template code \u00b6 --- custom_card_httpedo13_thermostat : template : - \"ulm_language_variables\" - \"custom_card_httpedo13_thermostat_language_variables\" tap_action : action : \"toggle\" icon : | [[[ if (entity.attributes.hvac_action == 'heating') { return \"mdi:radiator\"; } return \"mdi:radiator-off\"; ]]] label : >- [[[ if (entity.state =='off') { return variables.custom_card_httpedo13_thermostat_off; } else if (entity.state =='heat') { return variables.custom_card_httpedo13_thermostat_on; } else if (entity.attributes.hvac_action == 'heating') { return variables.custom_card_httpedo13_thermostat_heating; } return entity.state; ]]] state : - operator : \"template\" value : > [[[ return entity.state != 'off'; ]]] styles : label : - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return \"var(--card-background-color)\"; } return \"rgba(var(--color-theme),0.9)\"; ]]] name : - font-weight : \"bold\" - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return \"var(--card-background-color)\"; } return \"rgba(var(--color-theme),0.9)\"; ]]] icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgba(var(--color-red),0.2)'; ]]] card : - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_card_httpedo13_thermostat_with_buttons : triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"list_items_favorite\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"custom_card_httpedo13_thermostat\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] name : > [[[ if (variables.name == null) { return variables.entity; } return variables.name; ]]] entity : \"[[[ return variables.entity ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_current_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) - 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:minus\" item2 : card : type : \"custom:button-card\" template : \"widget_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item3 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) + 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:plus\" custom_card_httpedo13_thermostat_with_buttons_collapse : triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"list_items_favorite\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"custom_card_httpedo13_thermostat\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] name : > [[[ if (variables.name == null) { return variables.entity; } return variables.name; ]]] entity : \"[[[ return variables.entity ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_current_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item2 : card : type : \"conditional\" conditions : - entity : \"[[[ return states[variables.entity].entity_id ]]]\" state : \"heat\" card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) - 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:minus\" item2 : card : type : \"custom:button-card\" template : \"widget_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item3 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) + 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:plus\" widget_current_temperature : color : \"var(--google-grey-500)\" show_icon : false show_name : false show_label : true size : \"20px\" label : |- [[[ var temperature = entity.attributes.current_temperature; if (temperature == null) { var temperature = '-'; } return temperature + '\u00b0C' ]]] styles : label : - font-weight : \"bold\" - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgb(var(--color-theme),0.9)'; ]]] grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] widget_temperature : color : \"var(--google-grey-500)\" show_icon : false show_name : false show_label : true size : \"20px\" label : |- [[[ var temperature = entity.attributes.temperature; if (temperature == null) { var temperature = '-'; } return temperature + '\u00b0C' ]]] styles : label : - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgb(var(--color-theme),0.9)'; ]]] grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] widget_icon_for_thermostat : tap_action : action : \"toggle\" show_icon : true show_name : false styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgba(var(--color-theme),0.05)'; ]]] - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" icon : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\" color : \"var(--google-grey)\" list_items_favorite : styles : grid : - grid-template-areas : \"'item1 item1 item2'\" - grid-template-columns : \"1fr 1fr 1fr\" - grid-template-rows : \"min-content\" - column-gap : \"7px\" card : - box-shadow : \"none\" - padding : \"0px\"","title":"Thermostat Custom-card"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#custom-card-thermostat","text":"The custom_card_httpedo13_thermostat shows data from your thermostat and gives you the possibility to control it. Thanks to tpx01's air-condition custom card!","title":"Custom-card \"Thermostat\""},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#credits","text":"Author: httpedo13 - 2021 Version: 1.0.0 This design was made by tpx01's","title":"Credits"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#images","text":"","title":"Images"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#usage","text":"With buttons: - type : custom:button-card template : custom_card_httpedo13_thermostat_with_buttons variables : entity : climate.ground_floor name : Heater Ground Floor With collapse button: - type : custom:button-card template : custom_card_httpedo13_thermostat_with_buttons_collapse variables : entity : climate.ground_floor name : Heater Ground Floor","title":"Usage"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#requirements","text":"Entity climate with only heat mode","title":"Requirements"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#variables","text":"Variable Example Required Explanation entity climate.ground_floor yes Your climate with only heat mode entity name Heater Ground Floor yes The name to show","title":"Variables"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#template-code","text":"--- custom_card_httpedo13_thermostat : template : - \"ulm_language_variables\" - \"custom_card_httpedo13_thermostat_language_variables\" tap_action : action : \"toggle\" icon : | [[[ if (entity.attributes.hvac_action == 'heating') { return \"mdi:radiator\"; } return \"mdi:radiator-off\"; ]]] label : >- [[[ if (entity.state =='off') { return variables.custom_card_httpedo13_thermostat_off; } else if (entity.state =='heat') { return variables.custom_card_httpedo13_thermostat_on; } else if (entity.attributes.hvac_action == 'heating') { return variables.custom_card_httpedo13_thermostat_heating; } return entity.state; ]]] state : - operator : \"template\" value : > [[[ return entity.state != 'off'; ]]] styles : label : - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return \"var(--card-background-color)\"; } return \"rgba(var(--color-theme),0.9)\"; ]]] name : - font-weight : \"bold\" - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return \"var(--card-background-color)\"; } return \"rgba(var(--color-theme),0.9)\"; ]]] icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgba(var(--color-red),0.2)'; ]]] card : - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_card_httpedo13_thermostat_with_buttons : triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"list_items_favorite\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"custom_card_httpedo13_thermostat\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] name : > [[[ if (variables.name == null) { return variables.entity; } return variables.name; ]]] entity : \"[[[ return variables.entity ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_current_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) - 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:minus\" item2 : card : type : \"custom:button-card\" template : \"widget_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item3 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) + 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:plus\" custom_card_httpedo13_thermostat_with_buttons_collapse : triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"list_items_favorite\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"custom_card_httpedo13_thermostat\" tap_action : action : \"call-service\" service : \"climate.set_hvac_mode\" service_data : entity_id : \"[[[ return variables.entity ]]]\" hvac_mode : | [[[ if (states[variables.entity].state == \"off\"){ return 'heat'; } else if (states[variables.entity].state == \"heat\"){ return 'off'; } ]]] name : > [[[ if (variables.name == null) { return variables.entity; } return variables.name; ]]] entity : \"[[[ return variables.entity ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_current_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item2 : card : type : \"conditional\" conditions : - entity : \"[[[ return states[variables.entity].entity_id ]]]\" state : \"heat\" card : type : \"custom:button-card\" template : \"list_3_items\" styles : card : - background-color : | [[[ if (states[variables.entity].attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) - 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:minus\" item2 : card : type : \"custom:button-card\" template : \"widget_temperature\" tap_action : action : \"toggle\" entity : \"[[[ return variables.entity ]]]\" icon : \"mdi:temperature-celsius\" item3 : card : type : \"custom:button-card\" template : \"widget_icon_for_thermostat\" entity : \"[[[ return variables.entity ]]]\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : temperature : \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) + 0.5) ]]]\" entity_id : \"[[[ return variables.entity ]]]\" icon : \"mdi:plus\" widget_current_temperature : color : \"var(--google-grey-500)\" show_icon : false show_name : false show_label : true size : \"20px\" label : |- [[[ var temperature = entity.attributes.current_temperature; if (temperature == null) { var temperature = '-'; } return temperature + '\u00b0C' ]]] styles : label : - font-weight : \"bold\" - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgb(var(--color-theme),0.9)'; ]]] grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] widget_temperature : color : \"var(--google-grey-500)\" show_icon : false show_name : false show_label : true size : \"20px\" label : |- [[[ var temperature = entity.attributes.temperature; if (temperature == null) { var temperature = '-'; } return temperature + '\u00b0C' ]]] styles : label : - color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgb(var(--color-theme),0.9)'; ]]] grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return '#ff8100'; } return 'var(--card-background-color)'; ]]] widget_icon_for_thermostat : tap_action : action : \"toggle\" show_icon : true show_name : false styles : grid : - grid-template-areas : \"'i'\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : | [[[ if (entity.attributes.hvac_action == 'heating'){ return 'var(--card-background-color)'; } return 'rgba(var(--color-theme),0.05)'; ]]] - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" icon : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\" color : \"var(--google-grey)\" list_items_favorite : styles : grid : - grid-template-areas : \"'item1 item1 item2'\" - grid-template-columns : \"1fr 1fr 1fr\" - grid-template-rows : \"min-content\" - column-gap : \"7px\" card : - box-shadow : \"none\" - padding : \"0px\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_imswel_person/","text":"Custom-card \"Person\" \u00b6 This is a custom-card that improves the original person card ( card_person ) by allowing the user to define as many areas as desired and adding a pop-up window inspired by the nice theme of @matt8707 Credits \u00b6 Author: imswel - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 This card needs the following to function correctly: Component / card required browser_mod yes lovelace-card-mod yes Usage \u00b6 - type : \"custom:button-card\" template : custom_card_imswel_person variables : ulm_card_imswel_person_entity : person.john ulm_card_imswel_person_wifi_tracker : device_tracker.wifi_oneplus_6t ulm_card_imswel_person_gps_tracker : device_tracker.oneplus_6t ulm_card_imswel_person_findmy_script : script.find_my_oneplus_6t ulm_card_imswel_person_use_entity_picture : true ulm_card_imswel_person_zones : - zone.work - zone.school Variables \u00b6 Variable Example Required Explanation ulm_card_imswel_person_entity person.john yes The person entity ulm_card_imswel_person_wifi_tracker device_tracker.wifi_oneplus_6t yes A device_tracker entity of the person based on wifi ulm_card_imswel_person_gps_tracker device_tracker.oneplus_6t yes A device_tracker entity of the person based on location ulm_card_imswel_person_findmy_script script.find_my_oneplus_6t yes A script entity that make ring your phone ulm_card_imswel_person_use_entity_picture true or false no If true, shows the entity picture from your user instead of the icon. Default is false ulm_card_imswel_person_zones - zone.work - zone.school no A list of zones (beside \"home\") to use for the card. You can set up as many zones as you want besides \"home\".","title":"Person Card Custom-card"},{"location":"usage/custom_cards/custom_card_imswel_person/#custom-card-person","text":"This is a custom-card that improves the original person card ( card_person ) by allowing the user to define as many areas as desired and adding a pop-up window inspired by the nice theme of @matt8707","title":"Custom-card \"Person\""},{"location":"usage/custom_cards/custom_card_imswel_person/#credits","text":"Author: imswel - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_imswel_person/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_imswel_person/#requirements","text":"This card needs the following to function correctly: Component / card required browser_mod yes lovelace-card-mod yes","title":"Requirements"},{"location":"usage/custom_cards/custom_card_imswel_person/#usage","text":"- type : \"custom:button-card\" template : custom_card_imswel_person variables : ulm_card_imswel_person_entity : person.john ulm_card_imswel_person_wifi_tracker : device_tracker.wifi_oneplus_6t ulm_card_imswel_person_gps_tracker : device_tracker.oneplus_6t ulm_card_imswel_person_findmy_script : script.find_my_oneplus_6t ulm_card_imswel_person_use_entity_picture : true ulm_card_imswel_person_zones : - zone.work - zone.school","title":"Usage"},{"location":"usage/custom_cards/custom_card_imswel_person/#variables","text":"Variable Example Required Explanation ulm_card_imswel_person_entity person.john yes The person entity ulm_card_imswel_person_wifi_tracker device_tracker.wifi_oneplus_6t yes A device_tracker entity of the person based on wifi ulm_card_imswel_person_gps_tracker device_tracker.oneplus_6t yes A device_tracker entity of the person based on location ulm_card_imswel_person_findmy_script script.find_my_oneplus_6t yes A script entity that make ring your phone ulm_card_imswel_person_use_entity_picture true or false no If true, shows the entity picture from your user instead of the icon. Default is false ulm_card_imswel_person_zones - zone.work - zone.school no A list of zones (beside \"home\") to use for the card. You can set up as many zones as you want besides \"home\".","title":"Variables"},{"location":"usage/custom_cards/custom_card_input_datetime/","text":"Custom-card \"Input Datetime Card\" \u00b6 The card_input_datetime you can control a input_datetime entity. Credits \u00b6 Author: sildehoop - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : \"custom:button-card\" template : - card_input_datetime entity : input_number.YOUR_INPUT_NUMBER_ENTITY variables : ulm_card_input_datetime_name : \"YOUR_NAME\" Requirements \u00b6 n/a Variables \u00b6 Variable Example Required Explanation Template code \u00b6 Template Code custom_card_input_datetime.yaml --- card_input_datetime : show_name : false show_icon : false variables : ulm_card_input_datetime_name : \"n/a\" triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" - \"input_datetime\" tap_action : action : \"more-info\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_input_datetime_name ]]]\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 4500; // Create a new JavaScript Date object based on the timestamp // multiplied by 1000 so that the argument is in milliseconds, not seconds. var date = new Date(unix_timestamp * 1000); // Hours part from the timestamp var hours = date.getHours(); // Minutes part from the timestamp var minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp var seconds = \"0\" + date.getSeconds(); // Will display time in 10:30:23 format var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] icon : \"mdi:arrow-down\" item2 : card : type : \"custom:button-card\" template : \"widget_text\" entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 3540; // Create a new JavaScript Date object based on the timestamp // multiplied by 1000 so that the argument is in milliseconds, not seconds. var date = new Date(unix_timestamp * 1000); // Hours part from the timestamp var hours = date.getHours(); // Minutes part from the timestamp var minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp var seconds = \"0\" + date.getSeconds(); // Will display time in 10:30:23 format var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] hold_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 3660; // Create a new JavaScript Date object based on the timestamp // multiplied by 1000 so that the argument is in milliseconds, not seconds. var date = new Date(unix_timestamp * 1000); // Hours part from the timestamp var hours = date.getHours(); // Minutes part from the timestamp var minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp var seconds = \"0\" + date.getSeconds(); // Will display time in 10:30:23 format var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 2700; var date = new Date(unix_timestamp * 1000); var hours = date.getHours(); var minutes = \"0\" + date.getMinutes(); var seconds = \"0\" + date.getSeconds(); var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] icon : \"mdi:arrow-up\" input_datetime : tap_action : action : \"more-info\" show_last_changed : true widget_text : tap_action : action : \"toggle\" show_icon : false show_label : true show_name : false label : >- [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' if (entity.state == 'on') { return variables.ulm_on; } else if (entity.state == 'off') { return variables.ulm_off; } else if (entity.state == 'unavailable') { return variables.ulm_unavailable; } else if (entity.state == 'idle') { return variables.ulm_idle; } else if (entity.state == 'open') { return variables.ulm_open; } else if (entity.state == 'closed') { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" state : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\" color : \"var(--google-grey)\"","title":"Input Datetime Custom-card"},{"location":"usage/custom_cards/custom_card_input_datetime/#custom-card-input-datetime-card","text":"The card_input_datetime you can control a input_datetime entity.","title":"Custom-card \"Input Datetime Card\""},{"location":"usage/custom_cards/custom_card_input_datetime/#credits","text":"Author: sildehoop - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_input_datetime/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_input_datetime/#usage","text":"- type : \"custom:button-card\" template : - card_input_datetime entity : input_number.YOUR_INPUT_NUMBER_ENTITY variables : ulm_card_input_datetime_name : \"YOUR_NAME\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_input_datetime/#requirements","text":"n/a","title":"Requirements"},{"location":"usage/custom_cards/custom_card_input_datetime/#variables","text":"Variable Example Required Explanation","title":"Variables"},{"location":"usage/custom_cards/custom_card_input_datetime/#template-code","text":"Template Code custom_card_input_datetime.yaml --- card_input_datetime : show_name : false show_icon : false variables : ulm_card_input_datetime_name : \"n/a\" triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" - \"input_datetime\" tap_action : action : \"more-info\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_input_datetime_name ]]]\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 4500; // Create a new JavaScript Date object based on the timestamp // multiplied by 1000 so that the argument is in milliseconds, not seconds. var date = new Date(unix_timestamp * 1000); // Hours part from the timestamp var hours = date.getHours(); // Minutes part from the timestamp var minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp var seconds = \"0\" + date.getSeconds(); // Will display time in 10:30:23 format var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] icon : \"mdi:arrow-down\" item2 : card : type : \"custom:button-card\" template : \"widget_text\" entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 3540; // Create a new JavaScript Date object based on the timestamp // multiplied by 1000 so that the argument is in milliseconds, not seconds. var date = new Date(unix_timestamp * 1000); // Hours part from the timestamp var hours = date.getHours(); // Minutes part from the timestamp var minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp var seconds = \"0\" + date.getSeconds(); // Will display time in 10:30:23 format var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] hold_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 3660; // Create a new JavaScript Date object based on the timestamp // multiplied by 1000 so that the argument is in milliseconds, not seconds. var date = new Date(unix_timestamp * 1000); // Hours part from the timestamp var hours = date.getHours(); // Minutes part from the timestamp var minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp var seconds = \"0\" + date.getSeconds(); // Will display time in 10:30:23 format var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"input_datetime.set_datetime\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" time : > [[[ var timestamp = entity.attributes.timestamp let unix_timestamp = timestamp - 2700; var date = new Date(unix_timestamp * 1000); var hours = date.getHours(); var minutes = \"0\" + date.getMinutes(); var seconds = \"0\" + date.getSeconds(); var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2); return formattedTime; ]]] icon : \"mdi:arrow-up\" input_datetime : tap_action : action : \"more-info\" show_last_changed : true widget_text : tap_action : action : \"toggle\" show_icon : false show_label : true show_name : false label : >- [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' if (entity.state == 'on') { return variables.ulm_on; } else if (entity.state == 'off') { return variables.ulm_off; } else if (entity.state == 'unavailable') { return variables.ulm_unavailable; } else if (entity.state == 'idle') { return variables.ulm_idle; } else if (entity.state == 'open') { return variables.ulm_open; } else if (entity.state == 'closed') { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" state : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\" color : \"var(--google-grey)\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_input_number/","text":"Custom-card \"Input Number\" \u00b6 The card_input_number you can control a input_number entity Credits \u00b6 Author: sildehoop - 2021 Version: 1.1.0 Braking changes 1.1.0 #OLD - type : \"custom:button-card\" template : - card_input_number variables : ulm_card_input_number_name : \"YOUR_NAME\" ulm_card_input_number_entity : \"input_number.YOUR_INPUT_NUMBER\" #NEW - type : \"custom:button-card\" template : card_input_number entity : input_number.YOUR_INPUT_NUMBER_ENTITY variables : ulm_card_input_number_name : \"YOUR_CARD_NAME\" Changelog \u00b6 1.1.0 Adds ability to work with counter entities. Compatibility with input number entities is not affected. 1.0.1 Added option to leave ulm_card_input_number_name empty (takes the friendly_name of the entity) Removed background from middle text (because it is not a button). Removed variables ulm_card_input_number_entity. 1.0.0 Initial release Usage \u00b6 - type : \"custom:button-card\" template : card_input_number entity : input_number.YOUR_INPUT_NUMBER variables : ulm_card_input_number_name : \"YOUR_NAME\" Requirements \u00b6 n/a Variables \u00b6 Variable Example Required Explanation ulm_card_input_number_name Bathroom Ceiling Fan Threshold false The name to display on your card Template code \u00b6 Template Code custom_card_input_number.yaml --- card_input_number : variables : ulm_card_input_number_name : \"[[[ return entity.attributes.friendly_name ]]]\" triggers_update : \"all\" show_icon : false show_label : false show_name : false styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" - \"input_number\" tap_action : action : \"more-info\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_input_number_name ]]]\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : | [[[ if( entity.entity_id.startsWith(\"input_number.\") ) return \"input_number.decrement\"; if( entity.entity_id.startsWith(\"counter.\") ) return \"counter.decrement\"; return \"\"; ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:arrow-down\" item2 : card : type : \"custom:button-card\" template : \"widget_text\" entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"cover.stop_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : | [[[ if( entity.entity_id.startsWith(\"input_number.\") ) return \"input_number.increment\"; if( entity.entity_id.startsWith(\"counter.\") ) return \"counter.increment\"; return \"\"; ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:arrow-up\" input_number : tap_action : action : \"more-info\" show_last_changed : true widget_text : tap_action : action : \"toggle\" show_icon : false show_label : true show_name : false label : >- [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' if (entity.state == 'on') { return variables.ulm_on; } else if (entity.state == 'off') { return variables.ulm_off; } else if (entity.state == 'unavailable') { return variables.ulm_unavailable; } else if (entity.state == 'idle') { return variables.ulm_idle; } else if (entity.state == 'open') { return variables.ulm_open; } else if (entity.state == 'closed') { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" state : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\" color : \"var(--google-grey)\"","title":"Input Number Custom-card"},{"location":"usage/custom_cards/custom_card_input_number/#custom-card-input-number","text":"The card_input_number you can control a input_number entity","title":"Custom-card \"Input Number\""},{"location":"usage/custom_cards/custom_card_input_number/#credits","text":"Author: sildehoop - 2021 Version: 1.1.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_input_number/#changelog","text":"1.1.0 Adds ability to work with counter entities. Compatibility with input number entities is not affected. 1.0.1 Added option to leave ulm_card_input_number_name empty (takes the friendly_name of the entity) Removed background from middle text (because it is not a button). Removed variables ulm_card_input_number_entity. 1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_input_number/#usage","text":"- type : \"custom:button-card\" template : card_input_number entity : input_number.YOUR_INPUT_NUMBER variables : ulm_card_input_number_name : \"YOUR_NAME\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_input_number/#requirements","text":"n/a","title":"Requirements"},{"location":"usage/custom_cards/custom_card_input_number/#variables","text":"Variable Example Required Explanation ulm_card_input_number_name Bathroom Ceiling Fan Threshold false The name to display on your card","title":"Variables"},{"location":"usage/custom_cards/custom_card_input_number/#template-code","text":"Template Code custom_card_input_number.yaml --- card_input_number : variables : ulm_card_input_number_name : \"[[[ return entity.attributes.friendly_name ]]]\" triggers_update : \"all\" show_icon : false show_label : false show_name : false styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" - \"input_number\" tap_action : action : \"more-info\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_input_number_name ]]]\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : | [[[ if( entity.entity_id.startsWith(\"input_number.\") ) return \"input_number.decrement\"; if( entity.entity_id.startsWith(\"counter.\") ) return \"counter.decrement\"; return \"\"; ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:arrow-down\" item2 : card : type : \"custom:button-card\" template : \"widget_text\" entity : \"[[[ return entity.entity_id ]]]\" tap_action : action : \"call-service\" service : \"cover.stop_cover\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : | [[[ if( entity.entity_id.startsWith(\"input_number.\") ) return \"input_number.increment\"; if( entity.entity_id.startsWith(\"counter.\") ) return \"counter.increment\"; return \"\"; ]]] service_data : entity_id : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:arrow-up\" input_number : tap_action : action : \"more-info\" show_last_changed : true widget_text : tap_action : action : \"toggle\" show_icon : false show_label : true show_name : false label : >- [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' if (entity.state == 'on') { return variables.ulm_on; } else if (entity.state == 'off') { return variables.ulm_off; } else if (entity.state == 'unavailable') { return variables.ulm_unavailable; } else if (entity.state == 'idle') { return variables.ulm_idle; } else if (entity.state == 'open') { return variables.ulm_open; } else if (entity.state == 'closed') { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : grid : - grid-template-areas : \"'l'\" card : - box-shadow : \"none\" - padding : \"0px\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" state : - color : \"rgba(var(--color-theme),0.9)\" size : \"20px\" color : \"var(--google-grey)\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/","text":"Custom-card \"Entities\" \u00b6 This is a custom-card to display states from multiple entities or from an entity with multiples attributes (To use it with attributes need to modify the code) Credits \u00b6 Author: irmajavi - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 none Usage \u00b6 type : custom:button-card template : custom_card_irmajavi_entities variables : ulm_custom_card_irmajavi_entities_entity_1 : sensor.inverter_voltage ulm_custom_card_irmajavi_entities_entity_2 : sensor.inverter_temperature ulm_custom_card_irmajavi_entities_entity_3 : sensor.active_ac_power ulm_custom_card_irmajavi_entities_entity_4 : sensor.ac_load_current ulm_custom_card_irmajavi_entities_name_1 : Voltage ulm_custom_card_irmajavi_entities_name_2 : Temperature ulm_custom_card_irmajavi_entities_name_3 : AC Power ulm_custom_card_irmajavi_entities_name_4 : Current ulm_custom_card_irmajavi_entities_name : System Status ulm_custom_card_irmajavi_entities : sensor.inverter_operating_mode Variables \u00b6 Variable Example Required Explanation ulm_custom_card_irmajavi_entities sensor.main Yes Main entity ulm_custom_card_irmajavi_entitites_name Status Yes Main entity name ulm_custom_card_irmajavi_entities_entity_1 sensor.test1 Yes The first entity ulm_custom_card_irmajavi_entities_entity_2 sensor.test2 Yes The second entity ulm_custom_card_irmajavi_entities_entity_3 sensor.test3 Yes The third entity ulm_custom_card_irmajavi_entities_entity_4 sensor.test4 Yes The forth entity ulm_custom_card_irmajavi_entities_name_1 Test1 Yes The name of the first entity ulm_custom_card_irmajavi_entities_name_2 Test2 Yes The name of the second entity ulm_custom_card_irmajavi_entities_name_3 Test3 Yes The name of the third entity ulm_custom_card_irmajavi_entities_name_4 Test4 Yes The name of the forth entity Template Code \u00b6 --- custom_card_irmajavi_entities : template : - ulm_language_variables triggers_update : all show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : ' '' item1 '' '' item2 '' '' item3 '' '' item4 '' ' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : 30px - box-shadow : var(--box-shadow) - padding : 12px - height : 160px custom_fields : item1 : card : type : custom:button-card color : var(--google-grey) show_icon : false show_label : true show_name : true styles : name : - align-self : start - justify-self : start - font-weight : bold - font-size : 14px - margin-left : 12px grid : - grid-template-areas : '\"n\" \"l\"' - grid-template-columns : min-content auto min-content - grid-template-rows : min-content min-content card : - box-shadow : none - border-radius : 20px - border : 2px solid var(--google-grey) - height : 70px label : - justify-self : start - align-self : end - font-weight : bold - font-size : 14px - filter : opacity(40%) - margin-left : 35px name : | [[[ var icon = '\ud83d\udc7d'; if (variables.ulm_custom_card_irmajavi_entities_icon){ var icon = variables.ulm_custom_card_irmajavi_entities_icon; } return icon + ' ' + variables.ulm_custom_card_irmajavi_entities_name; ]]] label : | [[[ return states[variables.ulm_custom_card_irmajavi_entities].state ]]] item2 : card : type : custom:button-card template : list_4_items custom_fields : item1 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_1; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_1 ]]] item2 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_2; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_2 ]]] item3 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_3; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_3 ]]] item4 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_4; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_4 ]]] custom_widget_irmajavi : show_label : true show_icon : false label : | [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' if (entity.state == 'on') { return variables.ulm_on; } else if (entity.state == 'off') { return variables.ulm_off; } else if (entity.state == 'unavailable') { return variables.ulm_unavailable; } else if (entity.state == 'idle') { return variables.ulm_idle; } else if (entity.state == 'open') { return variables.ulm_open; } else if (entity.state == 'closed') { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : name : - justify-self : center - align-self : start - font-weight : bolder - font-size : 12px - filter : opacity(40%) label : - margin-top : 10px - justify-self : center - font-weight : bold - font-size : 14px grid : - grid-template-areas : '\"l\" \"n\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content card : - box-shadow : none","title":"Entities Custom-card"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#custom-card-entities","text":"This is a custom-card to display states from multiple entities or from an entity with multiples attributes (To use it with attributes need to modify the code)","title":"Custom-card \"Entities\""},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#credits","text":"Author: irmajavi - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#requirements","text":"none","title":"Requirements"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#usage","text":"type : custom:button-card template : custom_card_irmajavi_entities variables : ulm_custom_card_irmajavi_entities_entity_1 : sensor.inverter_voltage ulm_custom_card_irmajavi_entities_entity_2 : sensor.inverter_temperature ulm_custom_card_irmajavi_entities_entity_3 : sensor.active_ac_power ulm_custom_card_irmajavi_entities_entity_4 : sensor.ac_load_current ulm_custom_card_irmajavi_entities_name_1 : Voltage ulm_custom_card_irmajavi_entities_name_2 : Temperature ulm_custom_card_irmajavi_entities_name_3 : AC Power ulm_custom_card_irmajavi_entities_name_4 : Current ulm_custom_card_irmajavi_entities_name : System Status ulm_custom_card_irmajavi_entities : sensor.inverter_operating_mode","title":"Usage"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#variables","text":"Variable Example Required Explanation ulm_custom_card_irmajavi_entities sensor.main Yes Main entity ulm_custom_card_irmajavi_entitites_name Status Yes Main entity name ulm_custom_card_irmajavi_entities_entity_1 sensor.test1 Yes The first entity ulm_custom_card_irmajavi_entities_entity_2 sensor.test2 Yes The second entity ulm_custom_card_irmajavi_entities_entity_3 sensor.test3 Yes The third entity ulm_custom_card_irmajavi_entities_entity_4 sensor.test4 Yes The forth entity ulm_custom_card_irmajavi_entities_name_1 Test1 Yes The name of the first entity ulm_custom_card_irmajavi_entities_name_2 Test2 Yes The name of the second entity ulm_custom_card_irmajavi_entities_name_3 Test3 Yes The name of the third entity ulm_custom_card_irmajavi_entities_name_4 Test4 Yes The name of the forth entity","title":"Variables"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#template-code","text":"--- custom_card_irmajavi_entities : template : - ulm_language_variables triggers_update : all show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : ' '' item1 '' '' item2 '' '' item3 '' '' item4 '' ' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : 30px - box-shadow : var(--box-shadow) - padding : 12px - height : 160px custom_fields : item1 : card : type : custom:button-card color : var(--google-grey) show_icon : false show_label : true show_name : true styles : name : - align-self : start - justify-self : start - font-weight : bold - font-size : 14px - margin-left : 12px grid : - grid-template-areas : '\"n\" \"l\"' - grid-template-columns : min-content auto min-content - grid-template-rows : min-content min-content card : - box-shadow : none - border-radius : 20px - border : 2px solid var(--google-grey) - height : 70px label : - justify-self : start - align-self : end - font-weight : bold - font-size : 14px - filter : opacity(40%) - margin-left : 35px name : | [[[ var icon = '\ud83d\udc7d'; if (variables.ulm_custom_card_irmajavi_entities_icon){ var icon = variables.ulm_custom_card_irmajavi_entities_icon; } return icon + ' ' + variables.ulm_custom_card_irmajavi_entities_name; ]]] label : | [[[ return states[variables.ulm_custom_card_irmajavi_entities].state ]]] item2 : card : type : custom:button-card template : list_4_items custom_fields : item1 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_1; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_1 ]]] item2 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_2; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_2 ]]] item3 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_3; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_3 ]]] item4 : card : type : custom:button-card template : custom_widget_irmajavi entity : >- [[[ return variables.ulm_custom_card_irmajavi_entities_entity_4; ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_entities_name_4 ]]] custom_widget_irmajavi : show_label : true show_icon : false label : | [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' if (entity.state == 'on') { return variables.ulm_on; } else if (entity.state == 'off') { return variables.ulm_off; } else if (entity.state == 'unavailable') { return variables.ulm_unavailable; } else if (entity.state == 'idle') { return variables.ulm_idle; } else if (entity.state == 'open') { return variables.ulm_open; } else if (entity.state == 'closed') { return variables.ulm_closed; } else { return entity.state + unit; } ]]] styles : name : - justify-self : center - align-self : start - font-weight : bolder - font-size : 12px - filter : opacity(40%) label : - margin-top : 10px - justify-self : center - font-weight : bold - font-size : 14px grid : - grid-template-areas : '\"l\" \"n\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content card : - box-shadow : none","title":"Template Code"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/","text":"Custom-card \"Speedtest\" \u00b6 This is a custom-card to display the results from the Speedtest.net integration. The integration uses the Speedtest.net web service to measure network bandwidth performance. Credits \u00b6 Author: irmajavi - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 Home Assistant Speedtest.net integration Usage \u00b6 type : custom:button-card template : custom_card_irmajavi_speedtest variables : ulm_custom_card_irmajavi_speedtest_download_speed_entity : sensor.speedtest_download ulm_custom_card_irmajavi_speedtest_upload_speed_entity : sensor.speedtest_upload ulm_custom_card_irmajavi_speedtest_color : blue ulm_custom_card_irmajavi_speedtest_router_name : router_name ulm_custom_card_irmajavi_speedtest_router_model : router_model Variables \u00b6 Variable Example Required Explanation ulm_custom_card_irmajavi_speedtest_router_name Linksys Yes Your router name ulm_custom_card_irmajavi_speedtest_router_model EA8549 Yes Your router model ulm_custom_card_irmajavi_speedtest_color blue Yes The color of the icon ulm_custom_card_irmajavi_speedtest_upload_speed_entity sensor.test2 Yes The upload sensor created by the integration ulm_custom_card_irmajavi_speedtest_download_speed_entity sensor.test3 Yes The download sensor created by the integration Template Code \u00b6 --- custom_card_irmajavi_speedtest : triggers_update : \"all\" show_name : false show_label : false variables : ulm_custom_card_irmajavi_speedtest_color : \"blue\" ulm_custom_card_irmajavi_speedtest_router_name : \"router_name\" ulm_custom_card_irmajavi_speedtest_router_model : \"router_model\" styles : grid : - grid-template-areas : \"'item1' 'item2' 'item3'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"none\" show_last_changed : false show_label : true show_name : true show_icon : true label : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_router_model ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_router_name ]]] icon : \"mdi:wifi\" styles : icon : - color : >- [[[ return `rgba(var(--color-${variables.ulm_custom_card_irmajavi_speedtest_color}), 1)`; ]]] - width : \"32px\" label : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" name : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" img_cell : - background-color : >- [[[ return `rgba(var(--color-${variables.ulm_custom_card_irmajavi_speedtest_color}), 0.2)`; ]]] - border-radius : \"50%\" - place-self : \"center\" - width : \"62px\" - height : \"62px\" grid : - grid-template-areas : \"'i' 'n' 'l'\" card : - box-shadow : \"none\" size : \"20px\" item2 : card : type : \"custom:button-card\" tap_action : action : \"call-service\" service : \"speedtestdotnet.speedtest\" color : \"var(--google-grey)\" show_icon : true show_label : false show_name : true styles : custom_fields : item1 : - justify-self : \"end\" icon : - color : \"rgba(var(--color-theme),0.9)\" - width : \"20px\" img_cell : - background-color : \"none\" - place-self : \"center\" - justify-self : \"start\" - width : \"40px\" - height : \"20px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"16px\" grid : - grid-template-areas : \"i n item1\" - grid-template-columns : \"min-content\" - grid-template-rows : \"auto\" card : - box-shadow : \"none\" - border-radius : \"10px\" - border : \"2px solid var(--google-grey)\" - padding_bottom : \"-8px\" - height : \"40px\" - padding-top : \"5px\" - padding-left : \"5px\" name : \"Speedtest\" icon : \"mdi:speedometer\" custom_fields : item1 : card : type : \"custom:button-card\" show_icon : true show_name : false show_label : false styles : icon : - color : \"rgba(var(--color-theme),0.9)\" - width : \"20px\" - justify-self : \"end\" grid : - grid-template-areas : \"i\" - grid-template-columns : \"auto\" - grid-template-rows : \"auto\" card : - box-shadow : \"none\" icon : \"mdi:chevron-right\" item3 : card : type : \"custom:button-card\" template : \"list_2_items\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"more-info\" color : \"var(--google-blue)\" show_label : true show_icon : false name : \"Download Speed\" entity : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity; ]]] label : | [[[ var state1 = \"\"; if (states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].state){ var state1 = states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].state; if (states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].attributes.unit_of_measurement){ state1 += states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].attributes.unit_of_measurement; } } return state1; ]]] styles : icon : - width : \"30px\" - height : \"30px\" label : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"23px\" name : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"auto\" - grid-template-rows : \"min-content\" card : - box-shadow : \"none\" - padding-top : \"15px\" - padding-botton : \"10px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"80px\" item2 : card : type : \"custom:button-card\" color : \"var(--google-blue)\" show_label : true show_icon : false name : \"Upload Speed\" entity : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity; ]]] label : | [[[ var state1 = \"\"; if (states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].state){ var state1 = states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].state; if (states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].attributes.unit_of_measurement){ state1 += states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].attributes.unit_of_measurement; } } return state1; ]]] styles : icon : - width : \"30px\" - height : \"30px\" label : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"23px\" name : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"auto\" - grid-template-rows : \"min-content\" card : - box-shadow : \"none\" - padding-top : \"15px\" - padding-botton : \"10px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"80px\"","title":"Speedtest Custom-card"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#custom-card-speedtest","text":"This is a custom-card to display the results from the Speedtest.net integration. The integration uses the Speedtest.net web service to measure network bandwidth performance.","title":"Custom-card \"Speedtest\""},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#credits","text":"Author: irmajavi - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#requirements","text":"Home Assistant Speedtest.net integration","title":"Requirements"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#usage","text":"type : custom:button-card template : custom_card_irmajavi_speedtest variables : ulm_custom_card_irmajavi_speedtest_download_speed_entity : sensor.speedtest_download ulm_custom_card_irmajavi_speedtest_upload_speed_entity : sensor.speedtest_upload ulm_custom_card_irmajavi_speedtest_color : blue ulm_custom_card_irmajavi_speedtest_router_name : router_name ulm_custom_card_irmajavi_speedtest_router_model : router_model","title":"Usage"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#variables","text":"Variable Example Required Explanation ulm_custom_card_irmajavi_speedtest_router_name Linksys Yes Your router name ulm_custom_card_irmajavi_speedtest_router_model EA8549 Yes Your router model ulm_custom_card_irmajavi_speedtest_color blue Yes The color of the icon ulm_custom_card_irmajavi_speedtest_upload_speed_entity sensor.test2 Yes The upload sensor created by the integration ulm_custom_card_irmajavi_speedtest_download_speed_entity sensor.test3 Yes The download sensor created by the integration","title":"Variables"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#template-code","text":"--- custom_card_irmajavi_speedtest : triggers_update : \"all\" show_name : false show_label : false variables : ulm_custom_card_irmajavi_speedtest_color : \"blue\" ulm_custom_card_irmajavi_speedtest_router_name : \"router_name\" ulm_custom_card_irmajavi_speedtest_router_model : \"router_model\" styles : grid : - grid-template-areas : \"'item1' 'item2' 'item3'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"none\" show_last_changed : false show_label : true show_name : true show_icon : true label : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_router_model ]]] name : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_router_name ]]] icon : \"mdi:wifi\" styles : icon : - color : >- [[[ return `rgba(var(--color-${variables.ulm_custom_card_irmajavi_speedtest_color}), 1)`; ]]] - width : \"32px\" label : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" name : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" img_cell : - background-color : >- [[[ return `rgba(var(--color-${variables.ulm_custom_card_irmajavi_speedtest_color}), 0.2)`; ]]] - border-radius : \"50%\" - place-self : \"center\" - width : \"62px\" - height : \"62px\" grid : - grid-template-areas : \"'i' 'n' 'l'\" card : - box-shadow : \"none\" size : \"20px\" item2 : card : type : \"custom:button-card\" tap_action : action : \"call-service\" service : \"speedtestdotnet.speedtest\" color : \"var(--google-grey)\" show_icon : true show_label : false show_name : true styles : custom_fields : item1 : - justify-self : \"end\" icon : - color : \"rgba(var(--color-theme),0.9)\" - width : \"20px\" img_cell : - background-color : \"none\" - place-self : \"center\" - justify-self : \"start\" - width : \"40px\" - height : \"20px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"16px\" grid : - grid-template-areas : \"i n item1\" - grid-template-columns : \"min-content\" - grid-template-rows : \"auto\" card : - box-shadow : \"none\" - border-radius : \"10px\" - border : \"2px solid var(--google-grey)\" - padding_bottom : \"-8px\" - height : \"40px\" - padding-top : \"5px\" - padding-left : \"5px\" name : \"Speedtest\" icon : \"mdi:speedometer\" custom_fields : item1 : card : type : \"custom:button-card\" show_icon : true show_name : false show_label : false styles : icon : - color : \"rgba(var(--color-theme),0.9)\" - width : \"20px\" - justify-self : \"end\" grid : - grid-template-areas : \"i\" - grid-template-columns : \"auto\" - grid-template-rows : \"auto\" card : - box-shadow : \"none\" icon : \"mdi:chevron-right\" item3 : card : type : \"custom:button-card\" template : \"list_2_items\" custom_fields : item1 : card : type : \"custom:button-card\" tap_action : action : \"more-info\" color : \"var(--google-blue)\" show_label : true show_icon : false name : \"Download Speed\" entity : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity; ]]] label : | [[[ var state1 = \"\"; if (states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].state){ var state1 = states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].state; if (states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].attributes.unit_of_measurement){ state1 += states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].attributes.unit_of_measurement; } } return state1; ]]] styles : icon : - width : \"30px\" - height : \"30px\" label : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"23px\" name : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"auto\" - grid-template-rows : \"min-content\" card : - box-shadow : \"none\" - padding-top : \"15px\" - padding-botton : \"10px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"80px\" item2 : card : type : \"custom:button-card\" color : \"var(--google-blue)\" show_label : true show_icon : false name : \"Upload Speed\" entity : >- [[[ return variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity; ]]] label : | [[[ var state1 = \"\"; if (states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].state){ var state1 = states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].state; if (states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].attributes.unit_of_measurement){ state1 += states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].attributes.unit_of_measurement; } } return state1; ]]] styles : icon : - width : \"30px\" - height : \"30px\" label : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"23px\" name : - align-self : \"center\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"auto\" - grid-template-rows : \"min-content\" card : - box-shadow : \"none\" - padding-top : \"15px\" - padding-botton : \"10px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"80px\"","title":"Template Code"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/","text":"Custom-card \"Weather\" \u00b6 This is a custom-card to display states from weather entities or from a weather entity with multiples attributes (To use it with attributes need to modify the code) Credits \u00b6 Author: irmajavi - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 In your configuration.yaml you need to create a new sensor in order to use the custom date format the card uses. - platform : template sensors : date_long : friendly_name : 'Date and Day of week' value_template : > {% set months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Agu\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"] %} {% set days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"] %} {{ months[now().month-1] }}.{{ now().day }}th. {{ days[now().weekday()] }} Usage \u00b6 type : custom:button-card template : custom_card_irmajavi_weather variables : ulm_custom_card_irmajavi_weather : weather.aguada_2 ulm_custom_card_irmajavi_weather_entity_1 : sensor.aguada_wind ulm_custom_card_irmajavi_weather_entity_2 : sensor.aguada_precipitation ulm_custom_card_irmajavi_weather_entity_3 : sensor.aguada_uv_index ulm_custom_card_irmajavi_weather_entity_4 : sensor.weather_humidity ulm_custom_card_irmajavi_weather_name_1 : Wind ulm_custom_card_irmajavi_weather_name_2 : Precipitation ulm_custom_card_irmajavi_weather_name_3 : UV ulm_custom_card_irmajavi_weather_name_4 : Humidity ulm_custom_card_irmajavi_weather_temperature_outside : sensor.aguada_realfeel_temperature ulm_custom_card_irmajavi_weather_date : sensor.date_long Variables \u00b6 Variable Example Required Explanation ulm_custom_card_irmajavi_weather weather.yourplace Yes The main entity ulm_custom_card_irmajavi_weather_entity_1 weather.humidity Yes Weather entity ulm_custom_card_irmajavi_weather_entity_2 sensor.test1 Yes Weather entity ulm_custom_card_irmajavi_weather_entity_3 sensor.test2 Yes Weather entity ulm_custom_card_irmajavi_weather_entity_4 sensor.test3 Yes Weather entity ulm_custom_card_irmajavi_weather_name_1 Wind Yes Entity name ulm_custom_card_irmajavi_weather_name_2 Humidity Yes Entity name ulm_custom_card_irmajavi_weather_name_3 UV Index Yes Entity name ulm_custom_card_irmajavi_weather_name_4 Precipitation Yes Entity name ulm_custom_card_irmajavi_weather_temperature_outside sensor.test4 Yes Weather entity ulm_custom_card_irmajavi_weather_date sensor.test5 Yes Custom date format sensor Template Code \u00b6 --- custom_card_irmajavi_weather : show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"'item1' 'item2' 'item3' 'item4'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"30px\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - height : \"160px\" custom_fields : item1 : card : type : \"custom:button-card\" color : \"var(--google-grey)\" show_icon : false show_label : true show_name : true styles : name : - justify-self : \"end\" - align-self : \"end\" - font-weight : \"bold\" - font-size : \"20px\" - border : \"10px solid var(--google-grey)\" - background-color : \"var(--google-grey)\" - color : \"#000000\" - border-radius : \"12px\" - margin-right : \"10px\" - margin-top : \"'-4px'\" label : - align-self : \"start\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" grid : - grid-template-areas : \"'l n item1'\" - grid-template-columns : \"min-content auto min-content\" - grid-template-rows : \"min-content min-content\" card : - box-shadow : \"none\" - border-radius : \"20px\" - border : \"2px solid var(--google-grey)\" - height : \"70px\" label : | [[[ var icon = '\u2754'; if (states[variables.ulm_custom_card_irmajavi_weather].state == 'clear-night'){ var icon = '\ud83c\udf19'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'cloudy'){ var icon = '\u2601\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'exceptional'){ var icon = '\ud83c\udf1e'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'fog'){ var icon = '\ud83c\udf2b\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'hail'){ var icon = '\u26c8\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'lightning'){ var icon = '\u26a1'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'lightning-rainy'){ var icon = '\u26c8\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'partlycloudy'){ var icon = '\u26c5'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'pouring'){ var icon = '\ud83c\udf27\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'rainy'){ var icon = '\ud83d\udca7'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'snowy'){ var icon = '\u2744\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'snowy-rainy'){ var icon = '\ud83c\udf28\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'sunny'){ var icon = '\u2600\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'windy'){ var icon = '\ud83c\udf2a\ufe0f'; } return icon + ' ' + states[variables.ulm_custom_card_irmajavi_weather_date].state; ]]] name : | [[[ var unit = states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].attributes.unit_of_measurement != null ? ' ' + states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].attributes.unit_of_measurement : '' return states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].state + unit; ]]] item2 : card : type : \"custom:button-card\" template : \"list_4_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_1; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_1; ]\" item2 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_2; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_2; ]]]\" item3 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_3; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_3; ]]]\" item4 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_4; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_4; ]]]\" generic_text : show_label : true show_icon : false label : | [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' return entity.state + unit; ]]] styles : name : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" label : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - box-shadow : \"none\"","title":"Weather Custom-card"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#custom-card-weather","text":"This is a custom-card to display states from weather entities or from a weather entity with multiples attributes (To use it with attributes need to modify the code)","title":"Custom-card \"Weather\""},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#credits","text":"Author: irmajavi - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#requirements","text":"In your configuration.yaml you need to create a new sensor in order to use the custom date format the card uses. - platform : template sensors : date_long : friendly_name : 'Date and Day of week' value_template : > {% set months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Agu\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"] %} {% set days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"] %} {{ months[now().month-1] }}.{{ now().day }}th. {{ days[now().weekday()] }}","title":"Requirements"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#usage","text":"type : custom:button-card template : custom_card_irmajavi_weather variables : ulm_custom_card_irmajavi_weather : weather.aguada_2 ulm_custom_card_irmajavi_weather_entity_1 : sensor.aguada_wind ulm_custom_card_irmajavi_weather_entity_2 : sensor.aguada_precipitation ulm_custom_card_irmajavi_weather_entity_3 : sensor.aguada_uv_index ulm_custom_card_irmajavi_weather_entity_4 : sensor.weather_humidity ulm_custom_card_irmajavi_weather_name_1 : Wind ulm_custom_card_irmajavi_weather_name_2 : Precipitation ulm_custom_card_irmajavi_weather_name_3 : UV ulm_custom_card_irmajavi_weather_name_4 : Humidity ulm_custom_card_irmajavi_weather_temperature_outside : sensor.aguada_realfeel_temperature ulm_custom_card_irmajavi_weather_date : sensor.date_long","title":"Usage"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#variables","text":"Variable Example Required Explanation ulm_custom_card_irmajavi_weather weather.yourplace Yes The main entity ulm_custom_card_irmajavi_weather_entity_1 weather.humidity Yes Weather entity ulm_custom_card_irmajavi_weather_entity_2 sensor.test1 Yes Weather entity ulm_custom_card_irmajavi_weather_entity_3 sensor.test2 Yes Weather entity ulm_custom_card_irmajavi_weather_entity_4 sensor.test3 Yes Weather entity ulm_custom_card_irmajavi_weather_name_1 Wind Yes Entity name ulm_custom_card_irmajavi_weather_name_2 Humidity Yes Entity name ulm_custom_card_irmajavi_weather_name_3 UV Index Yes Entity name ulm_custom_card_irmajavi_weather_name_4 Precipitation Yes Entity name ulm_custom_card_irmajavi_weather_temperature_outside sensor.test4 Yes Weather entity ulm_custom_card_irmajavi_weather_date sensor.test5 Yes Custom date format sensor","title":"Variables"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#template-code","text":"--- custom_card_irmajavi_weather : show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"'item1' 'item2' 'item3' 'item4'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"30px\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" - height : \"160px\" custom_fields : item1 : card : type : \"custom:button-card\" color : \"var(--google-grey)\" show_icon : false show_label : true show_name : true styles : name : - justify-self : \"end\" - align-self : \"end\" - font-weight : \"bold\" - font-size : \"20px\" - border : \"10px solid var(--google-grey)\" - background-color : \"var(--google-grey)\" - color : \"#000000\" - border-radius : \"12px\" - margin-right : \"10px\" - margin-top : \"'-4px'\" label : - align-self : \"start\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" grid : - grid-template-areas : \"'l n item1'\" - grid-template-columns : \"min-content auto min-content\" - grid-template-rows : \"min-content min-content\" card : - box-shadow : \"none\" - border-radius : \"20px\" - border : \"2px solid var(--google-grey)\" - height : \"70px\" label : | [[[ var icon = '\u2754'; if (states[variables.ulm_custom_card_irmajavi_weather].state == 'clear-night'){ var icon = '\ud83c\udf19'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'cloudy'){ var icon = '\u2601\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'exceptional'){ var icon = '\ud83c\udf1e'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'fog'){ var icon = '\ud83c\udf2b\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'hail'){ var icon = '\u26c8\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'lightning'){ var icon = '\u26a1'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'lightning-rainy'){ var icon = '\u26c8\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'partlycloudy'){ var icon = '\u26c5'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'pouring'){ var icon = '\ud83c\udf27\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'rainy'){ var icon = '\ud83d\udca7'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'snowy'){ var icon = '\u2744\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'snowy-rainy'){ var icon = '\ud83c\udf28\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'sunny'){ var icon = '\u2600\ufe0f'; } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'windy'){ var icon = '\ud83c\udf2a\ufe0f'; } return icon + ' ' + states[variables.ulm_custom_card_irmajavi_weather_date].state; ]]] name : | [[[ var unit = states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].attributes.unit_of_measurement != null ? ' ' + states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].attributes.unit_of_measurement : '' return states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].state + unit; ]]] item2 : card : type : \"custom:button-card\" template : \"list_4_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_1; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_1; ]\" item2 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_2; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_2; ]]]\" item3 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_3; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_3; ]]]\" item4 : card : type : \"custom:button-card\" template : \"generic_text\" entity : \"[[[ return variables.ulm_custom_card_irmajavi_weather_entity_4; ]]]\" name : \"[[[ return variables.ulm_custom_card_irmajavi_weather_name_4; ]]]\" generic_text : show_label : true show_icon : false label : | [[[ var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : '' return entity.state + unit; ]]] styles : name : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" label : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - box-shadow : \"none\"","title":"Template Code"},{"location":"usage/custom_cards/custom_card_light_colorpick/","text":"Custom-card \"Colorpicker Light Card\" \u00b6 This is a custom-card to add additional function to the light_card . The card uses a slider as well as six conditional icons to pick the color of the light. Credits \u00b6 Author: 13robin37 - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 This card needs the following to function correctly: Component / card required Note light-entity yes RGB Light Card yes Usage \u00b6 - type : custom:button-card template : card_light_colorpick entity : light.your_light variables : ulm_card_light_slider_horizontal_colors_name : Ceiling light ulm_card_light_slider_horizontal_colors_transition : 1 Variables \u00b6 Card type Variable Example Required Explanation all ulm_card_light_slider_horizontal_colors_name Light no This is the name the card shows all ulm_card_light_slider_horizontal_colors_transition 1 no This is the color change transition in seconds","title":"Colorpicker Light Card Custom-card"},{"location":"usage/custom_cards/custom_card_light_colorpick/#custom-card-colorpicker-light-card","text":"This is a custom-card to add additional function to the light_card . The card uses a slider as well as six conditional icons to pick the color of the light.","title":"Custom-card \"Colorpicker Light Card\""},{"location":"usage/custom_cards/custom_card_light_colorpick/#credits","text":"Author: 13robin37 - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_light_colorpick/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_light_colorpick/#requirements","text":"This card needs the following to function correctly: Component / card required Note light-entity yes RGB Light Card yes","title":"Requirements"},{"location":"usage/custom_cards/custom_card_light_colorpick/#usage","text":"- type : custom:button-card template : card_light_colorpick entity : light.your_light variables : ulm_card_light_slider_horizontal_colors_name : Ceiling light ulm_card_light_slider_horizontal_colors_transition : 1","title":"Usage"},{"location":"usage/custom_cards/custom_card_light_colorpick/#variables","text":"Card type Variable Example Required Explanation all ulm_card_light_slider_horizontal_colors_name Light no This is the name the card shows all ulm_card_light_slider_horizontal_colors_transition 1 no This is the color change transition in seconds","title":"Variables"},{"location":"usage/custom_cards/custom_card_media_player_sonos/","text":"Media player: sonos \u00b6 NOTE This card is under review and is not ready to use! Usage #### Example - type : 'custom:button-card' template : card_media_player_sonos_with_controls variables : ulm_card_media_player_with_controls_name : \"Slaapkamer\" ulm_card_media_player_with_controls_entity : media_player.slaapkamer #### Variables Variable Example Required Explanation ulm_card_media_player_with_controls_name Sonos room 1 Yes Name shown in lovelace ulm_card_media_player_with_controls_entity media_player.sonos_room_1 Yes Entity id Template code card_media_player_sonos : size : \"20px\" show_icon : true show_entity_picture : false show_state : false show_name : true template : - \"green_playing\" - \"icon_info_bg\" - \"ulm_language_variables\" label : | [[[ if (entity.state == 'idle'){ return variables.ulm_off; } if (entity.state == 'paused'){ return variables.ulm_paused; } if (entity.state == 'unavailable'){ return variables.ulm_unavailable; } else { return (entity.attributes.source) + ' \u2022 ' + ( Math.round(entity.attributes.volume_level / 0.01)) + '%' ; } ]]] card_media_player_sonos_with_controls : variables : ulm_card_media_player_with_controls_name : \"No name set\" triggers_update : - \"[[[ ulm_card_media_player_with_controls_entity ]]]\" styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"ulm_language_variables\" - \"card_media_player_sonos\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" name : \"[[[ return variables.ulm_card_media_player_with_controls_name ]]]\" styles : card : - box-shadow : \"none\" - padding : \"0px\" item2 : card : type : \"custom:button-card\" template : \"list_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_down\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-minus\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_play_pause\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:pause\" state : - value : \"paused\" icon : \"mdi:play\" - value : \"off\" icon : \"mdi:play\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_up\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-plus\" icon_info_bg_sonos : color : \"var(--google-grey)\" show_icon : true show_label : true show_name : true state : - value : \"unavailable\" styles : custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"3px\" - top : \"8px\" - height : \"18px\" - width : \"18px\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" size : \"20px\" green_playing : state : - styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" value : \"playing\"","title":"Mediaplayer Sonos Custom-card"},{"location":"usage/custom_cards/custom_card_media_player_sonos/#media-player-sonos","text":"NOTE This card is under review and is not ready to use! Usage #### Example - type : 'custom:button-card' template : card_media_player_sonos_with_controls variables : ulm_card_media_player_with_controls_name : \"Slaapkamer\" ulm_card_media_player_with_controls_entity : media_player.slaapkamer #### Variables Variable Example Required Explanation ulm_card_media_player_with_controls_name Sonos room 1 Yes Name shown in lovelace ulm_card_media_player_with_controls_entity media_player.sonos_room_1 Yes Entity id Template code card_media_player_sonos : size : \"20px\" show_icon : true show_entity_picture : false show_state : false show_name : true template : - \"green_playing\" - \"icon_info_bg\" - \"ulm_language_variables\" label : | [[[ if (entity.state == 'idle'){ return variables.ulm_off; } if (entity.state == 'paused'){ return variables.ulm_paused; } if (entity.state == 'unavailable'){ return variables.ulm_unavailable; } else { return (entity.attributes.source) + ' \u2022 ' + ( Math.round(entity.attributes.volume_level / 0.01)) + '%' ; } ]]] card_media_player_sonos_with_controls : variables : ulm_card_media_player_with_controls_name : \"No name set\" triggers_update : - \"[[[ ulm_card_media_player_with_controls_entity ]]]\" styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"ulm_language_variables\" - \"card_media_player_sonos\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" name : \"[[[ return variables.ulm_card_media_player_with_controls_name ]]]\" styles : card : - box-shadow : \"none\" - padding : \"0px\" item2 : card : type : \"custom:button-card\" template : \"list_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_down\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-minus\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" entity : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" tap_action : action : \"call-service\" service : \"media_player.media_play_pause\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:pause\" state : - value : \"paused\" icon : \"mdi:play\" - value : \"off\" icon : \"mdi:play\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" tap_action : action : \"call-service\" service : \"media_player.volume_up\" service_data : entity_id : \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\" icon : \"mdi:volume-plus\" icon_info_bg_sonos : color : \"var(--google-grey)\" show_icon : true show_label : true show_name : true state : - value : \"unavailable\" styles : custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"3px\" - top : \"8px\" - height : \"18px\" - width : \"18px\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] styles : icon : - color : \"rgba(var(--color-theme),0.2)\" label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" state : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bold\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" img_cell : - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"50%\" - place-self : \"center\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" size : \"20px\" green_playing : state : - styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" value : \"playing\"","title":"Media player: sonos"},{"location":"usage/custom_cards/custom_card_mpse_gauge/","text":"Custom-card \"Gauge\" \u00b6 The custom_card_mpse_gauge is used present a value in form of a gauge. The card can handle two gauges so it would be easy to adapt the card to that if required. I prefered the minimal look. Credits \u00b6 Author: mpse Version: 0.1.0 Changelog \u00b6 Initial release. Usage \u00b6 - type : 'custom:button-card' template : custom_card_mpse_gauge entity : sensor.temp_office_temperature variables : ulm_card_mpse_gauge_min : 10 ulm_card_mpse_gauge_max : 30 Requirements \u00b6 Uses this card: https://github.com/custom-cards/dual-gauge-card which can be installed via HACS. Variables \u00b6 Variable Example Required Explanation ulm_card_mpse_gauge_min 0 no Minium value, defaults to 0. ulm_card_mpse_gauge_max 100 no Maximum value, defaults to 100. Template code \u00b6 --- custom_card_mpse_gauge : variables : ulm_card_mpse_gauge_min : 0 ulm_card_mpse_gauge_max : 100 styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" show_name : false show_icon : false custom_fields : item1 : card : entity : \"[[[ return entity.entity_id ]]]\" label : >- [[[ return entity.state; ]]] template : - \"icon_info\" styles : card : - padding : \"12px\" type : \"custom:button-card\" item2 : card : type : \"custom:dual-gauge-card\" min : \"[[[ return variables.ulm_card_mpse_gauge_min ]]]\" max : \"[[[ return variables.ulm_card_mpse_gauge_max ]]]\" title : > [[[ var min = variables.ulm_card_mpse_gauge_min; var max = variables.ulm_card_mpse_gauge_max; if( min == 0 && max == 100 ) return \"\"; return min + ' - ' + max; ]]] shadeInner : false cardwidth : 200 outer : entity : \"[[[ return entity.entity_id ]]]\" inner : entity : \"[[[ return entity.entity_id ]]]\" colors : - color : \"var(--google-blue)\" value : 0 card_mod : style : | div.gauge-value.gauge-value-inner { color: rgba(0,0,0,0); } div.gauge-value.gauge-value-outer { color: rgba(0,0,0,0); } div.gauge-dual-card { margin: 0px 0px; --title-font-size: calc(var(--gauge-card-width) / 16); color: var(--google-grey); }","title":"Gauge Card Custom-card"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#custom-card-gauge","text":"The custom_card_mpse_gauge is used present a value in form of a gauge. The card can handle two gauges so it would be easy to adapt the card to that if required. I prefered the minimal look.","title":"Custom-card \"Gauge\""},{"location":"usage/custom_cards/custom_card_mpse_gauge/#credits","text":"Author: mpse Version: 0.1.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#changelog","text":"Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#usage","text":"- type : 'custom:button-card' template : custom_card_mpse_gauge entity : sensor.temp_office_temperature variables : ulm_card_mpse_gauge_min : 10 ulm_card_mpse_gauge_max : 30","title":"Usage"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#requirements","text":"Uses this card: https://github.com/custom-cards/dual-gauge-card which can be installed via HACS.","title":"Requirements"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#variables","text":"Variable Example Required Explanation ulm_card_mpse_gauge_min 0 no Minium value, defaults to 0. ulm_card_mpse_gauge_max 100 no Maximum value, defaults to 100.","title":"Variables"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#template-code","text":"--- custom_card_mpse_gauge : variables : ulm_card_mpse_gauge_min : 0 ulm_card_mpse_gauge_max : 100 styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" show_name : false show_icon : false custom_fields : item1 : card : entity : \"[[[ return entity.entity_id ]]]\" label : >- [[[ return entity.state; ]]] template : - \"icon_info\" styles : card : - padding : \"12px\" type : \"custom:button-card\" item2 : card : type : \"custom:dual-gauge-card\" min : \"[[[ return variables.ulm_card_mpse_gauge_min ]]]\" max : \"[[[ return variables.ulm_card_mpse_gauge_max ]]]\" title : > [[[ var min = variables.ulm_card_mpse_gauge_min; var max = variables.ulm_card_mpse_gauge_max; if( min == 0 && max == 100 ) return \"\"; return min + ' - ' + max; ]]] shadeInner : false cardwidth : 200 outer : entity : \"[[[ return entity.entity_id ]]]\" inner : entity : \"[[[ return entity.entity_id ]]]\" colors : - color : \"var(--google-blue)\" value : 0 card_mod : style : | div.gauge-value.gauge-value-inner { color: rgba(0,0,0,0); } div.gauge-value.gauge-value-outer { color: rgba(0,0,0,0); } div.gauge-dual-card { margin: 0px 0px; --title-font-size: calc(var(--gauge-card-width) / 16); color: var(--google-grey); }","title":"Template code"},{"location":"usage/custom_cards/custom_card_mpse_printer/","text":"Custom-card \"Printer\" \u00b6 The custom_card_mpse_printer is used to display the status of a printer and the toner. Credits \u00b6 Author: mpse (based on clemalex post) Version: 0.3.0 Changelog \u00b6 0.3.0 Updated documention. Cleanup code in card. Updated colors to match input values. 0.2.0 Added reference to used card. Fixed yaml indentation 0.1.0 Initial release adapted from a post on home assistant forum by user clemalex. Usage \u00b6 - type : 'custom:button-card' template : custom_card_mpse_printer entity : sensor.hp_color_laser_mfp_178nw variables : ulm_card_printer_name : HP Color Laser MFP 178nw ulm_card_printer_black_name : sensor.hp_color_laser_mfp_178nw_black_toner ulm_card_printer_yellow_name : sensor.hp_color_laser_mfp_178nw_yellow_toner ulm_card_printer_cyan_name : sensor.hp_color_laser_mfp_178nw_cyan_toner ulm_card_printer_magenta_name : sensor.hp_color_laser_mfp_178nw_magenta_toner Requirements \u00b6 Uses this card: https://github.com/custom-cards/bar-card Tested with the IPP Integration from Home Assistant: https://www.home-assistant.io/integrations/ipp On my printer i cannot get any state update, it always reports idle. I wanted to highlight the button when the printer is active. Variables \u00b6 Variable Example Required Explanation ulm_card_printer_name HP Color Laser MFP 178nw yes Name of printer to display on card ulm_card_printer_black_name sensor.hp_color_laser_mfp_178nw_black_toner yes Name of black toner sensor ulm_card_printer_yellow_name sensor.hp_color_laser_mfp_178nw_yellow_toner yes Name of yellow toner sensor ulm_card_printer_cyan_name sensor.hp_color_laser_mfp_178nw_cyan_toner yes Name of cyan toner sensor ulm_card_printer_magenta_name sensor.hp_color_laser_mfp_178nw_magenta_toner yes Name of magenta toner sensor Template code \u00b6 --- custom_card_mpse_printer : show_icon : false show_name : false show_label : false styles : card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" grid : - grid-template-areas : \"'item1' 'item2' 'item3' 'item4' 'item5'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content\" custom_fields : item1 : card : entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_printer_name ]]]\" label : >- [[[ return entity.state; ]]] template : - \"icon_info\" - \"custom_card_mpse_printer_blue\" styles : card : - padding : \"12px\" type : \"custom:button-card\" item2 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"black\" entities : - entity : \"[[[ return variables.ulm_card_printer_black_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px; } item3 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"rgb(250,255,0)\" entities : - entity : \"[[[ return variables.ulm_card_printer_yellow_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px; } item4 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"rgb(248,0,255)\" entities : - entity : \"[[[ return variables.ulm_card_printer_magenta_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px; } item5 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"rgb(0,255,255)\" entities : - entity : \"[[[ return variables.ulm_card_printer_cyan_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px 16px 16px; } custom_card_mpse_printer_blue : state : - styles : icon : - color : \"rgba(var(--color-blue),1)\" label : - color : \"rgba(var(--color-blue-text),1)\" name : - color : \"rgba(var(--color-blue-text),1)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" card : - background-color : \"rgba(var(--color-background-blue), var(--opacity-bg))\" operator : template value : > [[[ return entity.state!=\"idle\" ? true : false ]]]","title":"Printer Card Custom-card"},{"location":"usage/custom_cards/custom_card_mpse_printer/#custom-card-printer","text":"The custom_card_mpse_printer is used to display the status of a printer and the toner.","title":"Custom-card \"Printer\""},{"location":"usage/custom_cards/custom_card_mpse_printer/#credits","text":"Author: mpse (based on clemalex post) Version: 0.3.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_mpse_printer/#changelog","text":"0.3.0 Updated documention. Cleanup code in card. Updated colors to match input values. 0.2.0 Added reference to used card. Fixed yaml indentation 0.1.0 Initial release adapted from a post on home assistant forum by user clemalex.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_mpse_printer/#usage","text":"- type : 'custom:button-card' template : custom_card_mpse_printer entity : sensor.hp_color_laser_mfp_178nw variables : ulm_card_printer_name : HP Color Laser MFP 178nw ulm_card_printer_black_name : sensor.hp_color_laser_mfp_178nw_black_toner ulm_card_printer_yellow_name : sensor.hp_color_laser_mfp_178nw_yellow_toner ulm_card_printer_cyan_name : sensor.hp_color_laser_mfp_178nw_cyan_toner ulm_card_printer_magenta_name : sensor.hp_color_laser_mfp_178nw_magenta_toner","title":"Usage"},{"location":"usage/custom_cards/custom_card_mpse_printer/#requirements","text":"Uses this card: https://github.com/custom-cards/bar-card Tested with the IPP Integration from Home Assistant: https://www.home-assistant.io/integrations/ipp On my printer i cannot get any state update, it always reports idle. I wanted to highlight the button when the printer is active.","title":"Requirements"},{"location":"usage/custom_cards/custom_card_mpse_printer/#variables","text":"Variable Example Required Explanation ulm_card_printer_name HP Color Laser MFP 178nw yes Name of printer to display on card ulm_card_printer_black_name sensor.hp_color_laser_mfp_178nw_black_toner yes Name of black toner sensor ulm_card_printer_yellow_name sensor.hp_color_laser_mfp_178nw_yellow_toner yes Name of yellow toner sensor ulm_card_printer_cyan_name sensor.hp_color_laser_mfp_178nw_cyan_toner yes Name of cyan toner sensor ulm_card_printer_magenta_name sensor.hp_color_laser_mfp_178nw_magenta_toner yes Name of magenta toner sensor","title":"Variables"},{"location":"usage/custom_cards/custom_card_mpse_printer/#template-code","text":"--- custom_card_mpse_printer : show_icon : false show_name : false show_label : false styles : card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"0px\" grid : - grid-template-areas : \"'item1' 'item2' 'item3' 'item4' 'item5'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content\" custom_fields : item1 : card : entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return variables.ulm_card_printer_name ]]]\" label : >- [[[ return entity.state; ]]] template : - \"icon_info\" - \"custom_card_mpse_printer_blue\" styles : card : - padding : \"12px\" type : \"custom:button-card\" item2 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"black\" entities : - entity : \"[[[ return variables.ulm_card_printer_black_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px; } item3 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"rgb(250,255,0)\" entities : - entity : \"[[[ return variables.ulm_card_printer_yellow_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px; } item4 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"rgb(248,0,255)\" entities : - entity : \"[[[ return variables.ulm_card_printer_magenta_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px; } item5 : card : type : \"custom:bar-card\" height : \"20px\" positions : name : off value : \"inside\" icon : off indicator : off minmax : off color : \"rgb(0,255,255)\" entities : - entity : \"[[[ return variables.ulm_card_printer_cyan_name ]]]\" style : | bar-card-currentbar{ border: 0.01rem solid rgba(var(--color-theme),.4); } bar-card-backgroundbar{ display: none; } bar-card-name{ width: 2rem; margin-right: 40px !important; } bar-card-value{ width: 2rem; margin-left: 40px !important; justify-content: center; display: flex; color: grey; } bar-card-background{ margin: 4px 0 4px 0 !important; text-align: initial; } ha-card{ --bar-card-border-radius: 5px; border-radius: 0px; box-shadow: none; } #states{ padding: 0 16px 16px 16px; } custom_card_mpse_printer_blue : state : - styles : icon : - color : \"rgba(var(--color-blue),1)\" label : - color : \"rgba(var(--color-blue-text),1)\" name : - color : \"rgba(var(--color-blue-text),1)\" img_cell : - background-color : \"rgba(var(--color-blue), 0.2)\" card : - background-color : \"rgba(var(--color-background-blue), var(--opacity-bg))\" operator : template value : > [[[ return entity.state!=\"idle\" ? true : false ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/","text":"Custom-card \"Thermostat\" \u00b6 The custom_card_mpse_thermostat is used to display temperature and control a simple thermostat. I have tested this with a cooling function that I use to control my beer fridge. The buttons are used to lower/raise the set temperature which is displayed between the arrows. It uses the defined steps configured on the thermostat (In my case I use esphome to control the frigde). The current temperature is shown in the grey label. The card uses the standard language parameters. Credits \u00b6 Author: mpse Version: 0.1.0 Changelog \u00b6 0.1.0 Initial release inspired from various posts on home assistant forum. Usage \u00b6 - type : 'custom:button-card' template : custom_card_mpse_thermostat entity : climate.fermentation_climate_controller Requirements \u00b6 Variables \u00b6 Variable Example Required Explanation None Template code \u00b6 --- custom_card_mpse_thermostat : show_name : false show_icon : false template : - \"icon_info_bg\" - \"ulm_language_variables\" hold_action : action : \"more-info\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" tap_action : action : more-info entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.name ]]]\" label : >- [[[ var label = variables.ulm_off ; if (entity.state =='off'){ label = variables.ulm_off ; }else if (entity.state == 'heat'){ label = variables.ulm_heat ; }else if (entity.state == 'cool'){ label = variables.ulm_cool ; }else{ label = variables.ulm_idle; } if(entity.attributes.temperature){ return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + ' (' + entity.attributes.hvac_action + ')'; } return label; ]]] icon : > [[[ var icon = \"mdi:thermostat\"; var state = entity.state; if( state == \"cool\" ) icon = \"mdi:snowflake\" else if( state == \"heat\" ) icon = \"mdi:fire\" return icon; ]]] state : - operator : \"template\" value : [[[ return entity.state == 'heat' ]]] styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" card : - background-color : \"rgba(var(--color-background-red),var(--opacity-bg))\" name : - color : \"rgba(var(--color-red-text),1)\" label : - color : \"rgba(var(--color-red-text),1)\" - operator : \"template\" value : [[[ return entity.state == 'cool' ]]] styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" card : - background-color : \"rgba(var(--color-background-blue),var(--opacity-bg))\" name : - color : \"rgba(var(--color-blue-text),1)\" label : - color : \"rgba(var(--color-blue-text),1)\" item2 : card : type : \"custom:button-card\" template : list_items custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-down\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature - entity.attributes.target_temp_step ]]]\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.attributes.temperature + '\u00b0C' ]]]\" styles : card : - box-shadow : \"none\" show_icon : false tap_action : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-up\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature + entity.attributes.target_temp_step ]]]\"","title":"Thermostat mpse Custom-card"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#custom-card-thermostat","text":"The custom_card_mpse_thermostat is used to display temperature and control a simple thermostat. I have tested this with a cooling function that I use to control my beer fridge. The buttons are used to lower/raise the set temperature which is displayed between the arrows. It uses the defined steps configured on the thermostat (In my case I use esphome to control the frigde). The current temperature is shown in the grey label. The card uses the standard language parameters.","title":"Custom-card \"Thermostat\""},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#credits","text":"Author: mpse Version: 0.1.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#changelog","text":"0.1.0 Initial release inspired from various posts on home assistant forum.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#usage","text":"- type : 'custom:button-card' template : custom_card_mpse_thermostat entity : climate.fermentation_climate_controller","title":"Usage"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#requirements","text":"","title":"Requirements"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#variables","text":"Variable Example Required Explanation None","title":"Variables"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#template-code","text":"--- custom_card_mpse_thermostat : show_name : false show_icon : false template : - \"icon_info_bg\" - \"ulm_language_variables\" hold_action : action : \"more-info\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"ulm_language_variables\" tap_action : action : more-info entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.name ]]]\" label : >- [[[ var label = variables.ulm_off ; if (entity.state =='off'){ label = variables.ulm_off ; }else if (entity.state == 'heat'){ label = variables.ulm_heat ; }else if (entity.state == 'cool'){ label = variables.ulm_cool ; }else{ label = variables.ulm_idle; } if(entity.attributes.temperature){ return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + ' (' + entity.attributes.hvac_action + ')'; } return label; ]]] icon : > [[[ var icon = \"mdi:thermostat\"; var state = entity.state; if( state == \"cool\" ) icon = \"mdi:snowflake\" else if( state == \"heat\" ) icon = \"mdi:fire\" return icon; ]]] state : - operator : \"template\" value : [[[ return entity.state == 'heat' ]]] styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" card : - background-color : \"rgba(var(--color-background-red),var(--opacity-bg))\" name : - color : \"rgba(var(--color-red-text),1)\" label : - color : \"rgba(var(--color-red-text),1)\" - operator : \"template\" value : [[[ return entity.state == 'cool' ]]] styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" card : - background-color : \"rgba(var(--color-background-blue),var(--opacity-bg))\" name : - color : \"rgba(var(--color-blue-text),1)\" label : - color : \"rgba(var(--color-blue-text),1)\" item2 : card : type : \"custom:button-card\" template : list_items custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-down\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature - entity.attributes.target_temp_step ]]]\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id ]]]\" name : \"[[[ return entity.attributes.temperature + '\u00b0C' ]]]\" styles : card : - box-shadow : \"none\" show_icon : false tap_action : \"none\" item3 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:arrow-up\" tap_action : action : \"call-service\" service : \"climate.set_temperature\" service_data : entity_id : \"[[[ return entity.entity_id ]]]\" temperature : \"[[[ return entity.attributes.temperature + entity.attributes.target_temp_step ]]]\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/","text":"Custom-card \"WiFi Signal\" \u00b6 The custom_card_mpse_wifisignal is used to display the status of a wifi signal (dBm). Icon changes based on signal strenght. Credits \u00b6 Author: mpse Version: 0.2.0 Changelog \u00b6 0.2.0 Cleanup and updated documentation. 0.1.0 Initial release. Usage \u00b6 - type : 'custom:button-card' template : custom_card_mpse_wifisignal entity : sensor.wifi_julgran Requirements \u00b6 No special cards needed. Variables \u00b6 Variable Example Required Explanation None Template code \u00b6 --- custom_card_mpse_wifisignal : template : - \"icon_info_bg\" icon : | [[[ var icon = \"mdi:wifi-strength-off\"; var signal = states[entity.entity_id].state; if (signal >= -50) { icon = \"mdi:wifi-strength-4\"; } else if (signal >= -60) { icon = \"mdi:wifi-strength-3\"; } else if (signal >= -70) { icon = \"mdi:wifi-strength-2\"; } else if (signal >= -80) { icon = \"mdi:wifi-strength-1\"; } return icon; ]]] label : | [[[ return entity.state + \" dBm\"; ]]]","title":"Wifi Signal Custom-card"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#custom-card-wifi-signal","text":"The custom_card_mpse_wifisignal is used to display the status of a wifi signal (dBm). Icon changes based on signal strenght.","title":"Custom-card \"WiFi Signal\""},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#credits","text":"Author: mpse Version: 0.2.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#changelog","text":"0.2.0 Cleanup and updated documentation. 0.1.0 Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#usage","text":"- type : 'custom:button-card' template : custom_card_mpse_wifisignal entity : sensor.wifi_julgran","title":"Usage"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#requirements","text":"No special cards needed.","title":"Requirements"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#variables","text":"Variable Example Required Explanation None","title":"Variables"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#template-code","text":"--- custom_card_mpse_wifisignal : template : - \"icon_info_bg\" icon : | [[[ var icon = \"mdi:wifi-strength-off\"; var signal = states[entity.entity_id].state; if (signal >= -50) { icon = \"mdi:wifi-strength-4\"; } else if (signal >= -60) { icon = \"mdi:wifi-strength-3\"; } else if (signal >= -70) { icon = \"mdi:wifi-strength-2\"; } else if (signal >= -80) { icon = \"mdi:wifi-strength-1\"; } return icon; ]]] label : | [[[ return entity.state + \" dBm\"; ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_nas/","text":"Custom-card \"NAS\" \u00b6 The card-nas shows you a specific sensor value from your NAS, eg. the disk space used. Credits \u00b6 Author: tben - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release 1.0.1 Fix card & add Screenshot Usage \u00b6 - type : 'custom:button-card' template : - custom_card_nas variables : ulm_custom_card_nas_sensor : sensor.pinas_disk_use ulm_custom_card_nas_text : \"HDD used\" ulm_custom_cad_nas_unit : % Requirements \u00b6 n/a Variables \u00b6 Variable Example Required Explanation ulm_custom_card_nas_sensor sensor.nas_disk_use yes The sensor that shows your sensor state, eg. the disk use on your NAS ulm_custom_card_nas_text HDD used yes The text to show on your card ulm_custom_card_nas_unit % yes The unit to show after your sensors state Template code \u00b6 --- custom_card_nas : template : - \"blue_no_state\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_custom_card_nas_sensor; ]]]\" show_icon : true show_label : true show_name : true icon : |- [[[ return \"mdi:nas\"; ]]] label : |- [[[ return variables.ulm_custom_card_nas_text + \" \" + states[variables.ulm_custom_card_nas_sensor].state + variables.ulm_custom_card_nas_unit; ]]] name : |- [[[ return \"Nas\"; ]]] size : \"20px\" styles : label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\"","title":"NAS Custom-card"},{"location":"usage/custom_cards/custom_card_nas/#custom-card-nas","text":"The card-nas shows you a specific sensor value from your NAS, eg. the disk space used.","title":"Custom-card \"NAS\""},{"location":"usage/custom_cards/custom_card_nas/#credits","text":"Author: tben - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_nas/#changelog","text":"1.0.0 Initial release 1.0.1 Fix card & add Screenshot","title":"Changelog"},{"location":"usage/custom_cards/custom_card_nas/#usage","text":"- type : 'custom:button-card' template : - custom_card_nas variables : ulm_custom_card_nas_sensor : sensor.pinas_disk_use ulm_custom_card_nas_text : \"HDD used\" ulm_custom_cad_nas_unit : %","title":"Usage"},{"location":"usage/custom_cards/custom_card_nas/#requirements","text":"n/a","title":"Requirements"},{"location":"usage/custom_cards/custom_card_nas/#variables","text":"Variable Example Required Explanation ulm_custom_card_nas_sensor sensor.nas_disk_use yes The sensor that shows your sensor state, eg. the disk use on your NAS ulm_custom_card_nas_text HDD used yes The text to show on your card ulm_custom_card_nas_unit % yes The unit to show after your sensors state","title":"Variables"},{"location":"usage/custom_cards/custom_card_nas/#template-code","text":"--- custom_card_nas : template : - \"blue_no_state\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_custom_card_nas_sensor; ]]]\" show_icon : true show_label : true show_name : true icon : |- [[[ return \"mdi:nas\"; ]]] label : |- [[[ return variables.ulm_custom_card_nas_text + \" \" + states[variables.ulm_custom_card_nas_sensor].state + variables.ulm_custom_card_nas_unit; ]]] name : |- [[[ return \"Nas\"; ]]] size : \"20px\" styles : label : - justify-self : \"start\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" - margin-left : \"12px\" name : - align-self : \"end\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - border-radius : \"50%\" - place-self : \"center\" - width : \"42px\" - height : \"42px\" grid : - grid-template-areas : \"'i n' 'i l'\" - grid-template-columns : \"min-content auto\" - grid-template-rows : \"min-content min-content\" card : - border-radius : \"20px\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_nik_clock/","text":"Custom-card \"Tablet clock Card\" \u00b6 This is a custom-card that shows the currenct time and Date. This is designed for a tablet or big monitor. Credits \u00b6 Author: Nik - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 To have all the Minimalist Card and Custom Cards installed Usage \u00b6 - type : \"custom:button-card\" template : custom_card_nik_clock variables : ulm_custom_card_nik_clock_switch : input_boolean.menu_tablet ulm_custom_card_nik_clock_switch_enable : false Variables \u00b6 Variable Example Required Explanation ulm_custom_card_nik_clock_switch lock.input_boolean.menu_tablet no This is an optional hidden switch to combine with a state-switch card to use some additional logics. ulm_custom_card_nik_clock_switch_enable true / false no Default is false. It enables the options above. Template Sensor Code \u00b6 --- custom_card_nik_clock : template : - \"ulm_language_variables\" variables : ulm_custom_card_nik_clock_switch : \"[[[ return variables.ulm_custom_card_nik_clock_switch ]]]\" ulm_custom_card_nik_clock_switch_enable : false show_icon : false show_name : true show_state : false show_label : true name : > [[[ const time = new Date(); let hour = time.getHours(); let minute = (time.getMinutes()<10?'0':'') + time.getMinutes() return hour + \":\" + minute; ]]] layout : \"vertical\" label : > [[[ const event = new Date(); const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }; var locale = variables.ulm_language; let formatted_date = event.toLocaleDateString(locale, options); return formatted_date; ]]] tap_action : action : > [[[ if (variables.ulm_custom_card_nik_clock_switch_enable){ return 'call-service' } else{ return 'none' } ]]] service : \"input_boolean.toggle\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_nik_clock_switch ]]]\" styles : card : - background-color : \"transparent\" - height : \"100px\" - box-shadow : \"none\" name : - font-size : \"290%\" - font-weight : \"bold\" - justify-self : \"center\" label : - justify-self : \"center\" - font-size : \"110%\"","title":"Tablet Clock Card"},{"location":"usage/custom_cards/custom_card_nik_clock/#custom-card-tablet-clock-card","text":"This is a custom-card that shows the currenct time and Date. This is designed for a tablet or big monitor.","title":"Custom-card \"Tablet clock Card\""},{"location":"usage/custom_cards/custom_card_nik_clock/#credits","text":"Author: Nik - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_nik_clock/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_nik_clock/#requirements","text":"To have all the Minimalist Card and Custom Cards installed","title":"Requirements"},{"location":"usage/custom_cards/custom_card_nik_clock/#usage","text":"- type : \"custom:button-card\" template : custom_card_nik_clock variables : ulm_custom_card_nik_clock_switch : input_boolean.menu_tablet ulm_custom_card_nik_clock_switch_enable : false","title":"Usage"},{"location":"usage/custom_cards/custom_card_nik_clock/#variables","text":"Variable Example Required Explanation ulm_custom_card_nik_clock_switch lock.input_boolean.menu_tablet no This is an optional hidden switch to combine with a state-switch card to use some additional logics. ulm_custom_card_nik_clock_switch_enable true / false no Default is false. It enables the options above.","title":"Variables"},{"location":"usage/custom_cards/custom_card_nik_clock/#template-sensor-code","text":"--- custom_card_nik_clock : template : - \"ulm_language_variables\" variables : ulm_custom_card_nik_clock_switch : \"[[[ return variables.ulm_custom_card_nik_clock_switch ]]]\" ulm_custom_card_nik_clock_switch_enable : false show_icon : false show_name : true show_state : false show_label : true name : > [[[ const time = new Date(); let hour = time.getHours(); let minute = (time.getMinutes()<10?'0':'') + time.getMinutes() return hour + \":\" + minute; ]]] layout : \"vertical\" label : > [[[ const event = new Date(); const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }; var locale = variables.ulm_language; let formatted_date = event.toLocaleDateString(locale, options); return formatted_date; ]]] tap_action : action : > [[[ if (variables.ulm_custom_card_nik_clock_switch_enable){ return 'call-service' } else{ return 'none' } ]]] service : \"input_boolean.toggle\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_nik_clock_switch ]]]\" styles : card : - background-color : \"transparent\" - height : \"100px\" - box-shadow : \"none\" name : - font-size : \"290%\" - font-weight : \"bold\" - justify-self : \"center\" label : - justify-self : \"center\" - font-size : \"110%\"","title":"Template Sensor Code"},{"location":"usage/custom_cards/custom_card_nik_door/","text":"Custom-card \"Minimal Door Lock\" \u00b6 This is a custom-card that shows the currenct state of your Lock and allows you to open and close it showing the state with a Minimal Design. Credits \u00b6 Author: Nik - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 To have the Minimalist cards and custom cards installed Usage \u00b6 - type : 'custom:button-card' template : custom_card_nik_door entity : sensor.nuki_blindato_door_security_state variables : ulm_custom_card_entity_1_name : Blindato ulm_custom_card_entity_1_lock : lock.nuki_blindato_lock Variables \u00b6 Variable Example Required Explanation ulm_custom_card_entity_1_name sensor.nuki_blindato_door_security_state Yes Your Door Name ulm_custom_card_entity_1_lock lock.nuki_blindato_lock Yes Your Door Lock entity entity sensor.nuki_blindato_door_security_state Yes Your door sensor to track \"Open\" and \"Close\" state. Template Code \u00b6 --- custom_card_nik_door : template : - \"ulm_language_variables\" variables : ulm_custom_card_entity_1_name : \"[[[ return variables.ulm_custom_card_entity_1_name]]]\" ulm_custom_card_entity_1_lock : \"[[[ return variables.ulm_custom_card_entity_1_lock]]]\" show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : > [[[ var areas = []; areas.push(\"item1 item1\"); areas.push(\"item2 item2\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : \"1fr 1fr\" - grid-template-rows : \"min-content\" \"min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id]]]\" icon : \"mdi:door\" styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" tap_action : action : \"none\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id]]]\" name : \"[[[ return variables.ulm_custom_card_entity_1_name]]]\" label : > [[[ return entity.state ]]] item2 : card : type : \"custom:button-card\" template : \"list_2_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:lock-open-variant\" entity : \"[[[ return entity.entity_id]]]\" tap_action : action : \"call-service\" service : \"lock.open\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_entity_1_lock]]]\" state : - value : \"Open\" styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" - value : \"Closed & Unlocked\" styles : icon : - color : \"rgba(var(--color-yellow),1)\" img_cell : - background-color : \"rgba(var(--color-yellow),0.2)\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:lock\" entity : \"[[[ return entity.entity_id]]]\" tap_action : action : \"call-service\" service : \"lock.lock\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_entity_1_lock]]]\" state : - value : \"Closed & Locked\" styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green),0.2)\"","title":"Minimal Door Lock Card"},{"location":"usage/custom_cards/custom_card_nik_door/#custom-card-minimal-door-lock","text":"This is a custom-card that shows the currenct state of your Lock and allows you to open and close it showing the state with a Minimal Design.","title":"Custom-card \"Minimal Door Lock\""},{"location":"usage/custom_cards/custom_card_nik_door/#credits","text":"Author: Nik - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_nik_door/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_nik_door/#requirements","text":"To have the Minimalist cards and custom cards installed","title":"Requirements"},{"location":"usage/custom_cards/custom_card_nik_door/#usage","text":"- type : 'custom:button-card' template : custom_card_nik_door entity : sensor.nuki_blindato_door_security_state variables : ulm_custom_card_entity_1_name : Blindato ulm_custom_card_entity_1_lock : lock.nuki_blindato_lock","title":"Usage"},{"location":"usage/custom_cards/custom_card_nik_door/#variables","text":"Variable Example Required Explanation ulm_custom_card_entity_1_name sensor.nuki_blindato_door_security_state Yes Your Door Name ulm_custom_card_entity_1_lock lock.nuki_blindato_lock Yes Your Door Lock entity entity sensor.nuki_blindato_door_security_state Yes Your door sensor to track \"Open\" and \"Close\" state.","title":"Variables"},{"location":"usage/custom_cards/custom_card_nik_door/#template-code","text":"--- custom_card_nik_door : template : - \"ulm_language_variables\" variables : ulm_custom_card_entity_1_name : \"[[[ return variables.ulm_custom_card_entity_1_name]]]\" ulm_custom_card_entity_1_lock : \"[[[ return variables.ulm_custom_card_entity_1_lock]]]\" show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : > [[[ var areas = []; areas.push(\"item1 item1\"); areas.push(\"item2 item2\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : \"1fr 1fr\" - grid-template-rows : \"min-content\" \"min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_more_info\" custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id]]]\" icon : \"mdi:door\" styles : icon : - color : \"rgba(var(--color-blue),1)\" img_cell : - background-color : \"rgba(var(--color-blue),0.2)\" tap_action : action : \"none\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return entity.entity_id]]]\" name : \"[[[ return variables.ulm_custom_card_entity_1_name]]]\" label : > [[[ return entity.state ]]] item2 : card : type : \"custom:button-card\" template : \"list_2_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:lock-open-variant\" entity : \"[[[ return entity.entity_id]]]\" tap_action : action : \"call-service\" service : \"lock.open\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_entity_1_lock]]]\" state : - value : \"Open\" styles : icon : - color : \"rgba(var(--color-red),1)\" img_cell : - background-color : \"rgba(var(--color-red),0.2)\" - value : \"Closed & Unlocked\" styles : icon : - color : \"rgba(var(--color-yellow),1)\" img_cell : - background-color : \"rgba(var(--color-yellow),0.2)\" item2 : card : type : \"custom:button-card\" template : \"widget_icon\" icon : \"mdi:lock\" entity : \"[[[ return entity.entity_id]]]\" tap_action : action : \"call-service\" service : \"lock.lock\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_entity_1_lock]]]\" state : - value : \"Closed & Locked\" styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green),0.2)\"","title":"Template Code"},{"location":"usage/custom_cards/custom_card_nik_nas/","text":"Custom-card \"Nas Summary Card\" \u00b6 This is a custom-card that shows you a summary for your NAS with sensors, Wake on Lan and collapsed info. Once the NAS is off or unavailable it collapses the info. Credits \u00b6 Author: Nik - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 To have the Minimalist cards and custom cards installed Usage \u00b6 - type : \"custom:button-card\" template : \"custom_card_nik_nas\" entity : switch.qnap_wol variables : graph_span : \"1d\" chart_type : \"radialBar\" entity_1 : entity_id : \"sensor.nas_cpu_temperature\" icon : '' name : \"Temp\" color : \"yellow\" max_value : 100 entity_2 : entity_id : \"sensor.nas_memory_usage\" icon : '' name : \"Memory\" color : \"blue\" max_value : 100 entity_3 : entity_id : \"sensor.nas_cpu_usage\" icon : '' name : \"CPU\" color : \"green\" max_value : 100 entity_4 : entity_id : \"sensor.disk_use_percent\" icon : \"mdi:harddisk\" name : \"Disk\" color : \"red\" Variables \u00b6 Variable Example Required Explanation entity switch.qnap_wol yes The Switch to turn On or Off the NAS chart_type line, scatter, pie, donut or radialBar yes The chart type you want to display graph_span 1h, 12min, 1d, 1h25, 10sec, ... yes The span of the graph as a time interval entity_id sensor.disk_use_percent yes Entity sensor of choice. 4 entities must be added icon mdi:cpu-64-bit no mdi icon you want to be exposed in the img_cell, '' will return entity.attributes.icon name name for the used sensor no '' will return entity.attributes.friendly_name color green, blue, yellow, red or grey no if you don't use the color variable it will choice a random color max_value 10, 300, ... no Maximum value of the sensor. Default will be 100 Template Code \u00b6 --- custom_card_nik_nas : variables : entity_1 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\", \"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\", \"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\",\"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_4 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\",\"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] show_name : false show_state : false show_label : false show_icon : false show_last_changed : false show_entity_picture : false styles : grid : - grid-template-areas : > [[[ var areas = []; if (entity.state == \"off\" || entity.state == \"unavailable\") { areas.push(\"item5\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; } else { areas.push(\"item4 item4\"); areas.push(\"item1 radial\"); areas.push(\"item2 radial\"); areas.push(\"item3 radial\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; } ]]] - grid-template-columns : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"1fr\"; } else { return \"35% 65%\"; } ]]] - grid-template-rows : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"min-content\"; } else { return \"1fr\"; } ]]] card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item2 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item3 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item4 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item5 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"block\"; } else { return \"none\"; } ]]] radial : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_1.entity_id ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" template : \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" template : \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item3 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" template : \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item4 : card : type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : \"card_input_boolean\" entity : \"[[[ return entity.entity_id]]]\" icon : \"mdi:nas\" name : \"Status\" styles : card : - background-color : \"transparent\" - box-shadow : \"none\" - border : \"2px solid var(--google-grey)\" tap_action : action : \"more-info\" - type : \"custom:button-card\" template : \"card_generic_swap\" entity : \"[[[ return variables.entity_4.entity_id ]]]\" icon : \"[[[ return variables.entity_4.icon ]]]\" name : \"[[[ return variables.entity_4.name ]]]\" styles : card : - background-color : \"transparent\" - box-shadow : \"none\" - border : \"2px solid var(--google-grey)\" icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 0.20)`;]]]\" tap_action : action : \"none\" item5 : card : type : \"custom:button-card\" template : \"card_input_boolean\" entity : \"[[[ return entity.entity_id]]]\" icon : \"mdi:nas\" name : \"Status\" styles : card : - background-color : \"transparent\" - box-shadow : \"none\" - border : \"2px solid var(--google-grey)\" tap_action : action : \"more-info\" radial : card : type : \"custom:apexcharts-card\" graph_span : \"[[[ return variables.graph_span ]]]\" chart_type : \"[[[ return variables.chart_type ]]]\" style : | ha-card { border-radius: \"var(--border-radius)\"; box-shadow: none; padding-left: 10px; padding-bottom: 0px; } header : show : false apex_config : title : floating : false align : \"top\" style : fontSize : \"2px\" fontWeight : \"bold\" chart : foreColor : \"rgb(148,148,148)\" offsetY : 5 legend : show : false series : - entity : \"[[[ return variables.entity_1.entity_id ]]]\" name : \"[[[ return variables.entity_1_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_1.color})`;]]]\" max : \"[[[ return variables.entity_1.max_value ]]]\" - entity : \"[[[ return variables.entity_2.entity_id ]]]\" name : \"[[[ return variables.entity_2_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_2.color})`;]]]\" max : \"[[[ return variables.entity_2.max_value ]]]\" - entity : \"[[[ return variables.entity_3.entity_id ]]]\" name : \"[[[ return variables.entity_3_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_3.color})`;]]]\" max : \"[[[ return variables.entity_3.max_value ]]]\"","title":"Nas Summary Card"},{"location":"usage/custom_cards/custom_card_nik_nas/#custom-card-nas-summary-card","text":"This is a custom-card that shows you a summary for your NAS with sensors, Wake on Lan and collapsed info. Once the NAS is off or unavailable it collapses the info.","title":"Custom-card \"Nas Summary Card\""},{"location":"usage/custom_cards/custom_card_nik_nas/#credits","text":"Author: Nik - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_nik_nas/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_nik_nas/#requirements","text":"To have the Minimalist cards and custom cards installed","title":"Requirements"},{"location":"usage/custom_cards/custom_card_nik_nas/#usage","text":"- type : \"custom:button-card\" template : \"custom_card_nik_nas\" entity : switch.qnap_wol variables : graph_span : \"1d\" chart_type : \"radialBar\" entity_1 : entity_id : \"sensor.nas_cpu_temperature\" icon : '' name : \"Temp\" color : \"yellow\" max_value : 100 entity_2 : entity_id : \"sensor.nas_memory_usage\" icon : '' name : \"Memory\" color : \"blue\" max_value : 100 entity_3 : entity_id : \"sensor.nas_cpu_usage\" icon : '' name : \"CPU\" color : \"green\" max_value : 100 entity_4 : entity_id : \"sensor.disk_use_percent\" icon : \"mdi:harddisk\" name : \"Disk\" color : \"red\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_nik_nas/#variables","text":"Variable Example Required Explanation entity switch.qnap_wol yes The Switch to turn On or Off the NAS chart_type line, scatter, pie, donut or radialBar yes The chart type you want to display graph_span 1h, 12min, 1d, 1h25, 10sec, ... yes The span of the graph as a time interval entity_id sensor.disk_use_percent yes Entity sensor of choice. 4 entities must be added icon mdi:cpu-64-bit no mdi icon you want to be exposed in the img_cell, '' will return entity.attributes.icon name name for the used sensor no '' will return entity.attributes.friendly_name color green, blue, yellow, red or grey no if you don't use the color variable it will choice a random color max_value 10, 300, ... no Maximum value of the sensor. Default will be 100","title":"Variables"},{"location":"usage/custom_cards/custom_card_nik_nas/#template-code","text":"--- custom_card_nik_nas : variables : entity_1 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\", \"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_2 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\", \"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_3 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\",\"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] entity_4 : entity_id : icon : \"[[[ return entity.attributes.icon ]]]\" name : \"[[[ return entity.attributes.friendly_name ]]]\" color : > [[[ var colors = [\"yellow\", \"blue\", \"red\",\"green\"]; var color = colors[Math.floor(Math.random() * colors.length)]; return color; ]]] show_name : false show_state : false show_label : false show_icon : false show_last_changed : false show_entity_picture : false styles : grid : - grid-template-areas : > [[[ var areas = []; if (entity.state == \"off\" || entity.state == \"unavailable\") { areas.push(\"item5\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; } else { areas.push(\"item4 item4\"); areas.push(\"item1 radial\"); areas.push(\"item2 radial\"); areas.push(\"item3 radial\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; } ]]] - grid-template-columns : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"1fr\"; } else { return \"35% 65%\"; } ]]] - grid-template-rows : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"min-content\"; } else { return \"1fr\"; } ]]] card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item2 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item3 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item4 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] item5 : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"block\"; } else { return \"none\"; } ]]] radial : - display : > [[[ if (entity.state == \"off\" || entity.state == \"unavailable\") { return \"none\"; } else { return \"block\"; } ]]] custom_fields : item1 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_1.entity_id ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" template : \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item2 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" template : \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item3 : card : type : \"custom:button-card\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" template : \"card_generic_swap\" styles : icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\" card : - box-shadow : \"none\" - border-radius : \"none\" - padding-top : \"1px\" - padding-bottom : \"1px\" item4 : card : type : \"horizontal-stack\" cards : - type : \"custom:button-card\" template : \"card_input_boolean\" entity : \"[[[ return entity.entity_id]]]\" icon : \"mdi:nas\" name : \"Status\" styles : card : - background-color : \"transparent\" - box-shadow : \"none\" - border : \"2px solid var(--google-grey)\" tap_action : action : \"more-info\" - type : \"custom:button-card\" template : \"card_generic_swap\" entity : \"[[[ return variables.entity_4.entity_id ]]]\" icon : \"[[[ return variables.entity_4.icon ]]]\" name : \"[[[ return variables.entity_4.name ]]]\" styles : card : - background-color : \"transparent\" - box-shadow : \"none\" - border : \"2px solid var(--google-grey)\" icon : - color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 1)`;]]]\" img_cell : - background-color : \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 0.20)`;]]]\" tap_action : action : \"none\" item5 : card : type : \"custom:button-card\" template : \"card_input_boolean\" entity : \"[[[ return entity.entity_id]]]\" icon : \"mdi:nas\" name : \"Status\" styles : card : - background-color : \"transparent\" - box-shadow : \"none\" - border : \"2px solid var(--google-grey)\" tap_action : action : \"more-info\" radial : card : type : \"custom:apexcharts-card\" graph_span : \"[[[ return variables.graph_span ]]]\" chart_type : \"[[[ return variables.chart_type ]]]\" style : | ha-card { border-radius: \"var(--border-radius)\"; box-shadow: none; padding-left: 10px; padding-bottom: 0px; } header : show : false apex_config : title : floating : false align : \"top\" style : fontSize : \"2px\" fontWeight : \"bold\" chart : foreColor : \"rgb(148,148,148)\" offsetY : 5 legend : show : false series : - entity : \"[[[ return variables.entity_1.entity_id ]]]\" name : \"[[[ return variables.entity_1_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_1.color})`;]]]\" max : \"[[[ return variables.entity_1.max_value ]]]\" - entity : \"[[[ return variables.entity_2.entity_id ]]]\" name : \"[[[ return variables.entity_2_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_2.color})`;]]]\" max : \"[[[ return variables.entity_2.max_value ]]]\" - entity : \"[[[ return variables.entity_3.entity_id ]]]\" name : \"[[[ return variables.entity_3_name ]]]\" color : \"[[[ return `var(--google-${variables.entity_3.color})`;]]]\" max : \"[[[ return variables.entity_3.max_value ]]]\"","title":"Template Code"},{"location":"usage/custom_cards/custom_card_nik_tablet/","text":"Custom-card \"Tablet Custom Card\" \u00b6 This is a custom-card that uses the installed Kiosk app on a tablet to get information from. It includes USB Power (if the tablet has it), Motion, light and maintenance switch as well as restart and reload mode. Credits \u00b6 Author: Nik - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 To have all the Minimalist Cards and Custom Cards; To have installed and configured Kiosk APP on the Tablet (enabled permissions etc...); To have the HACS Integration \"Fully Kiosk Browser\" installed and configured in HomeAssistant; Usage \u00b6 - type : \"custom:button-card\" template : \"custom_card_nik_tablet\" variables : ulm_custom_card_nik_tablet_main : binary_sensor.ping_tablet_1p ulm_custom_card_nik_tablet_name : \"Tablet 1P\" ulm_custom_card_nik_tablet_battery : sensor.tablet_1p_battery_level ulm_custom_card_nik_tablet_battery_name : \"Battery\" ulm_custom_card_nik_tablet_button1 : switch.sonoff_tablet_1p ulm_custom_card_nik_tablet_button2 : switch.tablet_1p_motion_detection ulm_custom_card_nik_tablet_button3 : light.tablet_1p_screen ulm_custom_card_nik_tablet_restart : button.tablet_1p_restart_browser ulm_custom_card_nik_tablet_reload : button.tablet_1p_load_start_url ulm_custom_card_nik_tablet_maintenance : switch.tablet_1p_maintenance_mode ulm_custom_card_nik_tablet_par1 : sensor.tablet_1p_ram_free_memory ulm_custom_card_nik_tablet_par1_name : \"RAM\" ulm_custom_card_nik_tablet_par2 : sensor.tablet_1p_internal_storage_free_space ulm_custom_card_nik_tablet_par2_name : \"Disk\" ulm_custom_card_nik_tablet_par3 : binary_sensor.tablet_1p_plugged_in ulm_custom_card_nik_tablet_par3_name : \"Power\" Variables \u00b6 Variable Example Required Explanation ulm_custom_card_nik_tablet_main binary_sensor.ping_tablet_1p Yes A sensor that checks if the tablet is online. A simple binary ping sensor does the job. ulm_custom_card_nik_tablet_name Tablet 1P Yes Name of the Tablet ulm_custom_card_nik_tablet_battery sensor.tablet_1p_battery_level Yes Battery sensor for the Tablet ulm_custom_card_nik_tablet_battery_name Battery Yes If you want to customize the Battery name ulm_custom_card_nik_tablet_button1 switch.sonoff_tablet_1p Yes A Switch that enables or not USB Power for the Tablet. If not present you can replace it with another Switch of your choise. (check your device configs) ulm_custom_card_nik_tablet_button2 switch.tablet_1p_motion_detection Yes The Motion detection switch for your tablet (check your device configs) ulm_custom_card_nik_tablet_button3 light.tablet_1p_screen Yes The entity that turns on or off the Screen of the Tablet (check your device configs) ulm_custom_card_nik_tablet_restart button.tablet_1p_restart_browser Yes The entity to restart the Kiosk App of the Tablet (check your device configs) ulm_custom_card_nik_tablet_reload button.tablet_1p_load_start_url Yes The entity to reload the web page of the Kios App of the Tablet (check your device configs) ulm_custom_card_nik_tablet_maintenance switch.tablet_1p_maintenance_mode Yes The entity to put the tablet in maintenance mode. (check your device configs) ulm_custom_card_nik_tablet_par1 sensor.example Yes An entity of your choise to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par2 sensor.example Yes An entity of your choise to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par3 sensor.example Yes An entity of your choise to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par1_name sensor.example Yes Name for Parameter 1 ulm_custom_card_nik_tablet_par2_name sensor.example Yes Name for Parameter 2 ulm_custom_card_nik_tablet_par3_name sensor.example Yes Name for Parameter 3 Template Code \u00b6 --- custom_card_nik_tablet : template : - \"ulm_language_variables\" triggers_update : \"all\" show_icon : false show_name : false show_label : false variables : ulm_custom_card_nik_tablet_main : \"[[[ return variables.ulm_custom_card_nik_tablet_main ]]]\" ulm_custom_card_nik_tablet_name : \"[[[ return variables.ulm_custom_card_nik_tablet_name ]]]\" ulm_custom_card_nik_tablet_battery : \"[[[ return variables.ulm_custom_card_nik_tablet_battery ]]]\" ulm_custom_card_nik_tablet_battery_name : \"[[[ return variables.ulm_custom_card_nik_tablet_battery_name ]]]\" ulm_custom_card_nik_tablet_button1 : \"[[[ return variables.ulm_custom_card_nik_tablet_button1 ]]]\" ulm_custom_card_nik_tablet_button2 : \"[[[ return variables.ulm_custom_card_nik_tablet_button2 ]]]\" ulm_custom_card_nik_tablet_button3 : \"[[[ return variables.ulm_custom_card_nik_tablet_button3 ]]]\" ulm_custom_card_nik_tablet_restart : \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\" ulm_custom_card_nik_tablet_reload : \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\" ulm_custom_card_nik_tablet_maintenance : \"[[[ return variables.ulm_custom_card_nik_tablet_maintenance ]]]\" ulm_custom_card_nik_tablet_par1 : \"[[[ return variables.ulm_custom_card_nik_tablet_par1 ]]]\" ulm_custom_card_nik_tablet_par2 : \"[[[ return variables.ulm_custom_card_nik_tablet_par2 ]]]\" ulm_custom_card_nik_tablet_par3 : \"[[[ return variables.ulm_custom_card_nik_tablet_par3 ]]]\" ulm_custom_card_nik_tablet_par1_name : \"[[[ return variables.ulm_custom_card_nik_tablet_par1_name ]]]\" ulm_custom_card_nik_tablet_par2_name : \"[[[ return variables.ulm_custom_card_nik_tablet_par2_name ]]]\" ulm_custom_card_nik_tablet_par3_name : \"[[[ return variables.ulm_custom_card_nik_tablet_par3_name ]]]\" styles : grid : - grid-template-areas : > [[[ var areas = []; areas.push(\"item1 item1\"); areas.push(\". .\"); areas.push(\"item2 item2\"); areas.push(\". .\"); areas.push(\"item3 item3\"); areas.push(\"item4 item4\"); areas.push(\"item5 item5\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : \"1fr 1fr\" - grid-template-rows : \"min-content 10px min-content 10px min-content min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_input_boolean\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_main ]]]\" icon : \"mdi:tablet\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_name ]]]\" styles : card : - box-shadow : \"none\" tap_action : action : \"none\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"green\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_button1 ]]]\" icon : \"mdi:usb\" item2 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"green\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_button2 ]]]\" icon : \"mdi:motion-sensor\" item3 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"green\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_button3 ]]]\" icon : \"mdi:monitor\" item3 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"blue_no_state\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\" icon : \"mdi:restart-alert\" tap_action : action : \"call-service\" service : \"button.press\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\" item2 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"yellow\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_maintenance ]]]\" icon : \"mdi:account-hard-hat-outline\" item3 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"blue_no_state\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\" icon : \"mdi:reload\" tap_action : action : \"call-service\" service : \"button.press\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\" item4 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"custom_widget_nik_tablet\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_par1 ]]]\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_par1_name ]]]\" item2 : card : type : \"custom:button-card\" template : \"custom_widget_nik_tablet\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_par2 ]]]\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_par2_name ]]]\" item3 : card : type : \"custom:button-card\" template : \"custom_widget_nik_tablet\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_par3 ]]]\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_par3_name ]]]\" item5 : card : type : \"custom:button-card\" template : \"custom_bar_card_nik_tablet\" variables : ulm_custom_bar_card_nik_tablet_card_entity : \"[[[ return variables.ulm_custom_card_nik_tablet_battery ]]]\" ulm_custom_bar_card_nik_tablet_card_name : \"[[[ return variables.ulm_custom_card_nik_tablet_battery_name ]]]\" ulm_custom_bar_card_nik_tablet_card_value : true ulm_custom_bar_card_nik_tablet_card_indicator : false custom_widget_nik_tablet : show_label : true show_icon : false label : | [[[ if (entity.attributes.unit_of_measurement) { var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement: '' return entity.state + unit; } else { return entity.state; } ]]] styles : name : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" label : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - box-shadow : \"none\" custom_bar_card_nik_tablet : triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-rows : \"1fr\" card : - border-radius : \"none\" - background-color : \"transparent\" - box-shadow : \"none\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"card_generic\" styles : card : - box-shadow : \"none\" - border-radius : \"none\" - padding : \"12px\" entity : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_entity ]]]\" name : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_name != '' ? variables.ulm_custom_bar_card_nik_tablet_card_name : '' ]]]\" item2 : card : type : \"custom:bar-card\" entities : - entity : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_entity ]]]\" positions : icon : \"off\" indicator : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_indicator == true ? 'inside' : 'off' ]]]\" minmax : \"off\" title : \"off\" value : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_value == true ? 'inside' : 'off' ]]]\" name : \"off\" severity : - color : \"var(--google-red)\" from : 1 to : 30 - color : \"var(--google-yellow)\" from : 31 to : 59 - color : \"var(--google-green)\" from : 60 to : 100 min : 1 max : 100 style : |- bar-card-currentbar { right: 0; } bar-card-backgroundbar { right: 0; } #states { padding: 0; height: 35px; } bar-card-background { height: 35px !important; } bar-card-indicator { left: 10px; } bar-card-value { font-weight: bold; font-size: 12px; }","title":"Tablet Custom Card"},{"location":"usage/custom_cards/custom_card_nik_tablet/#custom-card-tablet-custom-card","text":"This is a custom-card that uses the installed Kiosk app on a tablet to get information from. It includes USB Power (if the tablet has it), Motion, light and maintenance switch as well as restart and reload mode.","title":"Custom-card \"Tablet Custom Card\""},{"location":"usage/custom_cards/custom_card_nik_tablet/#credits","text":"Author: Nik - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_nik_tablet/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_nik_tablet/#requirements","text":"To have all the Minimalist Cards and Custom Cards; To have installed and configured Kiosk APP on the Tablet (enabled permissions etc...); To have the HACS Integration \"Fully Kiosk Browser\" installed and configured in HomeAssistant;","title":"Requirements"},{"location":"usage/custom_cards/custom_card_nik_tablet/#usage","text":"- type : \"custom:button-card\" template : \"custom_card_nik_tablet\" variables : ulm_custom_card_nik_tablet_main : binary_sensor.ping_tablet_1p ulm_custom_card_nik_tablet_name : \"Tablet 1P\" ulm_custom_card_nik_tablet_battery : sensor.tablet_1p_battery_level ulm_custom_card_nik_tablet_battery_name : \"Battery\" ulm_custom_card_nik_tablet_button1 : switch.sonoff_tablet_1p ulm_custom_card_nik_tablet_button2 : switch.tablet_1p_motion_detection ulm_custom_card_nik_tablet_button3 : light.tablet_1p_screen ulm_custom_card_nik_tablet_restart : button.tablet_1p_restart_browser ulm_custom_card_nik_tablet_reload : button.tablet_1p_load_start_url ulm_custom_card_nik_tablet_maintenance : switch.tablet_1p_maintenance_mode ulm_custom_card_nik_tablet_par1 : sensor.tablet_1p_ram_free_memory ulm_custom_card_nik_tablet_par1_name : \"RAM\" ulm_custom_card_nik_tablet_par2 : sensor.tablet_1p_internal_storage_free_space ulm_custom_card_nik_tablet_par2_name : \"Disk\" ulm_custom_card_nik_tablet_par3 : binary_sensor.tablet_1p_plugged_in ulm_custom_card_nik_tablet_par3_name : \"Power\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_nik_tablet/#variables","text":"Variable Example Required Explanation ulm_custom_card_nik_tablet_main binary_sensor.ping_tablet_1p Yes A sensor that checks if the tablet is online. A simple binary ping sensor does the job. ulm_custom_card_nik_tablet_name Tablet 1P Yes Name of the Tablet ulm_custom_card_nik_tablet_battery sensor.tablet_1p_battery_level Yes Battery sensor for the Tablet ulm_custom_card_nik_tablet_battery_name Battery Yes If you want to customize the Battery name ulm_custom_card_nik_tablet_button1 switch.sonoff_tablet_1p Yes A Switch that enables or not USB Power for the Tablet. If not present you can replace it with another Switch of your choise. (check your device configs) ulm_custom_card_nik_tablet_button2 switch.tablet_1p_motion_detection Yes The Motion detection switch for your tablet (check your device configs) ulm_custom_card_nik_tablet_button3 light.tablet_1p_screen Yes The entity that turns on or off the Screen of the Tablet (check your device configs) ulm_custom_card_nik_tablet_restart button.tablet_1p_restart_browser Yes The entity to restart the Kiosk App of the Tablet (check your device configs) ulm_custom_card_nik_tablet_reload button.tablet_1p_load_start_url Yes The entity to reload the web page of the Kios App of the Tablet (check your device configs) ulm_custom_card_nik_tablet_maintenance switch.tablet_1p_maintenance_mode Yes The entity to put the tablet in maintenance mode. (check your device configs) ulm_custom_card_nik_tablet_par1 sensor.example Yes An entity of your choise to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par2 sensor.example Yes An entity of your choise to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par3 sensor.example Yes An entity of your choise to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par1_name sensor.example Yes Name for Parameter 1 ulm_custom_card_nik_tablet_par2_name sensor.example Yes Name for Parameter 2 ulm_custom_card_nik_tablet_par3_name sensor.example Yes Name for Parameter 3","title":"Variables"},{"location":"usage/custom_cards/custom_card_nik_tablet/#template-code","text":"--- custom_card_nik_tablet : template : - \"ulm_language_variables\" triggers_update : \"all\" show_icon : false show_name : false show_label : false variables : ulm_custom_card_nik_tablet_main : \"[[[ return variables.ulm_custom_card_nik_tablet_main ]]]\" ulm_custom_card_nik_tablet_name : \"[[[ return variables.ulm_custom_card_nik_tablet_name ]]]\" ulm_custom_card_nik_tablet_battery : \"[[[ return variables.ulm_custom_card_nik_tablet_battery ]]]\" ulm_custom_card_nik_tablet_battery_name : \"[[[ return variables.ulm_custom_card_nik_tablet_battery_name ]]]\" ulm_custom_card_nik_tablet_button1 : \"[[[ return variables.ulm_custom_card_nik_tablet_button1 ]]]\" ulm_custom_card_nik_tablet_button2 : \"[[[ return variables.ulm_custom_card_nik_tablet_button2 ]]]\" ulm_custom_card_nik_tablet_button3 : \"[[[ return variables.ulm_custom_card_nik_tablet_button3 ]]]\" ulm_custom_card_nik_tablet_restart : \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\" ulm_custom_card_nik_tablet_reload : \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\" ulm_custom_card_nik_tablet_maintenance : \"[[[ return variables.ulm_custom_card_nik_tablet_maintenance ]]]\" ulm_custom_card_nik_tablet_par1 : \"[[[ return variables.ulm_custom_card_nik_tablet_par1 ]]]\" ulm_custom_card_nik_tablet_par2 : \"[[[ return variables.ulm_custom_card_nik_tablet_par2 ]]]\" ulm_custom_card_nik_tablet_par3 : \"[[[ return variables.ulm_custom_card_nik_tablet_par3 ]]]\" ulm_custom_card_nik_tablet_par1_name : \"[[[ return variables.ulm_custom_card_nik_tablet_par1_name ]]]\" ulm_custom_card_nik_tablet_par2_name : \"[[[ return variables.ulm_custom_card_nik_tablet_par2_name ]]]\" ulm_custom_card_nik_tablet_par3_name : \"[[[ return variables.ulm_custom_card_nik_tablet_par3_name ]]]\" styles : grid : - grid-template-areas : > [[[ var areas = []; areas.push(\"item1 item1\"); areas.push(\". .\"); areas.push(\"item2 item2\"); areas.push(\". .\"); areas.push(\"item3 item3\"); areas.push(\"item4 item4\"); areas.push(\"item5 item5\"); return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\"; ]]] - grid-template-columns : \"1fr 1fr\" - grid-template-rows : \"min-content 10px min-content 10px min-content min-content min-content\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_input_boolean\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_main ]]]\" icon : \"mdi:tablet\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_name ]]]\" styles : card : - box-shadow : \"none\" tap_action : action : \"none\" item2 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"green\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_button1 ]]]\" icon : \"mdi:usb\" item2 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"green\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_button2 ]]]\" icon : \"mdi:motion-sensor\" item3 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"green\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_button3 ]]]\" icon : \"mdi:monitor\" item3 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"blue_no_state\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\" icon : \"mdi:restart-alert\" tap_action : action : \"call-service\" service : \"button.press\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\" item2 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"yellow\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_maintenance ]]]\" icon : \"mdi:account-hard-hat-outline\" item3 : card : type : \"custom:button-card\" template : - \"widget_icon\" - \"blue_no_state\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\" icon : \"mdi:reload\" tap_action : action : \"call-service\" service : \"button.press\" service_data : entity_id : \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\" item4 : card : type : \"custom:button-card\" template : \"list_3_items\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"custom_widget_nik_tablet\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_par1 ]]]\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_par1_name ]]]\" item2 : card : type : \"custom:button-card\" template : \"custom_widget_nik_tablet\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_par2 ]]]\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_par2_name ]]]\" item3 : card : type : \"custom:button-card\" template : \"custom_widget_nik_tablet\" entity : \"[[[ return variables.ulm_custom_card_nik_tablet_par3 ]]]\" name : \"[[[ return variables.ulm_custom_card_nik_tablet_par3_name ]]]\" item5 : card : type : \"custom:button-card\" template : \"custom_bar_card_nik_tablet\" variables : ulm_custom_bar_card_nik_tablet_card_entity : \"[[[ return variables.ulm_custom_card_nik_tablet_battery ]]]\" ulm_custom_bar_card_nik_tablet_card_name : \"[[[ return variables.ulm_custom_card_nik_tablet_battery_name ]]]\" ulm_custom_bar_card_nik_tablet_card_value : true ulm_custom_bar_card_nik_tablet_card_indicator : false custom_widget_nik_tablet : show_label : true show_icon : false label : | [[[ if (entity.attributes.unit_of_measurement) { var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement: '' return entity.state + unit; } else { return entity.state; } ]]] styles : name : - justify-self : \"center\" - align-self : \"start\" - font-weight : \"bolder\" - font-size : \"12px\" - filter : \"opacity(40%)\" label : - margin-top : \"10px\" - justify-self : \"center\" - font-weight : \"bold\" - font-size : \"14px\" grid : - grid-template-areas : \"'l' 'n'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" card : - box-shadow : \"none\" custom_bar_card_nik_tablet : triggers_update : \"all\" styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-rows : \"1fr\" card : - border-radius : \"none\" - background-color : \"transparent\" - box-shadow : \"none\" - padding : \"0px\" custom_fields : item1 : card : type : \"custom:button-card\" template : - \"icon_info\" - \"card_generic\" styles : card : - box-shadow : \"none\" - border-radius : \"none\" - padding : \"12px\" entity : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_entity ]]]\" name : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_name != '' ? variables.ulm_custom_bar_card_nik_tablet_card_name : '' ]]]\" item2 : card : type : \"custom:bar-card\" entities : - entity : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_entity ]]]\" positions : icon : \"off\" indicator : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_indicator == true ? 'inside' : 'off' ]]]\" minmax : \"off\" title : \"off\" value : \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_value == true ? 'inside' : 'off' ]]]\" name : \"off\" severity : - color : \"var(--google-red)\" from : 1 to : 30 - color : \"var(--google-yellow)\" from : 31 to : 59 - color : \"var(--google-green)\" from : 60 to : 100 min : 1 max : 100 style : |- bar-card-currentbar { right: 0; } bar-card-backgroundbar { right: 0; } #states { padding: 0; height: 35px; } bar-card-background { height: 35px !important; } bar-card-indicator { left: 10px; } bar-card-value { font-weight: bold; font-size: 12px; }","title":"Template Code"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/","text":"Custom-card \"DWD Pollen\" \u00b6 This is a custom-card to show the pollen count, taken from the DWD pollen service via a rest sensor. Credits \u00b6 Author: Paddy0174 - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : custom:button-card template : - custom_card_paddy_dwd_pollen entity : sensor.dwd_pollenbelastung_birke Requirements \u00b6 n/a Template code \u00b6 custom_card_paddy_dwd_pollen : template : - card_generic_swap - custom_card_paddy_dwd_pollen_language_variables label : > [[[ if (entity.state == \"6\"){ return variables.custom_card_paddy_dwd_pollen_6; } else if (entity.state == \"5\"){ return variables.custom_card_paddy_dwd_pollen_5; } else if (entity.state == \"4\"){ return variables.custom_card_paddy_dwd_pollen_4; } else if (entity.state == \"3\"){ return variables.custom_card_paddy_dwd_pollen_3; } else if (entity.state == \"2\"){ return variables.custom_card_paddy_dwd_pollen_2; } else if (entity.state == \"1\"){ return variables.custom_card_paddy_dwd_pollen_1; } return variables.custom_card_paddy_dwd_pollen_none; ]]] state : - value : '6' styles : img_cell : - background-color : 'rgba(190,0,33,1)' - value : '5' styles : img_cell : - background-color : 'rgba(240,56,26,1)' - value : '4' styles : img_cell : - background-color : 'rgba(254,154,36,1)' - value : '3' styles : img_cell : - background-color : 'rgba(254,197,77,1)' - value : '2' styles : img_cell : - background-color : 'rgba(254,228,156,1)' - value : '1' styles : img_cell : - background-color : 'rgba(219,250,200,1)' - value : '0' styles : icon : - color : 'rgba(var(--color-theme),0.2)' HomeAssistant \u00b6 I use the following rest and template sensors in HA: sensor : - platform : rest scan_interval : 3600 name : \"DWD Pollenbelastung\" resource : https://opendata.dwd.de/climate_environment/health/alerts/s31fg.json json_attributes_path : \"$..content[?(@.partregion_id==XXX)].Pollen\" json_attributes : #- Erle #- Beifuss #- Ambrosia - Birke #- Esche - Hasel - Graeser #- Roggen value_template : \"{{ value_json.last_update }}\" - platform : template sensors : dwd_pollenbelastung_birke : icon_template : \"mdi:tree-outline\" friendly_name : \"Birke\" value_template : >- {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['today'] %} {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %} attribute_templates : today : >- {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['today'] %} {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %} tomorrow : >- {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['tomorrow'] %} {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %} Notes \u00b6 As this card is mainly for the DWD pollen sensor, that is based in Germany and shows only german data, the only available language is \"German\". If you want another language added, please leave a message in the support thread.","title":"DWD Pollen Custom-card"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#custom-card-dwd-pollen","text":"This is a custom-card to show the pollen count, taken from the DWD pollen service via a rest sensor.","title":"Custom-card \"DWD Pollen\""},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#credits","text":"Author: Paddy0174 - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#usage","text":"- type : custom:button-card template : - custom_card_paddy_dwd_pollen entity : sensor.dwd_pollenbelastung_birke","title":"Usage"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#requirements","text":"n/a","title":"Requirements"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#template-code","text":"custom_card_paddy_dwd_pollen : template : - card_generic_swap - custom_card_paddy_dwd_pollen_language_variables label : > [[[ if (entity.state == \"6\"){ return variables.custom_card_paddy_dwd_pollen_6; } else if (entity.state == \"5\"){ return variables.custom_card_paddy_dwd_pollen_5; } else if (entity.state == \"4\"){ return variables.custom_card_paddy_dwd_pollen_4; } else if (entity.state == \"3\"){ return variables.custom_card_paddy_dwd_pollen_3; } else if (entity.state == \"2\"){ return variables.custom_card_paddy_dwd_pollen_2; } else if (entity.state == \"1\"){ return variables.custom_card_paddy_dwd_pollen_1; } return variables.custom_card_paddy_dwd_pollen_none; ]]] state : - value : '6' styles : img_cell : - background-color : 'rgba(190,0,33,1)' - value : '5' styles : img_cell : - background-color : 'rgba(240,56,26,1)' - value : '4' styles : img_cell : - background-color : 'rgba(254,154,36,1)' - value : '3' styles : img_cell : - background-color : 'rgba(254,197,77,1)' - value : '2' styles : img_cell : - background-color : 'rgba(254,228,156,1)' - value : '1' styles : img_cell : - background-color : 'rgba(219,250,200,1)' - value : '0' styles : icon : - color : 'rgba(var(--color-theme),0.2)'","title":"Template code"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#homeassistant","text":"I use the following rest and template sensors in HA: sensor : - platform : rest scan_interval : 3600 name : \"DWD Pollenbelastung\" resource : https://opendata.dwd.de/climate_environment/health/alerts/s31fg.json json_attributes_path : \"$..content[?(@.partregion_id==XXX)].Pollen\" json_attributes : #- Erle #- Beifuss #- Ambrosia - Birke #- Esche - Hasel - Graeser #- Roggen value_template : \"{{ value_json.last_update }}\" - platform : template sensors : dwd_pollenbelastung_birke : icon_template : \"mdi:tree-outline\" friendly_name : \"Birke\" value_template : >- {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['today'] %} {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %} attribute_templates : today : >- {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['today'] %} {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %} tomorrow : >- {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['tomorrow'] %} {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %}","title":"HomeAssistant"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#notes","text":"As this card is mainly for the DWD pollen sensor, that is based in Germany and shows only german data, the only available language is \"German\". If you want another language added, please leave a message in the support thread.","title":"Notes"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/","text":"Custom-card \"Waste collection\" \u00b6 This is a custom-card to show the next waste collection date. It uses the data from the custom_component \"Waste Collection Framework\". Credits \u00b6 Author: Paddy0174 - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : custom:button-card template : - custom_card_paddy_waste_collection entity : sensor.waste_collection_paper Requirements \u00b6 This card needs the following to function correctly: Component / card required Link Waste Collection Schedule Framework yes more info Variables \u00b6 Variable Example Required Explanation entity sensor.waste_collection_paper yes Your waste collection sensor. See HA example on how to configure. Template code \u00b6 custom_card_paddy_waste_collection : template : - card_generic_swap state : - operator : template value : \"[[[ return states[entity.entity_id].attributes.daysTo == 0; ]]]\" styles : img_cell : - background-color : 'rgba(var(--color-red),0.5)' icon : - color : 'rgba(var(--color-red),1)' custom_fields : notification : - border-radius : 50% - position : absolute - left : 38px - top : 8px - height : 16px - width : 16px - border : 2px solid var(--card-background-color) - font-size : 12px - line-height : 14px - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] - operator : template value : \"[[[ return states[entity.entity_id].attributes.daysTo == 1; ]]]\" styles : img_cell : - background-color : 'rgba(var(--color-red),0.05)' icon : - color : 'rgba(var(--color-red),1)' custom_fields : notification : - border-radius : 50% - position : absolute - left : 38px - top : 8px - height : 16px - width : 16px - border : 2px solid var(--card-background-color) - font-size : 12px - line-height : 14px - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] - value : 'unavailable' styles : custom_fields : notification : - border-radius : 50% - position : absolute - left : 38px - top : 8px - height : 16px - width : 16px - border : 2px solid var(--card-background-color) - font-size : 12px - line-height : 14px - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] custom_fields : notification : > [[[ if (entity.state == 'unavailable' || states[entity.entity_id].attributes.daysTo == 0 || states[entity.entity_id].attributes.daysTo == 1){ return `<ha-icon icon=\"mdi:exclamation\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>` } ]]] HomeAssistant \u00b6 This is my sensor setup in HA. I do the change from \"days\" to \"friendly days\" in my template sensor. Note \u00b6 Don't forget to set add_days_to in your sensor config \"HEUTE\" is german for today or aujourd'hui \"MORGEN\" is german for tomorrow or demain sensor : - platform : waste_collection_schedule name : waste_collection_paper details_format : upcoming add_days_to : true # this line is important value_template : >- {% if value.daysTo == 0 %} HEUTE {% elif value.daysTo == 1 %} MORGEN {% else %} in {{value.daysTo}} Tagen {% endif %} types : - Papiertonne Notes \u00b6 n/a","title":"Waste Collection Custom-card"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#custom-card-waste-collection","text":"This is a custom-card to show the next waste collection date. It uses the data from the custom_component \"Waste Collection Framework\".","title":"Custom-card \"Waste collection\""},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#credits","text":"Author: Paddy0174 - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#usage","text":"- type : custom:button-card template : - custom_card_paddy_waste_collection entity : sensor.waste_collection_paper","title":"Usage"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#requirements","text":"This card needs the following to function correctly: Component / card required Link Waste Collection Schedule Framework yes more info","title":"Requirements"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#variables","text":"Variable Example Required Explanation entity sensor.waste_collection_paper yes Your waste collection sensor. See HA example on how to configure.","title":"Variables"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#template-code","text":"custom_card_paddy_waste_collection : template : - card_generic_swap state : - operator : template value : \"[[[ return states[entity.entity_id].attributes.daysTo == 0; ]]]\" styles : img_cell : - background-color : 'rgba(var(--color-red),0.5)' icon : - color : 'rgba(var(--color-red),1)' custom_fields : notification : - border-radius : 50% - position : absolute - left : 38px - top : 8px - height : 16px - width : 16px - border : 2px solid var(--card-background-color) - font-size : 12px - line-height : 14px - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] - operator : template value : \"[[[ return states[entity.entity_id].attributes.daysTo == 1; ]]]\" styles : img_cell : - background-color : 'rgba(var(--color-red),0.05)' icon : - color : 'rgba(var(--color-red),1)' custom_fields : notification : - border-radius : 50% - position : absolute - left : 38px - top : 8px - height : 16px - width : 16px - border : 2px solid var(--card-background-color) - font-size : 12px - line-height : 14px - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] - value : 'unavailable' styles : custom_fields : notification : - border-radius : 50% - position : absolute - left : 38px - top : 8px - height : 16px - width : 16px - border : 2px solid var(--card-background-color) - font-size : 12px - line-height : 14px - background-color : > [[[ return \"rgba(var(--color-red),1)\"; ]]] custom_fields : notification : > [[[ if (entity.state == 'unavailable' || states[entity.entity_id].attributes.daysTo == 0 || states[entity.entity_id].attributes.daysTo == 1){ return `<ha-icon icon=\"mdi:exclamation\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>` } ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#homeassistant","text":"This is my sensor setup in HA. I do the change from \"days\" to \"friendly days\" in my template sensor.","title":"HomeAssistant"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#note","text":"Don't forget to set add_days_to in your sensor config \"HEUTE\" is german for today or aujourd'hui \"MORGEN\" is german for tomorrow or demain sensor : - platform : waste_collection_schedule name : waste_collection_paper details_format : upcoming add_days_to : true # this line is important value_template : >- {% if value.daysTo == 0 %} HEUTE {% elif value.daysTo == 1 %} MORGEN {% else %} in {{value.daysTo}} Tagen {% endif %} types : - Papiertonne","title":"Note"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#notes","text":"n/a","title":"Notes"},{"location":"usage/custom_cards/custom_card_paddy_welcome/","text":"Custom-card \"Welcome\" \u00b6 This is a custom-card to show a welcome message to the user. It comes in four different versions: welcome message ( custom_card_paddy_welcome ) welcome message + weather-forecast ( custom_card_paddy_welcome_with_weather ) welcome message + news ( custom_card_paddy_welcome_with_news ) [based on home-feed-card] The card shows a time based message (good morning/afternoon/evening/hello) to the logged-in user with username. The second part of the card varies depending on what version you choose. Note, that you have different requirements depending on the version! Credits \u00b6 Author: Paddy0174 - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 This card needs the following to function correctly: Component / card required Note lovelace-card-mod yes a weather integration/provider only for welcome-card-with-weather See setup instructions for a HA weather integration home-feed-card only for welcome-card-with-news Usage \u00b6 - type : custom:button-card template : custom_card_paddy_welcome variables : ulm_custom_card_paddy_welcome_time : sensor.time - type : custom:button-card template : custom_card_paddy_welcome_with_weather variables : ulm_custom_card_paddy_welcome_time : sensor.time ulm_custom_card_paddy_welcome_weather_provider : weather.accu_weather - type : custom:button-card template : custom_card_paddy_welcome_with_news variables : ulm_custom_card_paddy_welcome_time : sensor.time ulm_custom_card_paddy_welcome_news_entities : - entity : sensor.waste_collection_paper content_template : \"<b>{{display_name}}</b><br>{{state}}\" - entity : sensor.waste_collection_waste content_template : \"<b>{{display_name}}</b><br>{{state}}\" Variables \u00b6 Card type Variable Example Required Explanation all ulm_custom_card_paddy_welcome_time sensor.time yes This is your Home Assistant sensor.time _welcome_with_weather ulm_custom_card_paddy_welcome_weather_provider weather.accu_weather yes This is your weather provider _welcome_with_news ulm_custom_card_paddy_welcome_news_entities entity: sensor.waste_collection_paper content_template: \"<b>{{display_name}}</b><br>{{state}}\" yes A list of your entities to show in the news feed, see the note underneath. Note _welcome_with_news \u00b6 This card is based on home-feed-card and needs a little different configuration in the variables. To allow almost all entites from HomeAssistant to show in the news, you're able to set all options that home-feed-card provides. This makes it necessary, that you set these entities in a list. Let me show you an example: # normally you do this variables : ulm_variable : your_variable_entity # here you need to do a list variables : ulm_variable : - your_variable_entity_1 - your_variable_entity_2 # to use an option from home-feed-card variables : ulm_variable : - entity : your_variable_entity_1 content_template : \"<b>{{ display_name }}</b><br>{{ state }}\" - your_variable_entity_2 You can find all available options and their description here . I recommend to use a content_template to format the output for every news item, eg. like this: content_template : \"<b>{{ display_name }}</b><br />{{ state }}\" Example \u00b6 - type : custom:button-card template : custom_card_paddy_welcome_with_news variables : ulm_custom_card_paddy_welcome_news_entities : - entity : input_datetime.alarm_clock content_template : \"<b>{{display_name}}</b><br />{{state}}\" - entity : sensor.waste_collection_bio content_template : \"<b>{{display_name}}</b><br />{{state}}\" - entity : sensor.waste_collection_paper content_template : \"<b>{{display_name}}</b><br />{{state}}\" - entity : sensor.waste_collection_plastic content_template : \"<b>{{display_name}}</b><br />{{state}}\" Template code \u00b6 custom_card_paddy_welcome : template : - ulm_custom_card_paddy_welcome_language_variables show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : '\"item1\"' - grid-template-columns : 1fr - grid-template-rows : min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : markdown content : > [[[ let time = variables.ulm_custom_card_paddy_welcome_time; let welcome = ''; if (time > '18:00'){ welcome = variables.ulm_custom_card_paddy_welcome_evening; } else if (time > '12:00'){ welcome = variables.ulm_custom_card_paddy_welcome_afternoon; } else if (time > '05:00'){ welcome = variables.ulm_custom_card_paddy_welcome_morning; } else { welcome = variables.ulm_custom_card_paddy_welcome_hello; } return welcome + ',<br>' + user.name + '!'; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 30px; text-align: left; cursor: default; } custom_card_paddy_welcome_with_weather : template : - ulm_custom_card_paddy_welcome_language_variables show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : markdown content : > [[[ let time = variables.ulm_custom_card_paddy_welcome_time; let welcome = ''; if (time > '18:00'){ welcome = variables.ulm_custom_card_paddy_welcome_evening; } else if (time > '12:00'){ welcome = variables.ulm_custom_card_paddy_welcome_afternoon; } else if (time > '05:00'){ welcome = variables.ulm_custom_card_paddy_welcome_morning; } else { welcome = variables.ulm_custom_card_paddy_welcome_hello; } return welcome + ',<br>' + user.name + '!'; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 30px; text-align: left; cursor: default; } item2 : card : type : weather-forecast entity : \"[[[ return variables.ulm_custom_card_paddy_welcome_weather_provider; ]]]\" show_forecast : false card_mod : style : | ha-card.type-weather-forecast { border-radius: 14px; box-shadow: none; } ha-card.type-weather-forecast .state { text-align: left; font-size: 14px; font-weight: bolder; } ha-card.type-weather-forecast .name { text-align: left; font-size: 14px; } ha-card.type-weather-forecast .temp-attribute { text-align: right; } ha-card.type-weather-forecast .temp { text-align: right; font-size: medium; font-weight: bolder; margin-right: 16px; } ha-card.type-weather-forecast .temp span { text-align: right; font-size: medium; font-weight: bolder; } ha-card.type-weather-forecast .attribute { text-align: right; font-size: smaller; } custom_card_paddy_welcome_with_news : template : - ulm_custom_card_paddy_welcome_language_variables show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : markdown content : > [[[ let time = variables.ulm_custom_card_paddy_welcome_time; let welcome = ''; if (time > '18:00'){ welcome = variables.ulm_custom_card_paddy_welcome_evening; } else if (time > '12:00'){ welcome = variables.ulm_custom_card_paddy_welcome_afternoon; } else if (time > '05:00'){ welcome = variables.ulm_custom_card_paddy_welcome_morning; } else { welcome = variables.ulm_custom_card_paddy_welcome_hello; } return welcome + ',<br>' + user.name + '!'; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 30px; text-align: left; cursor: default; } item2 : card : type : 'custom:home-feed-card' card_id : main_feed show_empty : false more_info_on_tap : true state_color : false compact_mode : true max_item_count : 3 show_icons : true entities : > [[[ return variables.ulm_custom_card_paddy_welcome_news_entities; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 14px; text-align: left; } Custom configuration Example \u00b6 Here is one example, on how you can extend this (actually every) card. In the end we have the welcome card extended by four buttons to have something like a header with a navigation. - type : horizontal-stack cards : - type : custom:button-card template : edge - type : custom:button-card template : custom_card_paddy_welcome # here we override the styles to extend the welcome card with a second item styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-rows : min-content min-content - row-gap : 12px custom_fields : # here we set up the second item and its contents item2 : card : type : horizontal-stack cards : - type : custom:button-card template : edge - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/living icon : \"mdi:sofa\" name : Living label : Livingroom - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/working icon : \"mdi:factory\" name : Working label : Office - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/sleeping icon : \"mdi:bed-king-outline\" name : Sleeping label : Bedroom - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/climate icon : \"mdi:air-conditioner\" name : Air Conditioning label : Livingroom - type : custom:button-card template : edge - type : custom:button-card template : edge","title":"Welcome Custom-card"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#custom-card-welcome","text":"This is a custom-card to show a welcome message to the user. It comes in four different versions: welcome message ( custom_card_paddy_welcome ) welcome message + weather-forecast ( custom_card_paddy_welcome_with_weather ) welcome message + news ( custom_card_paddy_welcome_with_news ) [based on home-feed-card] The card shows a time based message (good morning/afternoon/evening/hello) to the logged-in user with username. The second part of the card varies depending on what version you choose. Note, that you have different requirements depending on the version!","title":"Custom-card \"Welcome\""},{"location":"usage/custom_cards/custom_card_paddy_welcome/#credits","text":"Author: Paddy0174 - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#requirements","text":"This card needs the following to function correctly: Component / card required Note lovelace-card-mod yes a weather integration/provider only for welcome-card-with-weather See setup instructions for a HA weather integration home-feed-card only for welcome-card-with-news","title":"Requirements"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#usage","text":"- type : custom:button-card template : custom_card_paddy_welcome variables : ulm_custom_card_paddy_welcome_time : sensor.time - type : custom:button-card template : custom_card_paddy_welcome_with_weather variables : ulm_custom_card_paddy_welcome_time : sensor.time ulm_custom_card_paddy_welcome_weather_provider : weather.accu_weather - type : custom:button-card template : custom_card_paddy_welcome_with_news variables : ulm_custom_card_paddy_welcome_time : sensor.time ulm_custom_card_paddy_welcome_news_entities : - entity : sensor.waste_collection_paper content_template : \"<b>{{display_name}}</b><br>{{state}}\" - entity : sensor.waste_collection_waste content_template : \"<b>{{display_name}}</b><br>{{state}}\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#variables","text":"Card type Variable Example Required Explanation all ulm_custom_card_paddy_welcome_time sensor.time yes This is your Home Assistant sensor.time _welcome_with_weather ulm_custom_card_paddy_welcome_weather_provider weather.accu_weather yes This is your weather provider _welcome_with_news ulm_custom_card_paddy_welcome_news_entities entity: sensor.waste_collection_paper content_template: \"<b>{{display_name}}</b><br>{{state}}\" yes A list of your entities to show in the news feed, see the note underneath.","title":"Variables"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#note-_welcome_with_news","text":"This card is based on home-feed-card and needs a little different configuration in the variables. To allow almost all entites from HomeAssistant to show in the news, you're able to set all options that home-feed-card provides. This makes it necessary, that you set these entities in a list. Let me show you an example: # normally you do this variables : ulm_variable : your_variable_entity # here you need to do a list variables : ulm_variable : - your_variable_entity_1 - your_variable_entity_2 # to use an option from home-feed-card variables : ulm_variable : - entity : your_variable_entity_1 content_template : \"<b>{{ display_name }}</b><br>{{ state }}\" - your_variable_entity_2 You can find all available options and their description here . I recommend to use a content_template to format the output for every news item, eg. like this: content_template : \"<b>{{ display_name }}</b><br />{{ state }}\"","title":"Note _welcome_with_news"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#example","text":"- type : custom:button-card template : custom_card_paddy_welcome_with_news variables : ulm_custom_card_paddy_welcome_news_entities : - entity : input_datetime.alarm_clock content_template : \"<b>{{display_name}}</b><br />{{state}}\" - entity : sensor.waste_collection_bio content_template : \"<b>{{display_name}}</b><br />{{state}}\" - entity : sensor.waste_collection_paper content_template : \"<b>{{display_name}}</b><br />{{state}}\" - entity : sensor.waste_collection_plastic content_template : \"<b>{{display_name}}</b><br />{{state}}\"","title":"Example"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#template-code","text":"custom_card_paddy_welcome : template : - ulm_custom_card_paddy_welcome_language_variables show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : '\"item1\"' - grid-template-columns : 1fr - grid-template-rows : min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : markdown content : > [[[ let time = variables.ulm_custom_card_paddy_welcome_time; let welcome = ''; if (time > '18:00'){ welcome = variables.ulm_custom_card_paddy_welcome_evening; } else if (time > '12:00'){ welcome = variables.ulm_custom_card_paddy_welcome_afternoon; } else if (time > '05:00'){ welcome = variables.ulm_custom_card_paddy_welcome_morning; } else { welcome = variables.ulm_custom_card_paddy_welcome_hello; } return welcome + ',<br>' + user.name + '!'; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 30px; text-align: left; cursor: default; } custom_card_paddy_welcome_with_weather : template : - ulm_custom_card_paddy_welcome_language_variables show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : markdown content : > [[[ let time = variables.ulm_custom_card_paddy_welcome_time; let welcome = ''; if (time > '18:00'){ welcome = variables.ulm_custom_card_paddy_welcome_evening; } else if (time > '12:00'){ welcome = variables.ulm_custom_card_paddy_welcome_afternoon; } else if (time > '05:00'){ welcome = variables.ulm_custom_card_paddy_welcome_morning; } else { welcome = variables.ulm_custom_card_paddy_welcome_hello; } return welcome + ',<br>' + user.name + '!'; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 30px; text-align: left; cursor: default; } item2 : card : type : weather-forecast entity : \"[[[ return variables.ulm_custom_card_paddy_welcome_weather_provider; ]]]\" show_forecast : false card_mod : style : | ha-card.type-weather-forecast { border-radius: 14px; box-shadow: none; } ha-card.type-weather-forecast .state { text-align: left; font-size: 14px; font-weight: bolder; } ha-card.type-weather-forecast .name { text-align: left; font-size: 14px; } ha-card.type-weather-forecast .temp-attribute { text-align: right; } ha-card.type-weather-forecast .temp { text-align: right; font-size: medium; font-weight: bolder; margin-right: 16px; } ha-card.type-weather-forecast .temp span { text-align: right; font-size: medium; font-weight: bolder; } ha-card.type-weather-forecast .attribute { text-align: right; font-size: smaller; } custom_card_paddy_welcome_with_news : template : - ulm_custom_card_paddy_welcome_language_variables show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : markdown content : > [[[ let time = variables.ulm_custom_card_paddy_welcome_time; let welcome = ''; if (time > '18:00'){ welcome = variables.ulm_custom_card_paddy_welcome_evening; } else if (time > '12:00'){ welcome = variables.ulm_custom_card_paddy_welcome_afternoon; } else if (time > '05:00'){ welcome = variables.ulm_custom_card_paddy_welcome_morning; } else { welcome = variables.ulm_custom_card_paddy_welcome_hello; } return welcome + ',<br>' + user.name + '!'; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 30px; text-align: left; cursor: default; } item2 : card : type : 'custom:home-feed-card' card_id : main_feed show_empty : false more_info_on_tap : true state_color : false compact_mode : true max_item_count : 3 show_icons : true entities : > [[[ return variables.ulm_custom_card_paddy_welcome_news_entities; ]]] card_mod : style : | ha-card { border-radius: 14px; box-shadow: none; font-size: 14px; text-align: left; }","title":"Template code"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#custom-configuration-example","text":"Here is one example, on how you can extend this (actually every) card. In the end we have the welcome card extended by four buttons to have something like a header with a navigation. - type : horizontal-stack cards : - type : custom:button-card template : edge - type : custom:button-card template : custom_card_paddy_welcome # here we override the styles to extend the welcome card with a second item styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-rows : min-content min-content - row-gap : 12px custom_fields : # here we set up the second item and its contents item2 : card : type : horizontal-stack cards : - type : custom:button-card template : edge - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/living icon : \"mdi:sofa\" name : Living label : Livingroom - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/working icon : \"mdi:factory\" name : Working label : Office - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/sleeping icon : \"mdi:bed-king-outline\" name : Sleeping label : Bedroom - type : custom:button-card template : vertical_buttons tap_action : action : navigate navigation_path : /ui-lovelace-minimalist/climate icon : \"mdi:air-conditioner\" name : Air Conditioning label : Livingroom - type : custom:button-card template : edge - type : custom:button-card template : edge","title":"Custom configuration Example"},{"location":"usage/custom_cards/custom_card_person_chip/","text":"Custom-card \"Person Chip\" \u00b6 This is a custom-card to display a person entity as a chip. Credits \u00b6 Author: tmatheussen - 2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release. Usage \u00b6 - type : 'custom:button-card' template : custom_card_person_chip variables : ulm_custom_card_person_chip_entity : person.tom Variables \u00b6 Variable Example Required Default Explanation ulm_custom_card_person_chip_entity person.tom yes The person to show Example \u00b6 - type : 'custom:button-card' template : custom_card_person_chip variables : ulm_custom_card_person_chip_entity : person.tom","title":"Person Chip Custom-card"},{"location":"usage/custom_cards/custom_card_person_chip/#custom-card-person-chip","text":"This is a custom-card to display a person entity as a chip.","title":"Custom-card \"Person Chip\""},{"location":"usage/custom_cards/custom_card_person_chip/#credits","text":"Author: tmatheussen - 2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_person_chip/#changelog","text":"1.0.0 Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_person_chip/#usage","text":"- type : 'custom:button-card' template : custom_card_person_chip variables : ulm_custom_card_person_chip_entity : person.tom","title":"Usage"},{"location":"usage/custom_cards/custom_card_person_chip/#variables","text":"Variable Example Required Default Explanation ulm_custom_card_person_chip_entity person.tom yes The person to show","title":"Variables"},{"location":"usage/custom_cards/custom_card_person_chip/#example","text":"- type : 'custom:button-card' template : custom_card_person_chip variables : ulm_custom_card_person_chip_entity : person.tom","title":"Example"},{"location":"usage/custom_cards/custom_card_person_info/","text":"Description \u00b6 The custom_card_person_info is an extension of card_person . It can also show if the user is driving, a related battery level, and a related commute time. Credits \u00b6 Author: Jordan Janzen < @jordandrako > Version: 1.0.0 Variables \u00b6 Variable Default Required Notes ulm_card_person_entity The person entity ulm_card_person_use_entity_picture If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_zone1 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_card_person_zone2 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_address Show an address as label, add an entity with a geo location ulm_multiline false Show battery and commute sensors below state ulm_card_person_driving_entity Set a binary sensor that depicts when this person is driving ulm_card_person_battery_entity Set a battery level sensor ulm_card_person_battery_state_entity Set a battery state sensor (eg the battery state sensor from the home assistant companion app will have the states \"charging\" or \"discharging\") ulm_card_person_commute_entity Set a travel time sensor ulm_card_person_cummute_icon \"mdi:car\" Set an icon for the commute sensor to use Usage \u00b6 - type : \"custom:button-card\" template : card_person_info variables : ulm_card_person_entity : person.lee ulm_card_person_use_entity_picture : true ulm_card_person_zone1 : zone.uw ulm_card_person_zone2 : zone.store ulm_multiline : true ulm_card_person_driving_entity : binary_sensor.lee_in_car ulm_card_person_commute_entity : sensor.uw_commute ulm_card_person_commute_icon : mdi:bus ulm_card_person_battery_entity : sensor.lees_phone_battery_level ulm_card_person_battery_state_entity : sensor.lees_phone_battery_state Template Code \u00b6 --- card_person_info : template : - \"icon_info_bg\" - \"ulm_language_variables\" variables : ulm_card_person_use_entity_picture : false ulm_card_person_zone1 : \"\" ulm_card_person_zone2 : \"\" ulm_address : \"\" ulm_card_person_driving_entity : \"\" ulm_card_person_battery_entity : \"\" ulm_card_person_battery_state_entity : \"\" ulm_card_person_commute_entity : \"\" ulm_card_person_cummute_icon : \"mdi:car\" ulm_multiline : false triggers_update : \"all\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" show_label : true show_name : true label : > [[[ if (variables.ulm_address !== ''){ return states[variables.ulm_address].state; } else if (states[variables.ulm_card_person_driving_entity].state === \"on\") { let state = states[variables.ulm_card_person_entity].state; return `Driving - ${variables[\"ulm_person_state_\" + state] ? variables[\"ulm_person_state_\" + state] : state}`; } else { let state = states[variables.ulm_card_person_entity].state; return variables[\"ulm_person_state_\" + state] ? variables[\"ulm_person_state_\" + state] : state; } ]]] name : \"[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" icon : \"mdi:face-man\" show_entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\" entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture != false ? states[variables.ulm_card_person_entity].attributes.entity_picture\\ \\ : null ]]]\" styles : grid : - grid-template-areas : > [[[ return variables.ulm_multiline ? \"'i n' 'i l' 'battery commute'\" : \"'i n battery' 'i l commute'\" ]]] - grid-template-columns : > [[[ return variables.ulm_multiline ? \"min-content auto\" : \"min-content auto min-content\" ]]] - grid-template-rows : \"min-content min-content\" icon : - color : \"rgba(var(--color-theme),0.9)\" - width : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"20px\"; } else { return \"42px\"; } ]]] - place-self : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"center\"; } else { return \"stretch stretch\"; } ]]] custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_person_driving_entity].state === \"on\") { return \"rgba(var(--color-red),1)\"; } else if (states[variables.ulm_card_person_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] battery : - align-self : \"middle\" - justify-self : \"start\" - display : \"flex\" - align-items : \"center\" - margin-top : > [[[ return variables.ulm_multiline ? \"6px\" : \"0\" - font-size : \"12px\" commute : - align-self : \"middle\" - justify-self : \"end\" - display : \"flex\" - align-items : \"center\" - margin-top : \"6px\" - font-size : \"12px\" custom_fields : notification : > [[[ if (states[variables.ulm_card_person_driving_entity].state === \"on\") { var icon = 'mdi:car' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else if (states[variables.ulm_card_person_entity].state !== 'home') { if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone1]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone1].attributes.icon !== null ? states[variables.ulm_card_person_zone1].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone2]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone2].attributes.icon !== null ? states[variables.ulm_card_person_zone2].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } } else { return '<ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] battery : > [[[ if (states[variables.ulm_card_person_battery_entity]?.state) { var battery = states[variables.ulm_card_person_battery_entity]?.state; var charging = states[variables.ulm_card_person_battery_state_entity]?.state === \"charging\"; var iconBase = charging ? \"mdi:battery-charging\" : \"mdi:battery\" var roundedBattery = Math.ceil(battery / 10) * 10; var icon = roundedBattery === 100 ? iconBase : `${iconBase}-${roundedBattery}`; var foo = \"mdi:battery\" var color = \"rgba(var(--color-green),1)\"; if (battery <= 50) { color = \"rgba(var(--color-yellow),1)\" } else if (battery <= 25) { color = \"rgba(var(--color-red),1)\" } return ` <ha-icon icon=\"${icon}\" style=\"width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0 2px 0 0\"></ha-icon> <span style=\"padding-top: 6px;\">${battery}%</span> `; } ]]] commute : > [[[ if (states[variables.ulm_card_person_commute_entity]?.state) { var icon = variables.ulm_card_person_commute_icon || \"mdi:car\"; var commute = states[variables.ulm_card_person_commute_entity]?.state; var color = \"rgba(var(--color-green),1)\"; if (commute >= 30) { color = \"rgba(var(--color-yellow),1)\" } if (commute >= 60) { color = \"rgba(var(--color-red),1)\" } return ` <ha-icon icon=\"${icon}\" style=\"width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0 2px 0 0\"></ha-icon> <span style=\"padding-top: 6px;\">${commute} min</span> `; } ]]]","title":"Person Info Card"},{"location":"usage/custom_cards/custom_card_person_info/#description","text":"The custom_card_person_info is an extension of card_person . It can also show if the user is driving, a related battery level, and a related commute time.","title":"Description"},{"location":"usage/custom_cards/custom_card_person_info/#credits","text":"Author: Jordan Janzen < @jordandrako > Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_person_info/#variables","text":"Variable Default Required Notes ulm_card_person_entity The person entity ulm_card_person_use_entity_picture If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_zone1 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_card_person_zone2 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_address Show an address as label, add an entity with a geo location ulm_multiline false Show battery and commute sensors below state ulm_card_person_driving_entity Set a binary sensor that depicts when this person is driving ulm_card_person_battery_entity Set a battery level sensor ulm_card_person_battery_state_entity Set a battery state sensor (eg the battery state sensor from the home assistant companion app will have the states \"charging\" or \"discharging\") ulm_card_person_commute_entity Set a travel time sensor ulm_card_person_cummute_icon \"mdi:car\" Set an icon for the commute sensor to use","title":"Variables"},{"location":"usage/custom_cards/custom_card_person_info/#usage","text":"- type : \"custom:button-card\" template : card_person_info variables : ulm_card_person_entity : person.lee ulm_card_person_use_entity_picture : true ulm_card_person_zone1 : zone.uw ulm_card_person_zone2 : zone.store ulm_multiline : true ulm_card_person_driving_entity : binary_sensor.lee_in_car ulm_card_person_commute_entity : sensor.uw_commute ulm_card_person_commute_icon : mdi:bus ulm_card_person_battery_entity : sensor.lees_phone_battery_level ulm_card_person_battery_state_entity : sensor.lees_phone_battery_state","title":"Usage"},{"location":"usage/custom_cards/custom_card_person_info/#template-code","text":"--- card_person_info : template : - \"icon_info_bg\" - \"ulm_language_variables\" variables : ulm_card_person_use_entity_picture : false ulm_card_person_zone1 : \"\" ulm_card_person_zone2 : \"\" ulm_address : \"\" ulm_card_person_driving_entity : \"\" ulm_card_person_battery_entity : \"\" ulm_card_person_battery_state_entity : \"\" ulm_card_person_commute_entity : \"\" ulm_card_person_cummute_icon : \"mdi:car\" ulm_multiline : false triggers_update : \"all\" tap_action : action : \"more-info\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" show_label : true show_name : true label : > [[[ if (variables.ulm_address !== ''){ return states[variables.ulm_address].state; } else if (states[variables.ulm_card_person_driving_entity].state === \"on\") { let state = states[variables.ulm_card_person_entity].state; return `Driving - ${variables[\"ulm_person_state_\" + state] ? variables[\"ulm_person_state_\" + state] : state}`; } else { let state = states[variables.ulm_card_person_entity].state; return variables[\"ulm_person_state_\" + state] ? variables[\"ulm_person_state_\" + state] : state; } ]]] name : \"[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]\" entity : \"[[[ return variables.ulm_card_person_entity; ]]]\" icon : \"mdi:face-man\" show_entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\" entity_picture : \"[[[ return variables.ulm_card_person_use_entity_picture != false ? states[variables.ulm_card_person_entity].attributes.entity_picture\\ \\ : null ]]]\" styles : grid : - grid-template-areas : > [[[ return variables.ulm_multiline ? \"'i n' 'i l' 'battery commute'\" : \"'i n battery' 'i l commute'\" ]]] - grid-template-columns : > [[[ return variables.ulm_multiline ? \"min-content auto\" : \"min-content auto min-content\" ]]] - grid-template-rows : \"min-content min-content\" icon : - color : \"rgba(var(--color-theme),0.9)\" - width : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"20px\"; } else { return \"42px\"; } ]]] - place-self : > [[[ if (variables.ulm_card_person_use_entity_picture !== true){ return \"center\"; } else { return \"stretch stretch\"; } ]]] custom_fields : notification : - border-radius : \"50%\" - position : \"absolute\" - left : \"38px\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_person_driving_entity].state === \"on\") { return \"rgba(var(--color-red),1)\"; } else if (states[variables.ulm_card_person_entity].state !== 'home') { return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] battery : - align-self : \"middle\" - justify-self : \"start\" - display : \"flex\" - align-items : \"center\" - margin-top : > [[[ return variables.ulm_multiline ? \"6px\" : \"0\" - font-size : \"12px\" commute : - align-self : \"middle\" - justify-self : \"end\" - display : \"flex\" - align-items : \"center\" - margin-top : \"6px\" - font-size : \"12px\" custom_fields : notification : > [[[ if (states[variables.ulm_card_person_driving_entity].state === \"on\") { var icon = 'mdi:car' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else if (states[variables.ulm_card_person_entity].state !== 'home') { if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone1]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone1].attributes.icon !== null ? states[variables.ulm_card_person_zone1].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone2]?.attributes?.friendly_name) { var icon = states[variables.ulm_card_person_zone2].attributes.icon !== null ? states[variables.ulm_card_person_zone2].attributes.icon : 'mdi:help-circle' return '<ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } } else { return '<ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] battery : > [[[ if (states[variables.ulm_card_person_battery_entity]?.state) { var battery = states[variables.ulm_card_person_battery_entity]?.state; var charging = states[variables.ulm_card_person_battery_state_entity]?.state === \"charging\"; var iconBase = charging ? \"mdi:battery-charging\" : \"mdi:battery\" var roundedBattery = Math.ceil(battery / 10) * 10; var icon = roundedBattery === 100 ? iconBase : `${iconBase}-${roundedBattery}`; var foo = \"mdi:battery\" var color = \"rgba(var(--color-green),1)\"; if (battery <= 50) { color = \"rgba(var(--color-yellow),1)\" } else if (battery <= 25) { color = \"rgba(var(--color-red),1)\" } return ` <ha-icon icon=\"${icon}\" style=\"width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0 2px 0 0\"></ha-icon> <span style=\"padding-top: 6px;\">${battery}%</span> `; } ]]] commute : > [[[ if (states[variables.ulm_card_person_commute_entity]?.state) { var icon = variables.ulm_card_person_commute_icon || \"mdi:car\"; var commute = states[variables.ulm_card_person_commute_entity]?.state; var color = \"rgba(var(--color-green),1)\"; if (commute >= 30) { color = \"rgba(var(--color-yellow),1)\" } if (commute >= 60) { color = \"rgba(var(--color-red),1)\" } return ` <ha-icon icon=\"${icon}\" style=\"width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0 2px 0 0\"></ha-icon> <span style=\"padding-top: 6px;\">${commute} min</span> `; } ]]]","title":"Template Code"},{"location":"usage/custom_cards/custom_card_playstation/","text":"Playstation \u00b6 NOTE This card is under review and is not ready to use! Usage #### Example - type : 'custom:button-card' template : card_ps4 entity : media_player.example #### Variables Variable Example Required Explanation Template code card_ps4 : template : - icon_info_bg label : >- [[[ if (entity.state =='unknown'){ return \"Off\"; }else if (entity.state =='standby'){ return \"En veille\"; }else{ return \"On\"; } ]]] styles : icon : - color : 'rgba(var(--color-theme),0.2)' img_cell : - background-color : 'rgba(var(--color-theme),0.05)' state : - value : 'idle' styles : icon : - color : 'rgba(var(--color-blue),1)' img_cell : - background-color : 'rgba(var(--color-blue), 0.2)' - value : 'standby' styles : icon : - color : 'rgba(var(--color-theme),0.2)' img_cell : - background-color : 'rgba(var(--color-theme),0.05)' - operator : template value : > [[[ return entity.state !='unknown' ]]] name : > [[[ return entity.attributes.media_title; ]]] label : > [[[ return entity.attributes.friendly_name; ]]] styles : label : - color : white - filter : opacity(100%) img_cell : - background-color : 'none' icon : - color : white name : - color : white card : - background-blend-mode : multiply - background : > [[[ var image = entity.attributes.entity_picture; return 'center / cover url(' + image + ') rgba(0, 0, 0, 0.15)'; ]]]","title":"PS4 Custom-card"},{"location":"usage/custom_cards/custom_card_playstation/#playstation","text":"NOTE This card is under review and is not ready to use! Usage #### Example - type : 'custom:button-card' template : card_ps4 entity : media_player.example #### Variables Variable Example Required Explanation Template code card_ps4 : template : - icon_info_bg label : >- [[[ if (entity.state =='unknown'){ return \"Off\"; }else if (entity.state =='standby'){ return \"En veille\"; }else{ return \"On\"; } ]]] styles : icon : - color : 'rgba(var(--color-theme),0.2)' img_cell : - background-color : 'rgba(var(--color-theme),0.05)' state : - value : 'idle' styles : icon : - color : 'rgba(var(--color-blue),1)' img_cell : - background-color : 'rgba(var(--color-blue), 0.2)' - value : 'standby' styles : icon : - color : 'rgba(var(--color-theme),0.2)' img_cell : - background-color : 'rgba(var(--color-theme),0.05)' - operator : template value : > [[[ return entity.state !='unknown' ]]] name : > [[[ return entity.attributes.media_title; ]]] label : > [[[ return entity.attributes.friendly_name; ]]] styles : label : - color : white - filter : opacity(100%) img_cell : - background-color : 'none' icon : - color : white name : - color : white card : - background-blend-mode : multiply - background : > [[[ var image = entity.attributes.entity_picture; return 'center / cover url(' + image + ') rgba(0, 0, 0, 0.15)'; ]]]","title":"Playstation"},{"location":"usage/custom_cards/custom_card_qubino/","text":"Custom-card \"Qubino\" \u00b6 NOTE This card is under review and is not ready to use! Credits \u00b6 Author: tben - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 Requirements \u00b6 This card needs the following to function correctly: Component / card required Note Variables \u00b6 Variable Example Required Explanation Template code \u00b6 HomeAssistant \u00b6 ... Example \u00b6 ... Note \u00b6 ...","title":"Qubino Custom-card"},{"location":"usage/custom_cards/custom_card_qubino/#custom-card-qubino","text":"NOTE This card is under review and is not ready to use!","title":"Custom-card \"Qubino\""},{"location":"usage/custom_cards/custom_card_qubino/#credits","text":"Author: tben - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_qubino/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_qubino/#usage","text":"","title":"Usage"},{"location":"usage/custom_cards/custom_card_qubino/#requirements","text":"This card needs the following to function correctly: Component / card required Note","title":"Requirements"},{"location":"usage/custom_cards/custom_card_qubino/#variables","text":"Variable Example Required Explanation","title":"Variables"},{"location":"usage/custom_cards/custom_card_qubino/#template-code","text":"","title":"Template code"},{"location":"usage/custom_cards/custom_card_qubino/#homeassistant","text":"...","title":"HomeAssistant"},{"location":"usage/custom_cards/custom_card_qubino/#example","text":"...","title":"Example"},{"location":"usage/custom_cards/custom_card_qubino/#note","text":"...","title":"Note"},{"location":"usage/custom_cards/custom_card_saxel_fan/","text":"Custom-card \"Fan\" \u00b6 This is a custom card to control a fan. It allows you to turn on/off the fan, adjusting the fan speed with a slider, and turn on/off oscillation. Two styles are available: Template Description custom_card_saxel_fan Follows the standard theme of UI-Lovelace-Minimalist custom_card_saxel_fan_blue Card is theme based when the fan is OFF , Blue when the fan is ON Light theme \u00b6 Dark theme \u00b6 Credits \u00b6 Author: saxel - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Requirements \u00b6 This card needs the following to function correctly: Component / card Required Note My Cards yes Card Mod yes Usage \u00b6 Standard \u00b6 - type : custom:button-card template : custom_card_saxel_fan_blue entity : fan.smart_fan name : Fan variables : collapsable : false oscillate_attribute : oscillate Blue \u00b6 - type : custom:button-card template : custom_card_saxel_fan entity : fan.smart_fan name : Fan variables : collapsable : true oscillate_attribute : oscillate Variables \u00b6 Variable Example Required Explanation entity fan.smart_fan yes Fan entity name Fan no Name to show. If not specified the attribute friendly_name is shown instead collapsable true no true/false if the fan speed row should collapse when the fan is turned off. Default: true oscillate_attribute oscillate no Name of the oscillate attribute of the fan entity. Default: oscillate","title":"Fan Card Custom-card"},{"location":"usage/custom_cards/custom_card_saxel_fan/#custom-card-fan","text":"This is a custom card to control a fan. It allows you to turn on/off the fan, adjusting the fan speed with a slider, and turn on/off oscillation. Two styles are available: Template Description custom_card_saxel_fan Follows the standard theme of UI-Lovelace-Minimalist custom_card_saxel_fan_blue Card is theme based when the fan is OFF , Blue when the fan is ON","title":"Custom-card \"Fan\""},{"location":"usage/custom_cards/custom_card_saxel_fan/#light-theme","text":"","title":"Light theme"},{"location":"usage/custom_cards/custom_card_saxel_fan/#dark-theme","text":"","title":"Dark theme"},{"location":"usage/custom_cards/custom_card_saxel_fan/#credits","text":"Author: saxel - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_saxel_fan/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_saxel_fan/#requirements","text":"This card needs the following to function correctly: Component / card Required Note My Cards yes Card Mod yes","title":"Requirements"},{"location":"usage/custom_cards/custom_card_saxel_fan/#usage","text":"","title":"Usage"},{"location":"usage/custom_cards/custom_card_saxel_fan/#standard","text":"- type : custom:button-card template : custom_card_saxel_fan_blue entity : fan.smart_fan name : Fan variables : collapsable : false oscillate_attribute : oscillate","title":"Standard"},{"location":"usage/custom_cards/custom_card_saxel_fan/#blue","text":"- type : custom:button-card template : custom_card_saxel_fan entity : fan.smart_fan name : Fan variables : collapsable : true oscillate_attribute : oscillate","title":"Blue"},{"location":"usage/custom_cards/custom_card_saxel_fan/#variables","text":"Variable Example Required Explanation entity fan.smart_fan yes Fan entity name Fan no Name to show. If not specified the attribute friendly_name is shown instead collapsable true no true/false if the fan speed row should collapse when the fan is turned off. Default: true oscillate_attribute oscillate no Name of the oscillate attribute of the fan entity. Default: oscillate","title":"Variables"},{"location":"usage/custom_cards/custom_card_scenes/","text":"Custom-card \"Scenes Card\" \u00b6 The card_scenes you can control up to 5 entity such as scene or script . Credits \u00b6 Author: sildehoop - 2021 Version: 1.2.0 Breaking changes 1.2.0 ```yaml #OLD - type: \"custom:button-card\" template: - card_scenes variables: entity_1: \"scene.YOUR_SCENE\" entity_2: \"scene.YOUR_SCENE\" entity_3: \"scene.YOUR_SCENE\" entity_4: \"scene.YOUR_SCENE\" entity_5: \"scene.YOUR_SCENE\" name_1: \"YOUR_NAME\" name_2: \"YOUR_NAME\" name_3: \"YOUR_NAME\" name_4: \"YOUR_NAME\" name_5: \"YOUR_NAME\" icon_1: \"mdi:YOUR_ICON\" icon_2: \"mdi:YOUR_ICON\" icon_3: \"mdi:YOUR_ICON\" icon_4: \"mdi:YOUR_ICON\" icon_5: \"mdi:YOUR_ICON\" color_icon_1: \"yellow\" color_icon_2: \"blue\" color_icon_3: \"purple\" color_icon_4: \"green\" color_icon_5: \"red\" color_bg_1: \"yellow\" color_bg_2: \"blue\" color_bg_3: \"purple\" color_bg_4: \"green\" color_bg_5: \"red\" ``` ```yaml #NEW - type: \"custom:button-card\" template: - card_scenes variables: entity_1: entity_id: \"scene.YOUR_SCENE\" icon: \"mdi:YOUR_ICON\" icon_color: \"yellow\" name: \"YOUR_NAME\" bg_color: \"yellow\" entity_2: entity_id: \"scene.YOUR_SCENE\" icon: \"mdi:YOUR_ICON\" icon_color: \"blue\" name: \"YOUR_NAME\" bg_color: \"blue\" entity_3: entity_id: \"scene.YOUR_SCENE\" icon: \"mdi:YOUR_ICON\" icon_color: \"purple\" name: \"YOUR_NAME\" bg_color: \"purple\" entity_4: entity_id: \"scene.YOUR_SCENE\" icon: \"mdi:YOUR_ICON\" icon_color: \"green\" name: \"YOUR_NAME\" bg_color: \"green\" entity_5: entity_id: \"scene.YOUR_SCENE\" icon: \"mdi:YOUR_ICON\" icon_color: \"red\" name: \"YOUR_NAME\" bg_color: \"red\" ``` Changelog \u00b6 1.2.0 Implementation of nested variables 1.1.0 Auto dark mode box shadow 1.0.0 Initial release Usage \u00b6 - type : \"custom:button-card\" template : - card_scenes variables : entity_1 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"yellow\" name : \"YOUR_NAME\" bg_color : \"yellow\" entity_2 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"blue\" name : \"YOUR_NAME\" bg_color : \"blue\" entity_3 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"purple\" name : \"YOUR_NAME\" bg_color : \"purple\" entity_4 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"green\" name : \"YOUR_NAME\" bg_color : \"green\" entity_5 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"red\" name : \"YOUR_NAME\" bg_color : \"red\" Requirements \u00b6 n/a Variables \u00b6 Variable Example Required Explanation entity_ scene.evening_light yes Your scene entity name_ Night yes The name to show icon_ mdi:weather-night yes The icon to show color_icon_ yellow, blue, purple, green, red no The color of the icon to show color_bg_ yellow, blue, purple, green, red no The color of the icon background to show Template code \u00b6 Template Code custom_card_scenes.yaml --- card_scenes : show_icon : false show_name : false show_label : false variables : entity_1 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_2 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_3 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_4 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_5 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" styles : grid : - grid-template-areas : \"'item1 item2 item3 item4 item5'\" - grid-template-columns : \"1fr 1fr 1fr 1fr 1fr\" - grid-template-rows : \"min-content\" - justify-items : \"center\" - column-gap : \"auto\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_1.entity_id ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" variables : color_icon : \"[[[ return variables.entity_1.icon_color ]]]\" color_bg : \"[[[ return variables.entity_1.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_1.entity_id ]]]\" item2 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" variables : color_icon : \"[[[ return variables.entity_2.icon_color ]]]\" color_bg : \"[[[ return variables.entity_2.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_2.entity_id ]]]\" item3 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" variables : color_icon : \"[[[ return variables.entity_3.icon_color ]]]\" color_bg : \"[[[ return variables.entity_3.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_3.entity_id ]]]\" item4 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_4.entity_id ]]]\" icon : \"[[[ return variables.entity_4.icon ]]]\" name : \"[[[ return variables.entity_4.name ]]]\" variables : color_icon : \"[[[ return variables.entity_4.icon_color ]]]\" color_bg : \"[[[ return variables.entity_4.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_4.entity_id ]]]\" item5 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_5.entity_id ]]]\" icon : \"[[[ return variables.entity_5.icon ]]]\" name : \"[[[ return variables.entity_5.name ]]]\" variables : color_icon : \"[[[ return variables.entity_5.icon_color ]]]\" color_bg : \"[[[ return variables.entity_5.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_5.entity_id ]]]\" card_scenes_pill : show_icon : true show_label : false show_name : true variables : color_icon : \"gray\" color_bg : \"gray\" styles : grid : - grid-template-areas : \"'i' 'n'\" - grid-template-columns : \"min-content\" - grid-template-rows : \"1fr 1fr\" - row-gap : \"12px\" - justify-items : \"center\" - column-gap : \"auto\" card : - box-shadow : \"none\" - padding : \"5px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] - border-radius : \"50px\" - place-self : \"center\" - width : \"52px\" - height : \"84px\" icon : - color : > [[[ var color = [variables.color_icon]; if (color == \"gray\"){ var color = \"rgba(var(--color-theme),0.20)\"; } else if(color == \"yellow\"){ var color = \"rgba(var(--color-yellow),1)\"; } else if(color == \"blue\"){ var color = \"rgba(var(--color-blue),1)\"; } else if(color == \"purple\"){ var color = \"rgba(var(--color-purple),1)\"; } else if(color == \"green\"){ var color = \"rgba(var(--color-green),1)\"; } else if(color == \"red\"){ var color = \"rgba(var(--color-red),1)\"; } return color; ]]] img_cell : - background-color : > [[[ var color = [variables.color_bg]; if (color == \"gray\"){ var color = \"rgba(var(--color-theme),0.05)\"; } else if(color == \"yellow\"){ var color = \"rgba(var(--color-yellow),0.20)\"; } else if(color == \"blue\"){ var color = \"rgba(var(--color-blue),0.20)\"; } else if(color == \"purple\"){ var color = \"rgba(var(--color-purple),0.20)\"; } else if(color == \"green\"){ var color = \"rgba(var(--color-green),0.20)\"; } else if(color == \"red\"){ var color = \"rgba(var(--color-red),0.20)\"; } return color; ]]] - border-radius : \"50%\" - width : \"42px\" - height : \"42px\" name : - font-weight : \"bold\" - font-size : \"9.5px\" - width : \"33px\" - padding-bottom : \"7px\" state : - color : \"rgba(var(--color-theme),0.9)\" color : \"var(--google-grey)\"","title":"Scenes Card Custom-card"},{"location":"usage/custom_cards/custom_card_scenes/#custom-card-scenes-card","text":"The card_scenes you can control up to 5 entity such as scene or script .","title":"Custom-card \"Scenes Card\""},{"location":"usage/custom_cards/custom_card_scenes/#credits","text":"Author: sildehoop - 2021 Version: 1.2.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_scenes/#changelog","text":"1.2.0 Implementation of nested variables 1.1.0 Auto dark mode box shadow 1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_scenes/#usage","text":"- type : \"custom:button-card\" template : - card_scenes variables : entity_1 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"yellow\" name : \"YOUR_NAME\" bg_color : \"yellow\" entity_2 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"blue\" name : \"YOUR_NAME\" bg_color : \"blue\" entity_3 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"purple\" name : \"YOUR_NAME\" bg_color : \"purple\" entity_4 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"green\" name : \"YOUR_NAME\" bg_color : \"green\" entity_5 : entity_id : \"scene.YOUR_SCENE\" icon : \"mdi:YOUR_ICON\" icon_color : \"red\" name : \"YOUR_NAME\" bg_color : \"red\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_scenes/#requirements","text":"n/a","title":"Requirements"},{"location":"usage/custom_cards/custom_card_scenes/#variables","text":"Variable Example Required Explanation entity_ scene.evening_light yes Your scene entity name_ Night yes The name to show icon_ mdi:weather-night yes The icon to show color_icon_ yellow, blue, purple, green, red no The color of the icon to show color_bg_ yellow, blue, purple, green, red no The color of the icon background to show","title":"Variables"},{"location":"usage/custom_cards/custom_card_scenes/#template-code","text":"Template Code custom_card_scenes.yaml --- card_scenes : show_icon : false show_name : false show_label : false variables : entity_1 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_2 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_3 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_4 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" entity_5 : entity_id : icon : \"mdi:help-circle-outline\" icon_color : \"gray\" name : \"n/a\" bg_color : \"gray\" styles : grid : - grid-template-areas : \"'item1 item2 item3 item4 item5'\" - grid-template-columns : \"1fr 1fr 1fr 1fr 1fr\" - grid-template-rows : \"min-content\" - justify-items : \"center\" - column-gap : \"auto\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_1.entity_id ]]]\" icon : \"[[[ return variables.entity_1.icon ]]]\" name : \"[[[ return variables.entity_1.name ]]]\" variables : color_icon : \"[[[ return variables.entity_1.icon_color ]]]\" color_bg : \"[[[ return variables.entity_1.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_1.entity_id ]]]\" item2 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_2.entity_id ]]]\" icon : \"[[[ return variables.entity_2.icon ]]]\" name : \"[[[ return variables.entity_2.name ]]]\" variables : color_icon : \"[[[ return variables.entity_2.icon_color ]]]\" color_bg : \"[[[ return variables.entity_2.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_2.entity_id ]]]\" item3 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_3.entity_id ]]]\" icon : \"[[[ return variables.entity_3.icon ]]]\" name : \"[[[ return variables.entity_3.name ]]]\" variables : color_icon : \"[[[ return variables.entity_3.icon_color ]]]\" color_bg : \"[[[ return variables.entity_3.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_3.entity_id ]]]\" item4 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_4.entity_id ]]]\" icon : \"[[[ return variables.entity_4.icon ]]]\" name : \"[[[ return variables.entity_4.name ]]]\" variables : color_icon : \"[[[ return variables.entity_4.icon_color ]]]\" color_bg : \"[[[ return variables.entity_4.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_4.entity_id ]]]\" item5 : card : type : \"custom:button-card\" template : \"card_scenes_pill\" entity : \"[[[ return variables.entity_5.entity_id ]]]\" icon : \"[[[ return variables.entity_5.icon ]]]\" name : \"[[[ return variables.entity_5.name ]]]\" variables : color_icon : \"[[[ return variables.entity_5.icon_color ]]]\" color_bg : \"[[[ return variables.entity_5.bg_color ]]]\" tap_action : action : \"call-service\" service : \"homeassistant.turn_on\" service_data : entity_id : \"[[[ return variables.entity_5.entity_id ]]]\" card_scenes_pill : show_icon : true show_label : false show_name : true variables : color_icon : \"gray\" color_bg : \"gray\" styles : grid : - grid-template-areas : \"'i' 'n'\" - grid-template-columns : \"min-content\" - grid-template-rows : \"1fr 1fr\" - row-gap : \"12px\" - justify-items : \"center\" - column-gap : \"auto\" card : - box-shadow : \"none\" - padding : \"5px\" - box-shadow : > [[[ if (hass.themes.darkMode){ return \"0px 2px 4px 0px rgba(0,0,0,0.80)\"; } else { return \"var(--box-shadow)\"; } ]]] - border-radius : \"50px\" - place-self : \"center\" - width : \"52px\" - height : \"84px\" icon : - color : > [[[ var color = [variables.color_icon]; if (color == \"gray\"){ var color = \"rgba(var(--color-theme),0.20)\"; } else if(color == \"yellow\"){ var color = \"rgba(var(--color-yellow),1)\"; } else if(color == \"blue\"){ var color = \"rgba(var(--color-blue),1)\"; } else if(color == \"purple\"){ var color = \"rgba(var(--color-purple),1)\"; } else if(color == \"green\"){ var color = \"rgba(var(--color-green),1)\"; } else if(color == \"red\"){ var color = \"rgba(var(--color-red),1)\"; } return color; ]]] img_cell : - background-color : > [[[ var color = [variables.color_bg]; if (color == \"gray\"){ var color = \"rgba(var(--color-theme),0.05)\"; } else if(color == \"yellow\"){ var color = \"rgba(var(--color-yellow),0.20)\"; } else if(color == \"blue\"){ var color = \"rgba(var(--color-blue),0.20)\"; } else if(color == \"purple\"){ var color = \"rgba(var(--color-purple),0.20)\"; } else if(color == \"green\"){ var color = \"rgba(var(--color-green),0.20)\"; } else if(color == \"red\"){ var color = \"rgba(var(--color-red),0.20)\"; } return color; ]]] - border-radius : \"50%\" - width : \"42px\" - height : \"42px\" name : - font-weight : \"bold\" - font-size : \"9.5px\" - width : \"33px\" - padding-bottom : \"7px\" state : - color : \"rgba(var(--color-theme),0.9)\" color : \"var(--google-grey)\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_schumijo_car/","text":"Custom-card \"Car\" \u00b6 This is a custom-card to informations about your car. NB : This card has only been tested with Audi Connect integration but should work with some others. Credits \u00b6 Author: schumijo - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : \"custom:button-card\" template : custom_card_schumijo_car variables : ulm_card_schumijo_car_name : \"Audi Q3\" ulm_card_schumijo_car_tracker : device_tracker.audi_q3_position ulm_card_schumijo_car_lock : lock.audi_q3_door_lock ulm_card_schumijo_car_energy_level : sensor.audi_q3_tank_level ulm_card_schumijo_car_range : sensor.audi_q3_range Variables \u00b6 Variable Example Required Explanation ulm_card_schumijo_car_name Audi Q3 yes The name of your car ulm_card_schumijo_car_tracker device_tracker.audi_q3_position yes A device_tracker entity of your car ulm_card_schumijo_car_lock lock.audi_q3_door_lock yes A lock entity of your car ulm_card_schumijo_car_energy_level sensor.audi_q3_tank_level yes A sensor entity that represents energy level of your car (can be fuel or electric) ulm_card_schumijo_car_range sensor.audi_q3_range yes A sensor entity that represents range of your car Template code \u00b6 --- widget_icon_state : tap_action : action : \"none\" layout : \"icon_state\" show_state : true show_units : false styles : grid : - grid-template-areas : \"'i s' 'n n'\" - grid-template-columns : \"45% 55%\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" name : - font-weight : \"bold\" - font-size : \"10px\" - filter : \"opacity(40%)\" - margin-bottom : \"2px\" state : - justify-self : \"start\" - margin-left : \"5px\" - font-size : \"18px\" - font-weight : 600 icon : - color : \"rgba(var(--color-theme),0.9)\" img_cell : - justify-content : \"right\" size : \"20px\" color : \"var(--google-grey)\" car : template : - \"icon_info\" tap_action : action : \"more-info\" show_name : true show_last_changed : true name : \"[[[ return variables.ulm_card_schumijo_car_name ]]]\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:car\" styles : icon : - color : \"rgba(var(--color-theme),0.9)\" - width : \"20px\" - place-self : \"center\" custom_fields : tracker : - border-radius : \"50%\" - position : \"absolute\" - left : \"30px\" - top : \"-2px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_schumijo_car_tracker].state != 'home'){ return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] lock : - border-radius : \"50%\" - position : \"absolute\" - left : \"30px\" - top : \"24px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_schumijo_car_lock].state != 'locked'){ return \"rgba(var(--color-red),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] custom_fields : tracker : > [[[ if (states[variables.ulm_card_schumijo_car_tracker].state != 'home'){ return '<ha-icon icon=\"mdi:road-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] lock : > [[[ if (states[variables.ulm_card_schumijo_car_lock].state != 'locked'){ return '<ha-icon icon=\"mdi:lock-open\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:lock\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] custom_card_schumijo_car : template : - \"ulm_custom_card_schumijo_car_language_variables\" variables : ulm_card_schumijo_car_name : \"n/a\" show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"car\" entity : \"[[[ return variables.ulm_card_schumijo_car_tracker ]]]\" variables : ulm_card_schumijo_car_tracker : \"[[[ return variables.ulm_card_schumijo_car_tracker ]]]\" ulm_card_schumijo_car_name : \"[[[ return variables.ulm_card_schumijo_car_name ]]]\" ulm_card_schumijo_car_lock : \"[[[ return variables.ulm_card_schumijo_car_lock ]]]\" item2 : card : template : \"list_2_items\" type : \"custom:button-card\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon_state\" entity : \"[[[ return variables.ulm_card_schumijo_car_energy_level ]]]\" state_display : > [[[ return parseFloat(states[variables.ulm_card_schumijo_car_energy_level].state).toFixed(0); ]]] name : \"[[[ return states[variables.ulm_card_schumijo_car_energy_level].attributes.unit_of_measurement + ' ' + variables.ulm_custom_card_schumijo_car_energy_level\\ \\ ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_icon_state\" entity : \"[[[ return variables.ulm_card_schumijo_car_range ]]]\" state_display : > [[[ return parseFloat(states[variables.ulm_card_schumijo_car_range].state).toFixed(0); ]]] name : \"[[[ return states[variables.ulm_card_schumijo_car_range].attributes.unit_of_measurement + ' ' + variables.ulm_custom_card_schumijo_car_range\\ \\ ]]]\"","title":"Car Custom-card"},{"location":"usage/custom_cards/custom_card_schumijo_car/#custom-card-car","text":"This is a custom-card to informations about your car. NB : This card has only been tested with Audi Connect integration but should work with some others.","title":"Custom-card \"Car\""},{"location":"usage/custom_cards/custom_card_schumijo_car/#credits","text":"Author: schumijo - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_schumijo_car/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_schumijo_car/#usage","text":"- type : \"custom:button-card\" template : custom_card_schumijo_car variables : ulm_card_schumijo_car_name : \"Audi Q3\" ulm_card_schumijo_car_tracker : device_tracker.audi_q3_position ulm_card_schumijo_car_lock : lock.audi_q3_door_lock ulm_card_schumijo_car_energy_level : sensor.audi_q3_tank_level ulm_card_schumijo_car_range : sensor.audi_q3_range","title":"Usage"},{"location":"usage/custom_cards/custom_card_schumijo_car/#variables","text":"Variable Example Required Explanation ulm_card_schumijo_car_name Audi Q3 yes The name of your car ulm_card_schumijo_car_tracker device_tracker.audi_q3_position yes A device_tracker entity of your car ulm_card_schumijo_car_lock lock.audi_q3_door_lock yes A lock entity of your car ulm_card_schumijo_car_energy_level sensor.audi_q3_tank_level yes A sensor entity that represents energy level of your car (can be fuel or electric) ulm_card_schumijo_car_range sensor.audi_q3_range yes A sensor entity that represents range of your car","title":"Variables"},{"location":"usage/custom_cards/custom_card_schumijo_car/#template-code","text":"--- widget_icon_state : tap_action : action : \"none\" layout : \"icon_state\" show_state : true show_units : false styles : grid : - grid-template-areas : \"'i s' 'n n'\" - grid-template-columns : \"45% 55%\" card : - box-shadow : \"none\" - padding : \"0px\" - background-color : \"rgba(var(--color-theme),0.05)\" - border-radius : \"14px\" - place-self : \"center\" - height : \"42px\" name : - font-weight : \"bold\" - font-size : \"10px\" - filter : \"opacity(40%)\" - margin-bottom : \"2px\" state : - justify-self : \"start\" - margin-left : \"5px\" - font-size : \"18px\" - font-weight : 600 icon : - color : \"rgba(var(--color-theme),0.9)\" img_cell : - justify-content : \"right\" size : \"20px\" color : \"var(--google-grey)\" car : template : - \"icon_info\" tap_action : action : \"more-info\" show_name : true show_last_changed : true name : \"[[[ return variables.ulm_card_schumijo_car_name ]]]\" entity : \"[[[ return entity.entity_id ]]]\" icon : \"mdi:car\" styles : icon : - color : \"rgba(var(--color-theme),0.9)\" - width : \"20px\" - place-self : \"center\" custom_fields : tracker : - border-radius : \"50%\" - position : \"absolute\" - left : \"30px\" - top : \"-2px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_schumijo_car_tracker].state != 'home'){ return \"rgba(var(--color-green),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] lock : - border-radius : \"50%\" - position : \"absolute\" - left : \"30px\" - top : \"24px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : > [[[ if (states[variables.ulm_card_schumijo_car_lock].state != 'locked'){ return \"rgba(var(--color-red),1)\"; } else { return \"rgba(var(--color-blue),1)\"; } ]]] custom_fields : tracker : > [[[ if (states[variables.ulm_card_schumijo_car_tracker].state != 'home'){ return '<ha-icon icon=\"mdi:road-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] lock : > [[[ if (states[variables.ulm_card_schumijo_car_lock].state != 'locked'){ return '<ha-icon icon=\"mdi:lock-open\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } else { return '<ha-icon icon=\"mdi:lock\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"></ha-icon>'; } ]]] custom_card_schumijo_car : template : - \"ulm_custom_card_schumijo_car_language_variables\" variables : ulm_card_schumijo_car_name : \"n/a\" show_icon : false show_name : false show_label : false styles : grid : - grid-template-areas : \"'item1' 'item2'\" - grid-template-columns : \"1fr\" - grid-template-rows : \"min-content min-content\" - row-gap : \"12px\" card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" - padding : \"12px\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"car\" entity : \"[[[ return variables.ulm_card_schumijo_car_tracker ]]]\" variables : ulm_card_schumijo_car_tracker : \"[[[ return variables.ulm_card_schumijo_car_tracker ]]]\" ulm_card_schumijo_car_name : \"[[[ return variables.ulm_card_schumijo_car_name ]]]\" ulm_card_schumijo_car_lock : \"[[[ return variables.ulm_card_schumijo_car_lock ]]]\" item2 : card : template : \"list_2_items\" type : \"custom:button-card\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"widget_icon_state\" entity : \"[[[ return variables.ulm_card_schumijo_car_energy_level ]]]\" state_display : > [[[ return parseFloat(states[variables.ulm_card_schumijo_car_energy_level].state).toFixed(0); ]]] name : \"[[[ return states[variables.ulm_card_schumijo_car_energy_level].attributes.unit_of_measurement + ' ' + variables.ulm_custom_card_schumijo_car_energy_level\\ \\ ]]]\" item2 : card : type : \"custom:button-card\" template : \"widget_icon_state\" entity : \"[[[ return variables.ulm_card_schumijo_car_range ]]]\" state_display : > [[[ return parseFloat(states[variables.ulm_card_schumijo_car_range].state).toFixed(0); ]]] name : \"[[[ return states[variables.ulm_card_schumijo_car_range].attributes.unit_of_measurement + ' ' + variables.ulm_custom_card_schumijo_car_range\\ \\ ]]]\"","title":"Template code"},{"location":"usage/custom_cards/custom_card_schumijo_flower/","text":"Custom-card \"Flower\" \u00b6 This is a custom-card to display a plant entity. Shows state of the plant and attributes. Credits \u00b6 Author: schumijo - 2021 Version: 1.1.0 Changelog \u00b6 1.0.0 Initial release 1.1.0 Fix language files for beta5 Updated README Usage \u00b6 - type : 'custom:button-card' template : card_flower variables : ulm_card_flower_entity : plant.bonsai_ficus ulm_card_flower_name : Bonsai Ficus ulm_card_flower_species : \"ficus retusa\" Variables \u00b6 Variable Example Required Explanation ulm_card_flower_entity plant.bonsai_ficus yes The entity of your plant ulm_card_flower_name Bonsai Ficus no The name of your plant ulm_card_flower_species \"ficus retusa\" yes The species of your plant Requirements \u00b6 Need lovelace-flower-card Template code \u00b6 list_1_item : styles : card : - box-shadow : none - padding : 0px grid : - grid-template-areas : '\"item1\"' - grid-template-columns : 1fr - grid-template-rows : min-content - column-gap : 7px flower : template : - ulm_custom_card_schumijo_flower_language_variables tap_action : action : more-info icon : | [[[ var icon = 'mdi:flower'; if (entity.state == 'problem'){ var icon = 'mdi:alert-circle'; } return icon ; ]]] label : >- [[[ if (entity.state == 'problem'){ return variables.ulm_custom_card_schumijo_flower_problem; }else{ return variables.ulm_custom_card_schumijo_flower_correct; } ]]] state : - operator : template value : > [[[ return entity.state != 'on'; ]]] styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green),0.2)\" card_flower : variables : ulm_card_flower_name : \"No name set\" styles : card : - border-radius : 20px - box-shadow : var(--box-shadow) - padding : 12px grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 6px custom_fields : item1 : card : entity : \"[[[ return variables.ulm_card_flower_entity ]]]\" name : \"[[[ return variables.ulm_card_flower_name ]]]\" tap_action : action : more-info template : - icon_info - flower type : \"custom:button-card\" item2 : card : template : list_1_item type : \"custom:button-card\" custom_fields : item1 : card : type : custom:flower-card entity : \"[[[ return variables.ulm_card_flower_entity ]]]\" species : \"[[[ return variables.ulm_card_flower_species ]]]\" card_mod : style : | ha-card{ margin-top: 0px !important; box-shadow: none !important; --mdc-icon-size: 16px !important; } .header{ display: none !important; } .divider{ display: none !important; } .value{ display: none !important; } .attributes{ padding: 0px !important; } .attribute ha-icon { margin-right: 0px !important; }","title":"Flower Custom-card"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#custom-card-flower","text":"This is a custom-card to display a plant entity. Shows state of the plant and attributes.","title":"Custom-card \"Flower\""},{"location":"usage/custom_cards/custom_card_schumijo_flower/#credits","text":"Author: schumijo - 2021 Version: 1.1.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#changelog","text":"1.0.0 Initial release 1.1.0 Fix language files for beta5 Updated README","title":"Changelog"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#usage","text":"- type : 'custom:button-card' template : card_flower variables : ulm_card_flower_entity : plant.bonsai_ficus ulm_card_flower_name : Bonsai Ficus ulm_card_flower_species : \"ficus retusa\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#variables","text":"Variable Example Required Explanation ulm_card_flower_entity plant.bonsai_ficus yes The entity of your plant ulm_card_flower_name Bonsai Ficus no The name of your plant ulm_card_flower_species \"ficus retusa\" yes The species of your plant","title":"Variables"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#requirements","text":"Need lovelace-flower-card","title":"Requirements"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#template-code","text":"list_1_item : styles : card : - box-shadow : none - padding : 0px grid : - grid-template-areas : '\"item1\"' - grid-template-columns : 1fr - grid-template-rows : min-content - column-gap : 7px flower : template : - ulm_custom_card_schumijo_flower_language_variables tap_action : action : more-info icon : | [[[ var icon = 'mdi:flower'; if (entity.state == 'problem'){ var icon = 'mdi:alert-circle'; } return icon ; ]]] label : >- [[[ if (entity.state == 'problem'){ return variables.ulm_custom_card_schumijo_flower_problem; }else{ return variables.ulm_custom_card_schumijo_flower_correct; } ]]] state : - operator : template value : > [[[ return entity.state != 'on'; ]]] styles : icon : - color : \"rgba(var(--color-green),1)\" img_cell : - background-color : \"rgba(var(--color-green),0.2)\" card_flower : variables : ulm_card_flower_name : \"No name set\" styles : card : - border-radius : 20px - box-shadow : var(--box-shadow) - padding : 12px grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 6px custom_fields : item1 : card : entity : \"[[[ return variables.ulm_card_flower_entity ]]]\" name : \"[[[ return variables.ulm_card_flower_name ]]]\" tap_action : action : more-info template : - icon_info - flower type : \"custom:button-card\" item2 : card : template : list_1_item type : \"custom:button-card\" custom_fields : item1 : card : type : custom:flower-card entity : \"[[[ return variables.ulm_card_flower_entity ]]]\" species : \"[[[ return variables.ulm_card_flower_species ]]]\" card_mod : style : | ha-card{ margin-top: 0px !important; box-shadow: none !important; --mdc-icon-size: 16px !important; } .header{ display: none !important; } .divider{ display: none !important; } .value{ display: none !important; } .attributes{ padding: 0px !important; } .attribute ha-icon { margin-right: 0px !important; }","title":"Template code"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/","text":"Custom-card \"AirCondition\" \u00b6 The custom_card_tpx01_aircondition shows data from your air condition and gives you the possibility to control it. Credits \u00b6 Author: tpx01 - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 - type : custom:button-card template : custom_card_tpx01_aircondition_with_buttons variables : entity : climate.livingroom name : A/C Livingroom Requirements \u00b6 n/a Variables \u00b6 Variable Example Required Explanation entity climate.livingroom yes Your climate entity name A/C Livingroom yes The name to show Template code \u00b6 custom_card_tpx01_aircondition : template : - ulm_language_variables - custom_card_tpx01_aircondition_language_variables tap_action : action : more-info icon : | [[[ if (entity.state =='dry') { return 'mdi:water'; } else if (entity.state =='heat') { return 'mdi:radiator'; } else if (entity.state =='cool') { return 'mdi:snowflake'; } else if (entity.state =='fan_only') { return 'mdi:fan'; } return 'mdi:air-conditioner'; ]]] label : >- [[[ if (entity.state =='off') { return variables.ulm_off; } else if (entity.state =='dry') { return variables.custom_card_tpx01_aircondition_dry; } else if (entity.state =='heat') { return variables.custom_card_tpx01_aircondition_heat; } else if (entity.state =='heat_cool') { return variables.custom_card_tpx01_aircondition_heat_cool; } else if (entity.state =='cool') { return variables.custom_card_tpx01_aircondition_cool; } else if (entity.state =='fan_only') { return variables.custom_card_tpx01_aircondition_fan_only; } return entity.state; ]]] state : - operator : template value : > [[[ return entity.state != 'off'; ]]] styles : icon : - color : 'rgba(var(--color-blue),1)' img_cell : - background-color : 'rgba(var(--color-blue),0.2)' custom_card_tpx01_aircondition_with_buttons : variables : name : null styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : custom:button-card template : list_items_favorite custom_fields : item1 : card : type : 'custom:button-card' template : - icon_info - custom_card_tpx01_aircondition tap_action : action : more-info name : > [[[ if (variables.name == null) { return variables.entity; } return variables.name; ]]] entity : '[[[ return variables.entity ]]]' item2 : card : type : horizontal-stack cards : - type : conditional conditions : - entity : '[[[ return variables.entity ]]]' state : 'off' card : type : custom:button-card template : widget_icon tap_action : action : call-service service : climate.set_hvac_mode service_data : entity_id : '[[[ return variables.entity ]]]' hvac_mode : 'cool' icon : mdi:power - type : conditional conditions : - entity : '[[[ return variables.entity ]]]' state_not : 'off' card : type : custom:button-card template : widget_icon tap_action : action : call-service service : climate.set_hvac_mode service_data : entity_id : '[[[ return variables.entity ]]]' hvac_mode : 'off' icon : mdi:power-off item2 : card : type : 'custom:button-card' template : list_items custom_fields : item1 : card : type : 'custom:button-card' template : widget_icon tap_action : action : call-service service : script.decrease_climate_temperature service_data : entity_id : '[[[ return variables.entity ]]]' icon : 'mdi:minus' item2 : card : type : 'custom:button-card' template : widget_temperature tap_action : action : none entity : '[[[ return variables.entity ]]]' icon : 'mdi:temperature-celsius' item3 : card : type : 'custom:button-card' template : widget_icon tap_action : action : call-service service : script.increment_climate_temperature service_data : entity_id : '[[[ return variables.entity ]]]' icon : 'mdi:plus' list_items_favorite : styles : grid : - grid-template-areas : '\"item1 item1 item2\"' - grid-template-columns : 1fr 1fr 1fr - grid-template-rows : min-content - column-gap : 7px card : - box-shadow : none - padding : 0px widget_temperature : tap_action : action : toggle color : var(--google-grey-500) show_icon : false show_name : false show_label : true size : 20px label : |- [[[ var temperature = entity.attributes.temperature; if (temperature == null) { var temperature = '-'; } return temperature + '\u00b0C' ]]] styles : label : - color : 'rgb(var(--color-theme),0.9)' grid : - grid-template-areas : '\"l\"' card : - box-shadow : none - padding : 0px - background-color : 'rgba(var(--couleur-theme),0)' - border-radius : 14px - place-self : center - height : 42px","title":"AirCondition Custom-card"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#custom-card-aircondition","text":"The custom_card_tpx01_aircondition shows data from your air condition and gives you the possibility to control it.","title":"Custom-card \"AirCondition\""},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#credits","text":"Author: tpx01 - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#usage","text":"- type : custom:button-card template : custom_card_tpx01_aircondition_with_buttons variables : entity : climate.livingroom name : A/C Livingroom","title":"Usage"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#requirements","text":"n/a","title":"Requirements"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#variables","text":"Variable Example Required Explanation entity climate.livingroom yes Your climate entity name A/C Livingroom yes The name to show","title":"Variables"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#template-code","text":"custom_card_tpx01_aircondition : template : - ulm_language_variables - custom_card_tpx01_aircondition_language_variables tap_action : action : more-info icon : | [[[ if (entity.state =='dry') { return 'mdi:water'; } else if (entity.state =='heat') { return 'mdi:radiator'; } else if (entity.state =='cool') { return 'mdi:snowflake'; } else if (entity.state =='fan_only') { return 'mdi:fan'; } return 'mdi:air-conditioner'; ]]] label : >- [[[ if (entity.state =='off') { return variables.ulm_off; } else if (entity.state =='dry') { return variables.custom_card_tpx01_aircondition_dry; } else if (entity.state =='heat') { return variables.custom_card_tpx01_aircondition_heat; } else if (entity.state =='heat_cool') { return variables.custom_card_tpx01_aircondition_heat_cool; } else if (entity.state =='cool') { return variables.custom_card_tpx01_aircondition_cool; } else if (entity.state =='fan_only') { return variables.custom_card_tpx01_aircondition_fan_only; } return entity.state; ]]] state : - operator : template value : > [[[ return entity.state != 'off'; ]]] styles : icon : - color : 'rgba(var(--color-blue),1)' img_cell : - background-color : 'rgba(var(--color-blue),0.2)' custom_card_tpx01_aircondition_with_buttons : variables : name : null styles : grid : - grid-template-areas : '\"item1\" \"item2\"' - grid-template-columns : 1fr - grid-template-rows : min-content min-content - row-gap : 12px card : - border-radius : var(--border-radius) - box-shadow : var(--box-shadow) - padding : 12px custom_fields : item1 : card : type : custom:button-card template : list_items_favorite custom_fields : item1 : card : type : 'custom:button-card' template : - icon_info - custom_card_tpx01_aircondition tap_action : action : more-info name : > [[[ if (variables.name == null) { return variables.entity; } return variables.name; ]]] entity : '[[[ return variables.entity ]]]' item2 : card : type : horizontal-stack cards : - type : conditional conditions : - entity : '[[[ return variables.entity ]]]' state : 'off' card : type : custom:button-card template : widget_icon tap_action : action : call-service service : climate.set_hvac_mode service_data : entity_id : '[[[ return variables.entity ]]]' hvac_mode : 'cool' icon : mdi:power - type : conditional conditions : - entity : '[[[ return variables.entity ]]]' state_not : 'off' card : type : custom:button-card template : widget_icon tap_action : action : call-service service : climate.set_hvac_mode service_data : entity_id : '[[[ return variables.entity ]]]' hvac_mode : 'off' icon : mdi:power-off item2 : card : type : 'custom:button-card' template : list_items custom_fields : item1 : card : type : 'custom:button-card' template : widget_icon tap_action : action : call-service service : script.decrease_climate_temperature service_data : entity_id : '[[[ return variables.entity ]]]' icon : 'mdi:minus' item2 : card : type : 'custom:button-card' template : widget_temperature tap_action : action : none entity : '[[[ return variables.entity ]]]' icon : 'mdi:temperature-celsius' item3 : card : type : 'custom:button-card' template : widget_icon tap_action : action : call-service service : script.increment_climate_temperature service_data : entity_id : '[[[ return variables.entity ]]]' icon : 'mdi:plus' list_items_favorite : styles : grid : - grid-template-areas : '\"item1 item1 item2\"' - grid-template-columns : 1fr 1fr 1fr - grid-template-rows : min-content - column-gap : 7px card : - box-shadow : none - padding : 0px widget_temperature : tap_action : action : toggle color : var(--google-grey-500) show_icon : false show_name : false show_label : true size : 20px label : |- [[[ var temperature = entity.attributes.temperature; if (temperature == null) { var temperature = '-'; } return temperature + '\u00b0C' ]]] styles : label : - color : 'rgb(var(--color-theme),0.9)' grid : - grid-template-areas : '\"l\"' card : - box-shadow : none - padding : 0px - background-color : 'rgba(var(--couleur-theme),0)' - border-radius : 14px - place-self : center - height : 42px","title":"Template code"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/","text":"Custom-card \"Device Tracker (Online or Offline ?)\" \u00b6 This card indicated whether a given device is online or offline using the Home Assistant device_tracker or the WoL-integration. Turn on you device with WoL: Credits \u00b6 Author: vncnt.dev - 2021 Version: 1.0.0 Changelog \u00b6 1.1.0 Support WoL 1.0.0 Initial release Usage \u00b6 - type : \"custom:button-card\" template : \"custom_card_vncntdev_device_tracker\" entity : switch.pc variables : custom_card_vncntdev_device_tracker_icon : mdi:desktop-mac custom_card_vncntdev_device_tracker_name : \"PC\" custom_card_vncntdev_device_tracker_status_as_name : true - type : \"custom:button-card\" template : \"custom_card_vncntdev_device_tracker\" entity : device_tracker.raspberry4 variables : custom_card_vncntdev_device_tracker_name : \"Raspberry Pi 4\" Requirements \u00b6 Setup the device tracker integration if you want to use WoL: Setup WoL integration Variables \u00b6 Variable Example Required Explanation entity device_tracker.pc true Icon of the Card custom_card_vncntdev_device_tracker_name \"PC\" false Custom name of device default: friendly name of device tracer custom_card_vncntdev_device_tracker_status_as_name true true swap label and name? default: false default: \"mdi:server\" custom_card_vncntdev_device_tracker_icon mdi:desktop-mac false Icon of the Card default: \"mdi:server\" custom_card_vncntdev_device_tracker_color_online \"var(--google-green)\" false Color of icon if device is online default: \"var(--google-green)\" custom_card_vncntdev_device_tracker_color_offline \"var(--google-red)\" false Color of icon if offline default: \"var(--google-red)\" Template code \u00b6 custom_card_vncntdev_device_tracker : template : \"card_generic\" variables : custom_card_vncntdev_device_tracker_name : custom_card_vncntdev_device_tracker_status_as_name : false custom_card_vncntdev_device_tracker_icon : \"mdi:server\" custom_card_vncntdev_device_tracker_color_online : \"var(--google-green)\" custom_card_vncntdev_device_tracker_color_offline : \"var(--google-red)\" tap_action : action : \"more-info\" icon : \"[[[return variables.custom_card_vncntdev_device_tracker_icon]]]\" label : | [[[ if (variables.custom_card_vncntdev_device_tracker_status_as_name) { return variables.custom_card_vncntdev_device_tracker_name !== null? variables.custom_card_vncntdev_device_tracker_name: entity.attributes.friendly_name; } else { return (entity.state == \"not_home\" || entity.state == \"off\") ? \"Offline\" : \"Online\"; } ]]] name : | [[[ if (!variables.custom_card_vncntdev_device_tracker_status_as_name) { return variables.custom_card_vncntdev_device_tracker_name !== null? variables.custom_card_vncntdev_device_tracker_name: entity.attributes.friendly_name; } else { return (entity.state == \"not_home\" || entity.state == \"off\") ? \"Offline\" : \"Online\"; } ]]] styles : icon : - color : > [[[ return (entity.state == \"not_home\" || entity.state == \"off\") ? variables.custom_card_vncntdev_device_tracker_color_offline: variables.custom_card_vncntdev_device_tracker_color_online; ]]] Note \u00b6","title":"Device Tracker Custom-card"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#custom-card-device-tracker-online-or-offline","text":"This card indicated whether a given device is online or offline using the Home Assistant device_tracker or the WoL-integration. Turn on you device with WoL:","title":"Custom-card \"Device Tracker (Online or Offline ?)\""},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#credits","text":"Author: vncnt.dev - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#changelog","text":"1.1.0 Support WoL 1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#usage","text":"- type : \"custom:button-card\" template : \"custom_card_vncntdev_device_tracker\" entity : switch.pc variables : custom_card_vncntdev_device_tracker_icon : mdi:desktop-mac custom_card_vncntdev_device_tracker_name : \"PC\" custom_card_vncntdev_device_tracker_status_as_name : true - type : \"custom:button-card\" template : \"custom_card_vncntdev_device_tracker\" entity : device_tracker.raspberry4 variables : custom_card_vncntdev_device_tracker_name : \"Raspberry Pi 4\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#requirements","text":"Setup the device tracker integration if you want to use WoL: Setup WoL integration","title":"Requirements"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#variables","text":"Variable Example Required Explanation entity device_tracker.pc true Icon of the Card custom_card_vncntdev_device_tracker_name \"PC\" false Custom name of device default: friendly name of device tracer custom_card_vncntdev_device_tracker_status_as_name true true swap label and name? default: false default: \"mdi:server\" custom_card_vncntdev_device_tracker_icon mdi:desktop-mac false Icon of the Card default: \"mdi:server\" custom_card_vncntdev_device_tracker_color_online \"var(--google-green)\" false Color of icon if device is online default: \"var(--google-green)\" custom_card_vncntdev_device_tracker_color_offline \"var(--google-red)\" false Color of icon if offline default: \"var(--google-red)\"","title":"Variables"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#template-code","text":"custom_card_vncntdev_device_tracker : template : \"card_generic\" variables : custom_card_vncntdev_device_tracker_name : custom_card_vncntdev_device_tracker_status_as_name : false custom_card_vncntdev_device_tracker_icon : \"mdi:server\" custom_card_vncntdev_device_tracker_color_online : \"var(--google-green)\" custom_card_vncntdev_device_tracker_color_offline : \"var(--google-red)\" tap_action : action : \"more-info\" icon : \"[[[return variables.custom_card_vncntdev_device_tracker_icon]]]\" label : | [[[ if (variables.custom_card_vncntdev_device_tracker_status_as_name) { return variables.custom_card_vncntdev_device_tracker_name !== null? variables.custom_card_vncntdev_device_tracker_name: entity.attributes.friendly_name; } else { return (entity.state == \"not_home\" || entity.state == \"off\") ? \"Offline\" : \"Online\"; } ]]] name : | [[[ if (!variables.custom_card_vncntdev_device_tracker_status_as_name) { return variables.custom_card_vncntdev_device_tracker_name !== null? variables.custom_card_vncntdev_device_tracker_name: entity.attributes.friendly_name; } else { return (entity.state == \"not_home\" || entity.state == \"off\") ? \"Offline\" : \"Online\"; } ]]] styles : icon : - color : > [[[ return (entity.state == \"not_home\" || entity.state == \"off\") ? variables.custom_card_vncntdev_device_tracker_color_offline: variables.custom_card_vncntdev_device_tracker_color_online; ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#note","text":"","title":"Note"},{"location":"usage/custom_cards/custom_card_water_heater/","text":"Custom-card \"Water heater\" \u00b6 NOTE This card is under review and is not ready to use! Credits \u00b6 Author: tben - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Usage \u00b6 Requirements \u00b6 This card needs the following to function correctly: Component / card required Note Variables \u00b6 Variable Example Required Explanation Template code \u00b6 HomeAssistant \u00b6 ... Example \u00b6 ... Note \u00b6 ...","title":"Water Heater Custom-card"},{"location":"usage/custom_cards/custom_card_water_heater/#custom-card-water-heater","text":"NOTE This card is under review and is not ready to use!","title":"Custom-card \"Water heater\""},{"location":"usage/custom_cards/custom_card_water_heater/#credits","text":"Author: tben - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_water_heater/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_card_water_heater/#usage","text":"","title":"Usage"},{"location":"usage/custom_cards/custom_card_water_heater/#requirements","text":"This card needs the following to function correctly: Component / card required Note","title":"Requirements"},{"location":"usage/custom_cards/custom_card_water_heater/#variables","text":"Variable Example Required Explanation","title":"Variables"},{"location":"usage/custom_cards/custom_card_water_heater/#template-code","text":"","title":"Template code"},{"location":"usage/custom_cards/custom_card_water_heater/#homeassistant","text":"...","title":"HomeAssistant"},{"location":"usage/custom_cards/custom_card_water_heater/#example","text":"...","title":"Example"},{"location":"usage/custom_cards/custom_card_water_heater/#note","text":"...","title":"Note"},{"location":"usage/custom_cards/custom_card_wsly_pollen/","text":"Custom-card \"Tomorrow.io Pollen card\" \u00b6 This is a custom-card to display the pollen index of the Tomorrow.io index Credits \u00b6 Author: wsly - 05/2022 Version: 1.0.1 Changelog \u00b6 1.0.0 Initial release. 1.0.1 Allow customizing the name and icon of each pollen index, with localized defaults. (`*_name`, `*_icon` variables) Requirements \u00b6 This card uses the following integration: Tomorrow.io Usage \u00b6 - type : 'custom:button-card' template : custom_card_wsly_pollen variables : custom_card_wsly_pollen_tree : sensor.tomorrow_io_home_tree_pollen_index custom_card_wsly_pollen_grass : sensor.tomorrow_io_home_grass_pollen_index custom_card_wsly_pollen_weed : sensor.tomorrow_io_home_weed_pollen_index Variables \u00b6 Variable Example Required Default Explanation custom_card_wsly_pollen_tree \"sensor.tomorrow_io_home_tree_pollen_index\" Yes The entity for the tree pollen index custom_card_wsly_pollen_grass \"sensor.tomorrow_io_home_grass_pollen_index\" Yes The entity for the grass pollen index custom_card_wsly_pollen_weed \"sensor.tomorrow_io_home_weed_pollen_index\" Yes The entity for the weed pollen index custom_card_wsly_pollen_tree_name \"Trees\" No \"Trees\" (localized) The name to display for the tree pollen index, or `false` to use the `custom_card_wsly_pollen_tree` entity's friendly name. custom_card_wsly_pollen_tree_icon \"mdi:tree\" No \"mdi:tree\" The icon to display for the tree pollen index, or `false` to use the `custom_card_wsly_pollen_tree` entity's icon. custom_card_wsly_pollen_grass_name \"Grass\" No \"Grass\" (localized) The name to display for the grass pollen index, or `false` to use the `custom_card_wsly_pollen_grass` entity's friendly name. custom_card_wsly_pollen_grass_icon \"mdi:grass\" No \"mdi:grass\" The icon to display for the grass pollen index, or `false` to use the `custom_card_wsly_pollen_grass` entity's icon. custom_card_wsly_pollen_weed_name \"Weeds\" No \"Weeds\" (localized) The name to display for the weed pollen index, or `false` to use the `custom_card_wsly_pollen_weed` entity's friendly name. custom_card_wsly_pollen_weed_icon \"mdi:flower-pollen\" No \"mdi:flower-pollen\" The icon to display for the weed pollen index, or `false` to use the `custom_card_wsly_pollen_weed` entity's icon. Template code \u00b6 Template Code custom_card_wsly_pollen.yaml --- ### Custom card Pollen ### custom_card_wsly_pollen : type : \"custom:button-card\" template : - \"custom_card_wsly_pollen_language_variables\" - \"list_3_items\" triggers_update : \"all\" styles : card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"custom_card_wsly_pollen_item\" entity : \"[[[ return variables.custom_card_wsly_pollen_tree ]]]\" name : \"[[[ return variables.custom_card_wsly_pollen_tree_name || states[variables.custom_card_wsly_pollen_tree].attributes.friendly_name ]]]\" icon : \"[[[ return variables.custom_card_wsly_pollen_tree_icon || states[variables.custom_card_wsly_pollen_tree].attributes.icon ]]]\" item2 : card : type : \"custom:button-card\" template : \"custom_card_wsly_pollen_item\" entity : \"[[[ return variables.custom_card_wsly_pollen_grass ]]]\" name : \"[[[ return variables.custom_card_wsly_pollen_grass_name || states[variables.custom_card_wsly_pollen_grass].attributes.friendly_name ]]]\" icon : \"[[[ return variables.custom_card_wsly_pollen_grass_icon || states[variables.custom_card_wsly_pollen_grass].attributes.icon ]]]\" item3 : card : type : \"custom:button-card\" template : \"custom_card_wsly_pollen_item\" entity : \"[[[ return variables.custom_card_wsly_pollen_weed ]]]\" name : \"[[[ return variables.custom_card_wsly_pollen_weed_name || states[variables.custom_card_wsly_pollen_weed].attributes.friendly_name ]]]\" icon : \"[[[ return variables.custom_card_wsly_pollen_weed_icon || states[variables.custom_card_wsly_pollen_weed].attributes.icon ]]]\" custom_card_wsly_pollen_item : type : \"custom:button-card\" template : - \"custom_card_wsly_pollen_language_variables\" - \"vertical_buttons\" label : > [[[ let pollen_state_label = variables.custom_card_wsly_pollen_none; if (entity.state == \"very_low\") pollen_state_label = variables.custom_card_wsly_pollen_very_low; else if (entity.state == \"low\") pollen_state_label = variables.custom_card_wsly_pollen_low; else if (entity.state == \"medium\") pollen_state_label = variables.custom_card_wsly_pollen_medium; else if (entity.state == \"high\") pollen_state_label = variables.custom_card_wsly_pollen_high; else if (entity.state == \"very_high\") pollen_state_label = variables.custom_card_wsly_pollen_very_high; return pollen_state_label; ]]] state : - value : \"none\" styles : icon : - color : \"rgba(var(--color-grey), 1)\" img_cell : - background-color : \"rgba(var(--color-grey), 0.2)\" - value : \"very_low\" styles : icon : - color : \"rgba(var(--color-green), 1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" - value : \"low\" styles : icon : - color : \"rgba(241, 196, 15, 1)\" img_cell : - background-color : \"rgba(241, 196, 15, 0.2)\" - value : \"medium\" styles : icon : - color : \"rgba(243, 156, 18, 1)\" img_cell : - background-color : \"rgba(243, 156, 18, 0.2)\" - value : \"high\" styles : icon : - color : \"rgba(231, 76, 60, 1)\" img_cell : - background-color : \"rgba(231, 76, 60, 0.2)\" - value : \"very_high\" styles : icon : - color : \"rgba(var(--color-pink), 1)\" img_cell : - background-color : \"rgba(var(--color-pink), 0.2)\" styles : card : - box-shadow : \"none\" - border-radius : \"var(--border-radius)\" custom_fields : extreme : - border-radius : \"50%\" - position : \"absolute\" - margin-left : \"auto\" - margin-right : \"auto\" - left : \"38px\" - right : \"0\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : \"rgba(var(--color-red),1)\" - color : \"white\" custom_fields : extreme : > [[[ if (entity.state == \"very_high\"){ return `<ha-icon icon=\"mdi:exclamation-thick\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>` } ]]]","title":"Tomorrow.io Pollen card"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#custom-card-tomorrowio-pollen-card","text":"This is a custom-card to display the pollen index of the Tomorrow.io index","title":"Custom-card \"Tomorrow.io Pollen card\""},{"location":"usage/custom_cards/custom_card_wsly_pollen/#credits","text":"Author: wsly - 05/2022 Version: 1.0.1","title":"Credits"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#changelog","text":"1.0.0 Initial release. 1.0.1 Allow customizing the name and icon of each pollen index, with localized defaults. (`*_name`, `*_icon` variables)","title":"Changelog"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#requirements","text":"This card uses the following integration: Tomorrow.io","title":"Requirements"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#usage","text":"- type : 'custom:button-card' template : custom_card_wsly_pollen variables : custom_card_wsly_pollen_tree : sensor.tomorrow_io_home_tree_pollen_index custom_card_wsly_pollen_grass : sensor.tomorrow_io_home_grass_pollen_index custom_card_wsly_pollen_weed : sensor.tomorrow_io_home_weed_pollen_index","title":"Usage"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#variables","text":"Variable Example Required Default Explanation custom_card_wsly_pollen_tree \"sensor.tomorrow_io_home_tree_pollen_index\" Yes The entity for the tree pollen index custom_card_wsly_pollen_grass \"sensor.tomorrow_io_home_grass_pollen_index\" Yes The entity for the grass pollen index custom_card_wsly_pollen_weed \"sensor.tomorrow_io_home_weed_pollen_index\" Yes The entity for the weed pollen index custom_card_wsly_pollen_tree_name \"Trees\" No \"Trees\" (localized) The name to display for the tree pollen index, or `false` to use the `custom_card_wsly_pollen_tree` entity's friendly name. custom_card_wsly_pollen_tree_icon \"mdi:tree\" No \"mdi:tree\" The icon to display for the tree pollen index, or `false` to use the `custom_card_wsly_pollen_tree` entity's icon. custom_card_wsly_pollen_grass_name \"Grass\" No \"Grass\" (localized) The name to display for the grass pollen index, or `false` to use the `custom_card_wsly_pollen_grass` entity's friendly name. custom_card_wsly_pollen_grass_icon \"mdi:grass\" No \"mdi:grass\" The icon to display for the grass pollen index, or `false` to use the `custom_card_wsly_pollen_grass` entity's icon. custom_card_wsly_pollen_weed_name \"Weeds\" No \"Weeds\" (localized) The name to display for the weed pollen index, or `false` to use the `custom_card_wsly_pollen_weed` entity's friendly name. custom_card_wsly_pollen_weed_icon \"mdi:flower-pollen\" No \"mdi:flower-pollen\" The icon to display for the weed pollen index, or `false` to use the `custom_card_wsly_pollen_weed` entity's icon.","title":"Variables"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#template-code","text":"Template Code custom_card_wsly_pollen.yaml --- ### Custom card Pollen ### custom_card_wsly_pollen : type : \"custom:button-card\" template : - \"custom_card_wsly_pollen_language_variables\" - \"list_3_items\" triggers_update : \"all\" styles : card : - border-radius : \"var(--border-radius)\" - box-shadow : \"var(--box-shadow)\" custom_fields : item1 : card : type : \"custom:button-card\" template : \"custom_card_wsly_pollen_item\" entity : \"[[[ return variables.custom_card_wsly_pollen_tree ]]]\" name : \"[[[ return variables.custom_card_wsly_pollen_tree_name || states[variables.custom_card_wsly_pollen_tree].attributes.friendly_name ]]]\" icon : \"[[[ return variables.custom_card_wsly_pollen_tree_icon || states[variables.custom_card_wsly_pollen_tree].attributes.icon ]]]\" item2 : card : type : \"custom:button-card\" template : \"custom_card_wsly_pollen_item\" entity : \"[[[ return variables.custom_card_wsly_pollen_grass ]]]\" name : \"[[[ return variables.custom_card_wsly_pollen_grass_name || states[variables.custom_card_wsly_pollen_grass].attributes.friendly_name ]]]\" icon : \"[[[ return variables.custom_card_wsly_pollen_grass_icon || states[variables.custom_card_wsly_pollen_grass].attributes.icon ]]]\" item3 : card : type : \"custom:button-card\" template : \"custom_card_wsly_pollen_item\" entity : \"[[[ return variables.custom_card_wsly_pollen_weed ]]]\" name : \"[[[ return variables.custom_card_wsly_pollen_weed_name || states[variables.custom_card_wsly_pollen_weed].attributes.friendly_name ]]]\" icon : \"[[[ return variables.custom_card_wsly_pollen_weed_icon || states[variables.custom_card_wsly_pollen_weed].attributes.icon ]]]\" custom_card_wsly_pollen_item : type : \"custom:button-card\" template : - \"custom_card_wsly_pollen_language_variables\" - \"vertical_buttons\" label : > [[[ let pollen_state_label = variables.custom_card_wsly_pollen_none; if (entity.state == \"very_low\") pollen_state_label = variables.custom_card_wsly_pollen_very_low; else if (entity.state == \"low\") pollen_state_label = variables.custom_card_wsly_pollen_low; else if (entity.state == \"medium\") pollen_state_label = variables.custom_card_wsly_pollen_medium; else if (entity.state == \"high\") pollen_state_label = variables.custom_card_wsly_pollen_high; else if (entity.state == \"very_high\") pollen_state_label = variables.custom_card_wsly_pollen_very_high; return pollen_state_label; ]]] state : - value : \"none\" styles : icon : - color : \"rgba(var(--color-grey), 1)\" img_cell : - background-color : \"rgba(var(--color-grey), 0.2)\" - value : \"very_low\" styles : icon : - color : \"rgba(var(--color-green), 1)\" img_cell : - background-color : \"rgba(var(--color-green), 0.2)\" - value : \"low\" styles : icon : - color : \"rgba(241, 196, 15, 1)\" img_cell : - background-color : \"rgba(241, 196, 15, 0.2)\" - value : \"medium\" styles : icon : - color : \"rgba(243, 156, 18, 1)\" img_cell : - background-color : \"rgba(243, 156, 18, 0.2)\" - value : \"high\" styles : icon : - color : \"rgba(231, 76, 60, 1)\" img_cell : - background-color : \"rgba(231, 76, 60, 0.2)\" - value : \"very_high\" styles : icon : - color : \"rgba(var(--color-pink), 1)\" img_cell : - background-color : \"rgba(var(--color-pink), 0.2)\" styles : card : - box-shadow : \"none\" - border-radius : \"var(--border-radius)\" custom_fields : extreme : - border-radius : \"50%\" - position : \"absolute\" - margin-left : \"auto\" - margin-right : \"auto\" - left : \"38px\" - right : \"0\" - top : \"8px\" - height : \"16px\" - width : \"16px\" - border : \"2px solid var(--card-background-color)\" - font-size : \"12px\" - line-height : \"14px\" - background-color : \"rgba(var(--color-red),1)\" - color : \"white\" custom_fields : extreme : > [[[ if (entity.state == \"very_high\"){ return `<ha-icon icon=\"mdi:exclamation-thick\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"></ha-icon>` } ]]]","title":"Template code"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/","text":"Custom-card \"Counter Lights/Cover Card\" \u00b6 This is a custom-card to display number of lights on or covers open. Credits \u00b6 Author: yagrasdemonde - 04/2022 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release. Requirements \u00b6 This card needs sensor counting lights/covers you want: template : - sensor : - name : \"lights on\" unique_id : lights_on icon : mdi:lightbulb-on-outline state : > {% set lights = [ states.light.living_room, states.light.bedroom, states.light.bathroom, states.switch.kitchen, ] %} {{ lights | selectattr('state','eq','on') | list | count }} - name : \"covers open\" unique_id : covers_open icon : mdi:window-shutter-open state : > {% set covers = [ states.cover.bedroom, states.cover.livingroom1, states.cover.livingroom2, ] %} {{ covers | selectattr('state','eq','open') | list | count }} Usage \u00b6 For lights - type : \"custom:button-card\" template : custom_card_yagrasdemonde_lights_count entity : sensor.lights_on For covers - type : \"custom:button-card\" template : custom_card_yagrasdemonde_lights_count entity : sensor.covers_open variables : ulm_custom_card_yagrasdemonde_lights_count_type : \"cover\" ulm_custom_card_yagrasdemonde_lights_count_icon_off : \"mdi:window-shutter\" ulm_custom_card_yagrasdemonde_lights_count_color : \"blue\" Variables \u00b6 Variable Example Required Default Explanation ulm_custom_card_yagrasdemonde_lights_count_type \"cover\" No \"light\" The entity type used for translations Values available : cover, light ulm_custom_card_yagrasdemonde_lights_count_icon_on \"mdi:lightbulb-on-outline\" No Sensor Icon Overwrites the sensor icon used for on/open state ulm_custom_card_yagrasdemonde_lights_count_icon_off \"mdi:lightbulb-outline\" No \"mdi:lightbulb-outline\" Icon for state off/closed ulm_custom_card_yagrasdemonde_lights_count_color \"red\" No \"yellow\" Style the color of icon, name and card (if applicable) Values available : blue, green, grey, pink, purple, red, yellow ulm_custom_card_yagrasdemonde_lights_count_force_background_color true No false Force background card color even in light mode Template code custom_card_yagrasdemonde_lights_count : show_name : true template : - \"ulm_custom_card_yagrasdemonde_lights_count_language_variables\" - \"icon_only\" - \"ulm_language_variables\" variables : ulm_custom_card_yagrasdemonde_lights_count_icon_on : \"[[[ return entity.attributes.icon ]]]\" ulm_custom_card_yagrasdemonde_lights_count_icon_off : \"mdi:lightbulb-outline\" ulm_custom_card_yagrasdemonde_lights_count_color : \"yellow\" ulm_custom_card_yagrasdemonde_lights_count_force_background_color : false tap_action : action : \"none\" name : >- [[[ var entity_count_O = ''; var entity_count_1 = ''; var entity_count_many = ''; if(variables.ulm_custom_card_yagrasdemonde_lights_count_type == \"cover\") { entity_count_O = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_0; entity_count_1 = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_1; entity_count_many = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_many; } else { entity_count_O = variables.ulm_custom_card_yagrasdemonde_lights_count_light_0; entity_count_1 = variables.ulm_custom_card_yagrasdemonde_lights_count_light_1; entity_count_many = variables.ulm_custom_card_yagrasdemonde_lights_count_light_many; } if (entity.state != \"unavailable\") { if (entity.state == 0) { return entity_count_O; } else if (entity.state == 1) { return entity_count_1; } else { return entity.state + \" \" + entity_count_many; } } else { return variables.ulm_unavailable; } ]]] icon : > [[[ if (entity.state == 0) { return variables.ulm_custom_card_yagrasdemonde_lights_count_icon_off; } else { return variables.ulm_custom_card_yagrasdemonde_lights_count_icon_on; } ]]] styles : icon : - color : > [[[ if (entity.state == 0) { return 'rgba(var(--color-theme),0.2)'; } else { return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),1)'; } ]]] name : - align-self : \"center\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - background-color : > [[[ if (entity.state == 0) { return 'rgba(var(--color-theme),0.05)'; } else { return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),0.2)'; } ]]] grid : - grid-template-areas : \"'i n'\" - grid-template-columns : \"min-content min-content\" - grid-template-rows : \"min-content\" state : - value : 1 operator : '>=' styles : card : - background-color : >- [[[ if (variables.ulm_custom_card_yagrasdemonde_lights_count_force_background_color == true || hass.themes.darkMode){ return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '-text),0.1)'; } else { return 'rgba(var(--color-background-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),var(--opacity-bg))'; } ]]] name : - color : \"[[[ return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '-text),1)' ]]]\"","title":"Counter Lights/Covers Card Custom-card"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#custom-card-counter-lightscover-card","text":"This is a custom-card to display number of lights on or covers open.","title":"Custom-card \"Counter Lights/Cover Card\""},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#credits","text":"Author: yagrasdemonde - 04/2022 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#changelog","text":"1.0.0 Initial release.","title":"Changelog"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#requirements","text":"This card needs sensor counting lights/covers you want: template : - sensor : - name : \"lights on\" unique_id : lights_on icon : mdi:lightbulb-on-outline state : > {% set lights = [ states.light.living_room, states.light.bedroom, states.light.bathroom, states.switch.kitchen, ] %} {{ lights | selectattr('state','eq','on') | list | count }} - name : \"covers open\" unique_id : covers_open icon : mdi:window-shutter-open state : > {% set covers = [ states.cover.bedroom, states.cover.livingroom1, states.cover.livingroom2, ] %} {{ covers | selectattr('state','eq','open') | list | count }}","title":"Requirements"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#usage","text":"For lights - type : \"custom:button-card\" template : custom_card_yagrasdemonde_lights_count entity : sensor.lights_on For covers - type : \"custom:button-card\" template : custom_card_yagrasdemonde_lights_count entity : sensor.covers_open variables : ulm_custom_card_yagrasdemonde_lights_count_type : \"cover\" ulm_custom_card_yagrasdemonde_lights_count_icon_off : \"mdi:window-shutter\" ulm_custom_card_yagrasdemonde_lights_count_color : \"blue\"","title":"Usage"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#variables","text":"Variable Example Required Default Explanation ulm_custom_card_yagrasdemonde_lights_count_type \"cover\" No \"light\" The entity type used for translations Values available : cover, light ulm_custom_card_yagrasdemonde_lights_count_icon_on \"mdi:lightbulb-on-outline\" No Sensor Icon Overwrites the sensor icon used for on/open state ulm_custom_card_yagrasdemonde_lights_count_icon_off \"mdi:lightbulb-outline\" No \"mdi:lightbulb-outline\" Icon for state off/closed ulm_custom_card_yagrasdemonde_lights_count_color \"red\" No \"yellow\" Style the color of icon, name and card (if applicable) Values available : blue, green, grey, pink, purple, red, yellow ulm_custom_card_yagrasdemonde_lights_count_force_background_color true No false Force background card color even in light mode Template code custom_card_yagrasdemonde_lights_count : show_name : true template : - \"ulm_custom_card_yagrasdemonde_lights_count_language_variables\" - \"icon_only\" - \"ulm_language_variables\" variables : ulm_custom_card_yagrasdemonde_lights_count_icon_on : \"[[[ return entity.attributes.icon ]]]\" ulm_custom_card_yagrasdemonde_lights_count_icon_off : \"mdi:lightbulb-outline\" ulm_custom_card_yagrasdemonde_lights_count_color : \"yellow\" ulm_custom_card_yagrasdemonde_lights_count_force_background_color : false tap_action : action : \"none\" name : >- [[[ var entity_count_O = ''; var entity_count_1 = ''; var entity_count_many = ''; if(variables.ulm_custom_card_yagrasdemonde_lights_count_type == \"cover\") { entity_count_O = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_0; entity_count_1 = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_1; entity_count_many = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_many; } else { entity_count_O = variables.ulm_custom_card_yagrasdemonde_lights_count_light_0; entity_count_1 = variables.ulm_custom_card_yagrasdemonde_lights_count_light_1; entity_count_many = variables.ulm_custom_card_yagrasdemonde_lights_count_light_many; } if (entity.state != \"unavailable\") { if (entity.state == 0) { return entity_count_O; } else if (entity.state == 1) { return entity_count_1; } else { return entity.state + \" \" + entity_count_many; } } else { return variables.ulm_unavailable; } ]]] icon : > [[[ if (entity.state == 0) { return variables.ulm_custom_card_yagrasdemonde_lights_count_icon_off; } else { return variables.ulm_custom_card_yagrasdemonde_lights_count_icon_on; } ]]] styles : icon : - color : > [[[ if (entity.state == 0) { return 'rgba(var(--color-theme),0.2)'; } else { return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),1)'; } ]]] name : - align-self : \"center\" - justify-self : \"start\" - font-weight : \"bold\" - font-size : \"14px\" - margin-left : \"12px\" - filter : \"opacity(100%)\" img_cell : - background-color : > [[[ if (entity.state == 0) { return 'rgba(var(--color-theme),0.05)'; } else { return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),0.2)'; } ]]] grid : - grid-template-areas : \"'i n'\" - grid-template-columns : \"min-content min-content\" - grid-template-rows : \"min-content\" state : - value : 1 operator : '>=' styles : card : - background-color : >- [[[ if (variables.ulm_custom_card_yagrasdemonde_lights_count_force_background_color == true || hass.themes.darkMode){ return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '-text),0.1)'; } else { return 'rgba(var(--color-background-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),var(--opacity-bg))'; } ]]] name : - color : \"[[[ return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '-text),1)' ]]]\"","title":"Variables"},{"location":"usage/custom_cards/custom_chip_myenedis/","text":"Custom-chip \"My Enedis\" \u00b6 The myenedis you can control a input_number entity Credits \u00b6 Author: acesyde - 2021 Version: 1.0.0 Changelog \u00b6 1.0.0 Initial release Why not the default chip_power_consumption \u00b6 The my enedis integration doesn't split the cost and the consumption in a specific sensor All values are in the main sensor under the attributes item Split Heures Creuses (HC) and Heures pleines (HP) Usage \u00b6 - type : \"custom:button-card\" template : custom_chip_myenedis entity : sensor.myenedis_123456789 variables : ulm_chip_separate_hp_hc : true Requirements \u00b6 My Enedis integration Variables \u00b6 Variable Default Required Notes entity Your MyEnedis Sensor ulm_chip_separate_hp_hc false Separate HC/HC in the chip Template code \u00b6 --- --- ### Chip My Enedis ### custom_chip_myenedis : template : - \"chips\" - \"ulm_language_variables\" variables : ulm_chip_separate_hp_hc : false ulm_chip_unit_of_measurement : \"[[[ return entity.attributes.unit_of_measurement ]]]\" triggers_update : \"all\" label : | [[[ var result = \"\ud83d\udcb0 \" + parseFloat(entity.attributes.daily_cost).toFixed(1) + \" \u20ac\"; if(variables.ulm_chip_separate_hp_hc) { result += \" \u2600\ufe0f \" + parseFloat(entity.attributes.yesterday_HC).toFixed(1) + \" \" + variables.ulm_chip_unit_of_measurement; result += \" \ud83c\udf11 \" + parseFloat(entity.attributes.yesterday_HP).toFixed(1) + \" \" + variables.ulm_chip_unit_of_measurement; } else { result += \" \u26a1 \" + parseFloat(entity.attributes.yesterday_HCHP).toFixed(1) + \" \" + variables.ulm_chip_unit_of_measurement; } return result; ]]]","title":"My Enedis Chip Custom-card"},{"location":"usage/custom_cards/custom_chip_myenedis/#custom-chip-my-enedis","text":"The myenedis you can control a input_number entity","title":"Custom-chip \"My Enedis\""},{"location":"usage/custom_cards/custom_chip_myenedis/#credits","text":"Author: acesyde - 2021 Version: 1.0.0","title":"Credits"},{"location":"usage/custom_cards/custom_chip_myenedis/#changelog","text":"1.0.0 Initial release","title":"Changelog"},{"location":"usage/custom_cards/custom_chip_myenedis/#why-not-the-default-chip_power_consumption","text":"The my enedis integration doesn't split the cost and the consumption in a specific sensor All values are in the main sensor under the attributes item Split Heures Creuses (HC) and Heures pleines (HP)","title":"Why not the default chip_power_consumption"},{"location":"usage/custom_cards/custom_chip_myenedis/#usage","text":"- type : \"custom:button-card\" template : custom_chip_myenedis entity : sensor.myenedis_123456789 variables : ulm_chip_separate_hp_hc : true","title":"Usage"},{"location":"usage/custom_cards/custom_chip_myenedis/#requirements","text":"My Enedis integration","title":"Requirements"},{"location":"usage/custom_cards/custom_chip_myenedis/#variables","text":"Variable Default Required Notes entity Your MyEnedis Sensor ulm_chip_separate_hp_hc false Separate HC/HC in the chip","title":"Variables"},{"location":"usage/custom_cards/custom_chip_myenedis/#template-code","text":"--- --- ### Chip My Enedis ### custom_chip_myenedis : template : - \"chips\" - \"ulm_language_variables\" variables : ulm_chip_separate_hp_hc : false ulm_chip_unit_of_measurement : \"[[[ return entity.attributes.unit_of_measurement ]]]\" triggers_update : \"all\" label : | [[[ var result = \"\ud83d\udcb0 \" + parseFloat(entity.attributes.daily_cost).toFixed(1) + \" \u20ac\"; if(variables.ulm_chip_separate_hp_hc) { result += \" \u2600\ufe0f \" + parseFloat(entity.attributes.yesterday_HC).toFixed(1) + \" \" + variables.ulm_chip_unit_of_measurement; result += \" \ud83c\udf11 \" + parseFloat(entity.attributes.yesterday_HP).toFixed(1) + \" \" + variables.ulm_chip_unit_of_measurement; } else { result += \" \u26a1 \" + parseFloat(entity.attributes.yesterday_HCHP).toFixed(1) + \" \" + variables.ulm_chip_unit_of_measurement; } return result; ]]]","title":"Template code"},{"location":"usage/layout/","text":"Aligning cards \u00b6 If you want to alight cards to the center, right. Or only 1 card on the right it can be done using a blank-card . Center # Card in the Center horizontal_stack : cards : - type : \"custom:button-card\" color_type : blank-card - type : custom:button-card template : chip_icon_label label : Your Card Here - type : \"custom:button-card\" color_type : blank-card Right # Card in the Center horizontal_stack : cards : - type : \"custom:button-card\" color_type : blank-card - type : custom:button-card template : chip_icon_label label : Your Card Here Left & Right # Card in the Center horizontal_stack : cards : - type : custom:button-card template : chip_icon_label label : Your left card here - type : \"custom:button-card\" color_type : blank-card - type : custom:button-card template : chip_icon_label label : Your right card here","title":"Layout Formatting"},{"location":"usage/layout/#aligning-cards","text":"If you want to alight cards to the center, right. Or only 1 card on the right it can be done using a blank-card . Center # Card in the Center horizontal_stack : cards : - type : \"custom:button-card\" color_type : blank-card - type : custom:button-card template : chip_icon_label label : Your Card Here - type : \"custom:button-card\" color_type : blank-card Right # Card in the Center horizontal_stack : cards : - type : \"custom:button-card\" color_type : blank-card - type : custom:button-card template : chip_icon_label label : Your Card Here Left & Right # Card in the Center horizontal_stack : cards : - type : custom:button-card template : chip_icon_label label : Your left card here - type : \"custom:button-card\" color_type : blank-card - type : custom:button-card template : chip_icon_label label : Your right card here","title":"Aligning cards"},{"location":"usage/popups/popup_light/","text":"Light popup \u00b6 Requirements \u00b6 My Cards Bundle aka slider-card (download for HACS) Light Entity Card (download for HACS) Card compatibility \u00b6 This popup is displayed using hold_action and it is compatible with the following cards/chips : card_light How to use \u00b6 To enable this popup, add the variable ulm_card_light_enable_popup and set to true . Warning This is a different approach as the other popup_cards use. For example : - type : \"custom:button-card\" template : - card_light entity : light.cuisine variables : ulm_card_light_enable_popup : true Credits \u00b6 Designed by schumijo and bavo (special thanks to him for his help on this development)).","title":"Light Popup"},{"location":"usage/popups/popup_light/#light-popup","text":"","title":"Light popup"},{"location":"usage/popups/popup_light/#requirements","text":"My Cards Bundle aka slider-card (download for HACS) Light Entity Card (download for HACS)","title":"Requirements"},{"location":"usage/popups/popup_light/#card-compatibility","text":"This popup is displayed using hold_action and it is compatible with the following cards/chips : card_light","title":"Card compatibility"},{"location":"usage/popups/popup_light/#how-to-use","text":"To enable this popup, add the variable ulm_card_light_enable_popup and set to true . Warning This is a different approach as the other popup_cards use. For example : - type : \"custom:button-card\" template : - card_light entity : light.cuisine variables : ulm_card_light_enable_popup : true","title":"How to use"},{"location":"usage/popups/popup_light/#credits","text":"Designed by schumijo and bavo (special thanks to him for his help on this development)).","title":"Credits"},{"location":"usage/popups/popup_media_player/","text":"Media Player popup \u00b6 Card compatibility \u00b6 This popup is displayed using hold_action and it is compatible with the following cards/chips : card_media_player How to use \u00b6 To enable this popup, add the variable ulm_card_media_player_enable_popup and set to true . !!! warning This is a different approach as the other popup_cards use. For example : - type : \"custom:button-card\" template : - card_media_player entity : media_player.lounge_room variables : ulm_card_media_player_enable_popup : true Credits \u00b6 Designed by schumijo and bavo (special thanks to him for his help on this development)).","title":"Media_player Popup"},{"location":"usage/popups/popup_media_player/#media-player-popup","text":"","title":"Media Player popup"},{"location":"usage/popups/popup_media_player/#card-compatibility","text":"This popup is displayed using hold_action and it is compatible with the following cards/chips : card_media_player","title":"Card compatibility"},{"location":"usage/popups/popup_media_player/#how-to-use","text":"To enable this popup, add the variable ulm_card_media_player_enable_popup and set to true . !!! warning This is a different approach as the other popup_cards use. For example : - type : \"custom:button-card\" template : - card_media_player entity : media_player.lounge_room variables : ulm_card_media_player_enable_popup : true","title":"How to use"},{"location":"usage/popups/popup_media_player/#credits","text":"Designed by schumijo and bavo (special thanks to him for his help on this development)).","title":"Credits"},{"location":"usage/popups/popup_power_outlet/","text":"Power outlet popup \u00b6 Requirements \u00b6 mini-graph-card (download for HACS) Card compatibility \u00b6 This popup is displayed using hold_action and it is compatible with the following cards/chips : card_generic card_generic_swap card_binary_sensor card_binary_sensor_alert card_power_outlet card_input_boolean card_battery Variables \u00b6 Variable Example Required Explanation ulm_popup_power_outlet_sensor1 sensor.metered_power yes Sensor entity displayed on top left button ulm_popup_power_outlet_sensor2 sensor.metered_electric_consumed yes Sensor entity displayed on top right button ulm_popup_power_outlet_graph_sensor sensor.metered_power yes Sensor entity displayed on graph How to use \u00b6 To enable this popup, you need to add the popup_power_outlet template on your card. And also the previously explained variables. For example : - type : \"custom:button-card\" template : - card_power_outlet - popup_power_outlet variables : ulm_card_power_outlet_consumption_sensor : sensor.metered_wall_plug_switch_power_3 ulm_popup_power_outlet_sensor1 : sensor.metered_wall_plug_switch_power_3 ulm_popup_power_outlet_sensor2 : sensor.metered_wall_plug_switch_electric_consumed_kwh_2 ulm_popup_power_outlet_graph_sensor : sensor.metered_wall_plug_switch_power_3 entity : switch.metered_wall_plug_switch_2 name : Prise t\u00e9l\u00e9phone Credits \u00b6 Designed by schumijo and bavo (special thanks to him for his help on this development)).","title":"Power Outlet Popup"},{"location":"usage/popups/popup_power_outlet/#power-outlet-popup","text":"","title":"Power outlet popup"},{"location":"usage/popups/popup_power_outlet/#requirements","text":"mini-graph-card (download for HACS)","title":"Requirements"},{"location":"usage/popups/popup_power_outlet/#card-compatibility","text":"This popup is displayed using hold_action and it is compatible with the following cards/chips : card_generic card_generic_swap card_binary_sensor card_binary_sensor_alert card_power_outlet card_input_boolean card_battery","title":"Card compatibility"},{"location":"usage/popups/popup_power_outlet/#variables","text":"Variable Example Required Explanation ulm_popup_power_outlet_sensor1 sensor.metered_power yes Sensor entity displayed on top left button ulm_popup_power_outlet_sensor2 sensor.metered_electric_consumed yes Sensor entity displayed on top right button ulm_popup_power_outlet_graph_sensor sensor.metered_power yes Sensor entity displayed on graph","title":"Variables"},{"location":"usage/popups/popup_power_outlet/#how-to-use","text":"To enable this popup, you need to add the popup_power_outlet template on your card. And also the previously explained variables. For example : - type : \"custom:button-card\" template : - card_power_outlet - popup_power_outlet variables : ulm_card_power_outlet_consumption_sensor : sensor.metered_wall_plug_switch_power_3 ulm_popup_power_outlet_sensor1 : sensor.metered_wall_plug_switch_power_3 ulm_popup_power_outlet_sensor2 : sensor.metered_wall_plug_switch_electric_consumed_kwh_2 ulm_popup_power_outlet_graph_sensor : sensor.metered_wall_plug_switch_power_3 entity : switch.metered_wall_plug_switch_2 name : Prise t\u00e9l\u00e9phone","title":"How to use"},{"location":"usage/popups/popup_power_outlet/#credits","text":"Designed by schumijo and bavo (special thanks to him for his help on this development)).","title":"Credits"},{"location":"usage/popups/popup_thermostat/","text":"Thermostat popup \u00b6 Card compatibility \u00b6 This popup is displayed using hold_action and it is compatible with the following cards/chips : card_thermostat How to use \u00b6 To enable this popup, add the variable ulm_card_thermostat_enable_popup and set to true . Warning This is a different approach as the other popup_cards use. For example : - type : \"custom:button-card\" template : card_thermostat entity : climate.thermostat variables : ulm_card_thermostat_enable_popup : true Credits \u00b6 Designed by schumijo","title":"Thermostat Popup"},{"location":"usage/popups/popup_thermostat/#thermostat-popup","text":"","title":"Thermostat popup"},{"location":"usage/popups/popup_thermostat/#card-compatibility","text":"This popup is displayed using hold_action and it is compatible with the following cards/chips : card_thermostat","title":"Card compatibility"},{"location":"usage/popups/popup_thermostat/#how-to-use","text":"To enable this popup, add the variable ulm_card_thermostat_enable_popup and set to true . Warning This is a different approach as the other popup_cards use. For example : - type : \"custom:button-card\" template : card_thermostat entity : climate.thermostat variables : ulm_card_thermostat_enable_popup : true","title":"How to use"},{"location":"usage/popups/popup_thermostat/#credits","text":"Designed by schumijo","title":"Credits"}]}